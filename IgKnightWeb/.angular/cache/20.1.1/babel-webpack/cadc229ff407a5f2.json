{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport let CharacterPairSupport = /*#__PURE__*/(() => {\n  class CharacterPairSupport {\n    static #_ = this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t';\n    static #_2 = this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t';\n    constructor(config) {\n      if (config.autoClosingPairs) {\n        this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n      } else if (config.brackets) {\n        this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({\n          open: b[0],\n          close: b[1]\n        }));\n      } else {\n        this._autoClosingPairs = [];\n      }\n      if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n        const docComment = config.__electricCharacterSupport.docComment;\n        // IDocComment is legacy, only partially supported\n        this._autoClosingPairs.push(new StandardAutoClosingPairConditional({\n          open: docComment.open,\n          close: docComment.close || ''\n        }));\n      }\n      this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n      this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n      this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n      return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n      return forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets;\n    }\n    getSurroundingPairs() {\n      return this._surroundingPairs;\n    }\n  }\n  return CharacterPairSupport;\n})();","map":{"version":3,"names":["StandardAutoClosingPairConditional","CharacterPairSupport","_","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES","_2","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS","constructor","config","autoClosingPairs","_autoClosingPairs","map","el","brackets","b","open","close","__electricCharacterSupport","docComment","push","_autoCloseBeforeForQuotes","autoCloseBefore","_autoCloseBeforeForBrackets","_surroundingPairs","surroundingPairs","getAutoClosingPairs","getAutoCloseBeforeSet","forQuotes","getSurroundingPairs"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t'; }\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t'; }\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n        this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return (forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets);\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kCAAkC,QAAQ,6BAA6B;AAChF,WAAaC,oBAAoB;EAA1B,MAAMA,oBAAoB,CAAC;IAAA,QAAAC,CAAA,GACrB,IAAI,CAACC,gDAAgD,GAAG,gBAAgB;IAAA,QAAAC,EAAA,GACxE,IAAI,CAACC,kDAAkD,GAAG,oBAAoB;IACvFC,WAAWA,CAACC,MAAM,EAAE;MAChB,IAAIA,MAAM,CAACC,gBAAgB,EAAE;QACzB,IAAI,CAACC,iBAAiB,GAAGF,MAAM,CAACC,gBAAgB,CAACE,GAAG,CAACC,EAAE,IAAI,IAAIX,kCAAkC,CAACW,EAAE,CAAC,CAAC;MAC1G,CAAC,MACI,IAAIJ,MAAM,CAACK,QAAQ,EAAE;QACtB,IAAI,CAACH,iBAAiB,GAAGF,MAAM,CAACK,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAI,IAAIb,kCAAkC,CAAC;UAAEc,IAAI,EAAED,CAAC,CAAC,CAAC,CAAC;UAAEE,KAAK,EAAEF,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC,CAAC;MAC1H,CAAC,MACI;QACD,IAAI,CAACJ,iBAAiB,GAAG,EAAE;MAC/B;MACA,IAAIF,MAAM,CAACS,0BAA0B,IAAIT,MAAM,CAACS,0BAA0B,CAACC,UAAU,EAAE;QACnF,MAAMA,UAAU,GAAGV,MAAM,CAACS,0BAA0B,CAACC,UAAU;QAC/D;QACA,IAAI,CAACR,iBAAiB,CAACS,IAAI,CAAC,IAAIlB,kCAAkC,CAAC;UAAEc,IAAI,EAAEG,UAAU,CAACH,IAAI;UAAEC,KAAK,EAAEE,UAAU,CAACF,KAAK,IAAI;QAAG,CAAC,CAAC,CAAC;MACjI;MACA,IAAI,CAACI,yBAAyB,GAAG,OAAOZ,MAAM,CAACa,eAAe,KAAK,QAAQ,GAAGb,MAAM,CAACa,eAAe,GAAGnB,oBAAoB,CAACE,gDAAgD;MAC5K,IAAI,CAACkB,2BAA2B,GAAG,OAAOd,MAAM,CAACa,eAAe,KAAK,QAAQ,GAAGb,MAAM,CAACa,eAAe,GAAGnB,oBAAoB,CAACI,kDAAkD;MAChL,IAAI,CAACiB,iBAAiB,GAAGf,MAAM,CAACgB,gBAAgB,IAAI,IAAI,CAACd,iBAAiB;IAC9E;IACAe,mBAAmBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACf,iBAAiB;IACjC;IACAgB,qBAAqBA,CAACC,SAAS,EAAE;MAC7B,OAAQA,SAAS,GAAG,IAAI,CAACP,yBAAyB,GAAG,IAAI,CAACE,2BAA2B;IACzF;IACAM,mBAAmBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACL,iBAAiB;IACjC;EACJ;EAAC,OA/BYrB,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}