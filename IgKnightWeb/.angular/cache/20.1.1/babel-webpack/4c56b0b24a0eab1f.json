{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { createWebWorker } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { WindowIntervalTimer } from '../../../base/browser/dom.js';\nimport { WorkerTextModelSyncClient } from '../../common/services/textModelSync/textModelSync.impl.js';\nimport { EditorWorkerHost } from '../../common/services/editorWorkerHost.js';\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n  const model = modelService.getModel(resource);\n  if (!model) {\n    return false;\n  }\n  if (model.isTooLargeForSyncing()) {\n    return false;\n  }\n  return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n  constructor(workerDescriptor, modelService, configurationService, logService, _languageConfigurationService, languageFeaturesService) {\n    var _this;\n    super();\n    _this = this;\n    this._languageConfigurationService = _languageConfigurationService;\n    this._modelService = modelService;\n    this._workerManager = this._register(new WorkerManager(workerDescriptor, this._modelService));\n    this._logService = logService;\n    // register default link-provider and default completions-provider\n    this._register(languageFeaturesService.linkProvider.register({\n      language: '*',\n      hasAccessToAllModels: true\n    }, {\n      provideLinks: function () {\n        var _ref = _asyncToGenerator(function* (model, token) {\n          if (!canSyncModel(_this._modelService, model.uri)) {\n            return Promise.resolve({\n              links: []\n            }); // File too large\n          }\n          const worker = yield _this._workerWithResources([model.uri]);\n          const links = yield worker.$computeLinks(model.uri.toString());\n          return links && {\n            links\n          };\n        });\n        return function provideLinks(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }));\n    this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, this._languageConfigurationService)));\n  }\n  dispose() {\n    super.dispose();\n  }\n  canComputeUnicodeHighlights(uri) {\n    return canSyncModel(this._modelService, uri);\n  }\n  computedUnicodeHighlights(uri, options, range) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const worker = yield _this2._workerWithResources([uri]);\n      return worker.$computeUnicodeHighlights(uri.toString(), options, range);\n    })();\n  }\n  computeDiff(original, modified, options, algorithm) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const worker = yield _this3._workerWithResources([original, modified], /* forceLargeModels */true);\n      const result = yield worker.$computeDiff(original.toString(), modified.toString(), options, algorithm);\n      if (!result) {\n        return null;\n      }\n      // Convert from space efficient JSON data to rich objects.\n      const diff = {\n        identical: result.identical,\n        quitEarly: result.quitEarly,\n        changes: toLineRangeMappings(result.changes),\n        moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n      };\n      return diff;\n      function toLineRangeMappings(changes) {\n        return changes.map(c => new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), c[4]?.map(c => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7])))));\n      }\n    })();\n  }\n  computeMoreMinimalEdits(_x3, _x4) {\n    var _this4 = this;\n    return _asyncToGenerator(function* (resource, edits, pretty = false) {\n      if (isNonEmptyArray(edits)) {\n        if (!canSyncModel(_this4._modelService, resource)) {\n          return Promise.resolve(edits); // File too large\n        }\n        const sw = StopWatch.create();\n        const result = _this4._workerWithResources([resource]).then(worker => worker.$computeMoreMinimalEdits(resource.toString(), edits, pretty));\n        result.finally(() => _this4._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n        return Promise.race([result, timeout(1000).then(() => edits)]);\n      } else {\n        return Promise.resolve(undefined);\n      }\n    }).apply(this, arguments);\n  }\n  canNavigateValueSet(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  navigateValueSet(resource, range, up) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const model = _this5._modelService.getModel(resource);\n      if (!model) {\n        return null;\n      }\n      const wordDefRegExp = _this5._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = wordDefRegExp.flags;\n      const worker = yield _this5._workerWithResources([resource]);\n      return worker.$navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n    })();\n  }\n  canComputeWordRanges(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  computeWordRanges(resource, range) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const model = _this6._modelService.getModel(resource);\n      if (!model) {\n        return Promise.resolve(null);\n      }\n      const wordDefRegExp = _this6._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = wordDefRegExp.flags;\n      const worker = yield _this6._workerWithResources([resource]);\n      return worker.$computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n    })();\n  }\n  findSectionHeaders(uri, options) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const worker = yield _this7._workerWithResources([uri]);\n      return worker.$findSectionHeaders(uri.toString(), options);\n    })();\n  }\n  computeDefaultDocumentColors(uri) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const worker = yield _this8._workerWithResources([uri]);\n      return worker.$computeDefaultDocumentColors(uri.toString());\n    })();\n  }\n  _workerWithResources(_x5) {\n    var _this9 = this;\n    return _asyncToGenerator(function* (resources, forceLargeModels = false) {\n      const worker = yield _this9._workerManager.withWorker();\n      return yield worker.workerWithSyncedResources(resources, forceLargeModels);\n    }).apply(this, arguments);\n  }\n};\nEditorWorkerService = __decorate([__param(1, IModelService), __param(2, ITextResourceConfigurationService), __param(3, ILogService), __param(4, ILanguageConfigurationService), __param(5, ILanguageFeaturesService)], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n  constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n    this.languageConfigurationService = languageConfigurationService;\n    this._debugDisplayName = 'wordbasedCompletions';\n    this._workerManager = workerManager;\n    this._configurationService = configurationService;\n    this._modelService = modelService;\n  }\n  provideCompletionItems(model, position) {\n    var _this0 = this;\n    return _asyncToGenerator(function* () {\n      const config = _this0._configurationService.getValue(model.uri, position, 'editor');\n      if (config.wordBasedSuggestions === 'off') {\n        return undefined;\n      }\n      const models = [];\n      if (config.wordBasedSuggestions === 'currentDocument') {\n        // only current file and only if not too large\n        if (canSyncModel(_this0._modelService, model.uri)) {\n          models.push(model.uri);\n        }\n      } else {\n        // either all files or files of same language\n        for (const candidate of _this0._modelService.getModels()) {\n          if (!canSyncModel(_this0._modelService, candidate.uri)) {\n            continue;\n          }\n          if (candidate === model) {\n            models.unshift(candidate.uri);\n          } else if (config.wordBasedSuggestions === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n            models.push(candidate.uri);\n          }\n        }\n      }\n      if (models.length === 0) {\n        return undefined; // File too large, no other files\n      }\n      const wordDefRegExp = _this0.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n      const word = model.getWordAtPosition(position);\n      const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n      const insert = replace.setEndPosition(position.lineNumber, position.column);\n      const client = yield _this0._workerManager.withWorker();\n      const data = yield client.textualSuggest(models, word?.word, wordDefRegExp);\n      if (!data) {\n        return undefined;\n      }\n      return {\n        duration: data.duration,\n        suggestions: data.words.map(word => {\n          return {\n            kind: 18 /* languages.CompletionItemKind.Text */,\n            label: word,\n            insertText: word,\n            range: {\n              insert,\n              replace\n            }\n          };\n        })\n      };\n    })();\n  }\n}\nlet WorkerManager = class WorkerManager extends Disposable {\n  constructor(_workerDescriptor, modelService) {\n    super();\n    this._workerDescriptor = _workerDescriptor;\n    this._modelService = modelService;\n    this._editorWorkerClient = null;\n    this._lastWorkerUsedTime = new Date().getTime();\n    const stopWorkerInterval = this._register(new WindowIntervalTimer());\n    stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2), mainWindow);\n    this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n  }\n  dispose() {\n    if (this._editorWorkerClient) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n    super.dispose();\n  }\n  /**\n   * Check if the model service has no more models and stop the worker if that is the case.\n   */\n  _checkStopEmptyWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    const models = this._modelService.getModels();\n    if (models.length === 0) {\n      // There are no more models => nothing possible for me to do\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  /**\n   * Check if the worker has been idle for a while and then stop it.\n   */\n  _checkStopIdleWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    const timeSinceLastWorkerUsedTime = new Date().getTime() - this._lastWorkerUsedTime;\n    if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  withWorker() {\n    this._lastWorkerUsedTime = new Date().getTime();\n    if (!this._editorWorkerClient) {\n      this._editorWorkerClient = new EditorWorkerClient(this._workerDescriptor, false, this._modelService);\n    }\n    return Promise.resolve(this._editorWorkerClient);\n  }\n};\nWorkerManager = __decorate([__param(1, IModelService)], WorkerManager);\nclass SynchronousWorkerClient {\n  constructor(instance) {\n    this._instance = instance;\n    this.proxy = this._instance;\n  }\n  dispose() {\n    this._instance.dispose();\n  }\n  setChannel(channel, handler) {\n    throw new Error(`Not supported`);\n  }\n}\nlet EditorWorkerClient = class EditorWorkerClient extends Disposable {\n  constructor(_workerDescriptor, keepIdleModels, modelService) {\n    super();\n    this._workerDescriptor = _workerDescriptor;\n    this._disposed = false;\n    this._modelService = modelService;\n    this._keepIdleModels = keepIdleModels;\n    this._worker = null;\n    this._modelManager = null;\n  }\n  // foreign host request\n  fhr(method, args) {\n    throw new Error(`Not implemented!`);\n  }\n  _getOrCreateWorker() {\n    if (!this._worker) {\n      try {\n        this._worker = this._register(createWebWorker(this._workerDescriptor));\n        EditorWorkerHost.setChannel(this._worker, this._createEditorWorkerHost());\n      } catch (err) {\n        logOnceWebWorkerWarning(err);\n        this._worker = this._createFallbackLocalWorker();\n      }\n    }\n    return this._worker;\n  }\n  _getProxy() {\n    var _this1 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const proxy = _this1._getOrCreateWorker().proxy;\n        yield proxy.$ping();\n        return proxy;\n      } catch (err) {\n        logOnceWebWorkerWarning(err);\n        _this1._worker = _this1._createFallbackLocalWorker();\n        return _this1._worker.proxy;\n      }\n    })();\n  }\n  _createFallbackLocalWorker() {\n    return new SynchronousWorkerClient(new EditorSimpleWorker(this._createEditorWorkerHost(), null));\n  }\n  _createEditorWorkerHost() {\n    return {\n      $fhr: (method, args) => this.fhr(method, args)\n    };\n  }\n  _getOrCreateModelManager(proxy) {\n    if (!this._modelManager) {\n      this._modelManager = this._register(new WorkerTextModelSyncClient(proxy, this._modelService, this._keepIdleModels));\n    }\n    return this._modelManager;\n  }\n  workerWithSyncedResources(_x6) {\n    var _this10 = this;\n    return _asyncToGenerator(function* (resources, forceLargeModels = false) {\n      if (_this10._disposed) {\n        return Promise.reject(canceled());\n      }\n      const proxy = yield _this10._getProxy();\n      _this10._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n      return proxy;\n    }).apply(this, arguments);\n  }\n  textualSuggest(resources, leadingWord, wordDefRegExp) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const proxy = yield _this11.workerWithSyncedResources(resources);\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = wordDefRegExp.flags;\n      return proxy.$textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n    })();\n  }\n  dispose() {\n    super.dispose();\n    this._disposed = true;\n  }\n};\nEditorWorkerClient = __decorate([__param(2, IModelService)], EditorWorkerClient);\nexport { EditorWorkerClient };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","timeout","Disposable","logOnceWebWorkerWarning","createWebWorker","Range","ILanguageConfigurationService","EditorSimpleWorker","IModelService","ITextResourceConfigurationService","isNonEmptyArray","ILogService","StopWatch","canceled","ILanguageFeaturesService","MovedText","DetailedLineRangeMapping","RangeMapping","LineRangeMapping","LineRange","mainWindow","WindowIntervalTimer","WorkerTextModelSyncClient","EditorWorkerHost","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","resource","model","getModel","isTooLargeForSyncing","EditorWorkerService","constructor","workerDescriptor","configurationService","logService","_languageConfigurationService","languageFeaturesService","_this","this","_modelService","_workerManager","_register","WorkerManager","_logService","linkProvider","register","language","hasAccessToAllModels","provideLinks","_ref","_asyncToGenerator","token","uri","Promise","resolve","links","worker","_workerWithResources","$computeLinks","toString","_x","_x2","apply","completionProvider","WordBasedCompletionItemProvider","dispose","canComputeUnicodeHighlights","computedUnicodeHighlights","options","range","_this2","$computeUnicodeHighlights","computeDiff","original","modified","algorithm","_this3","result","$computeDiff","diff","identical","quitEarly","changes","toLineRangeMappings","moves","map","m","computeMoreMinimalEdits","_x3","_x4","_this4","edits","pretty","sw","create","then","$computeMoreMinimalEdits","finally","trace","elapsed","race","undefined","canNavigateValueSet","navigateValueSet","up","_this5","wordDefRegExp","getLanguageConfiguration","getLanguageId","getWordDefinition","wordDef","source","wordDefFlags","flags","$navigateValueSet","canComputeWordRanges","computeWordRanges","_this6","$computeWordRanges","findSectionHeaders","_this7","$findSectionHeaders","computeDefaultDocumentColors","_this8","$computeDefaultDocumentColors","_x5","_this9","resources","forceLargeModels","withWorker","workerWithSyncedResources","workerManager","languageConfigurationService","_debugDisplayName","_configurationService","provideCompletionItems","position","_this0","config","getValue","wordBasedSuggestions","models","push","candidate","getModels","unshift","word","getWordAtPosition","replace","fromPositions","lineNumber","startColumn","endColumn","insert","setEndPosition","column","client","data","textualSuggest","duration","suggestions","words","kind","label","insertText","_workerDescriptor","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","stopWorkerInterval","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","timeSinceLastWorkerUsedTime","EditorWorkerClient","SynchronousWorkerClient","instance","_instance","proxy","setChannel","channel","handler","Error","keepIdleModels","_disposed","_keepIdleModels","_worker","_modelManager","fhr","method","args","_getOrCreateWorker","_createEditorWorkerHost","err","_createFallbackLocalWorker","_getProxy","_this1","$ping","$fhr","_getOrCreateModelManager","_x6","_this10","reject","ensureSyncedResources","leadingWord","_this11","$textualSuggest"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { createWebWorker } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { WindowIntervalTimer } from '../../../base/browser/dom.js';\nimport { WorkerTextModelSyncClient } from '../../common/services/textModelSync/textModelSync.impl.js';\nimport { EditorWorkerHost } from '../../common/services/editorWorkerHost.js';\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(workerDescriptor, modelService, configurationService, logService, _languageConfigurationService, languageFeaturesService) {\n        super();\n        this._languageConfigurationService = _languageConfigurationService;\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(workerDescriptor, this._modelService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: async (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                const worker = await this._workerWithResources([model.uri]);\n                const links = await worker.$computeLinks(model.uri.toString());\n                return links && { links };\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, this._languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    async computedUnicodeHighlights(uri, options, range) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$computeUnicodeHighlights(uri.toString(), options, range);\n    }\n    async computeDiff(original, modified, options, algorithm) {\n        const worker = await this._workerWithResources([original, modified], /* forceLargeModels */ true);\n        const result = await worker.$computeDiff(original.toString(), modified.toString(), options, algorithm);\n        if (!result) {\n            return null;\n        }\n        // Convert from space efficient JSON data to rich objects.\n        const diff = {\n            identical: result.identical,\n            quitEarly: result.quitEarly,\n            changes: toLineRangeMappings(result.changes),\n            moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n        };\n        return diff;\n        function toLineRangeMappings(changes) {\n            return changes.map((c) => new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), c[4]?.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7])))));\n        }\n    }\n    async computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create();\n            const result = this._workerWithResources([resource]).then(worker => worker.$computeMoreMinimalEdits(resource.toString(), edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    async navigateValueSet(resource, range, up) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = this._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        const worker = await this._workerWithResources([resource]);\n        return worker.$navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    async computeWordRanges(resource, range) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        const wordDefRegExp = this._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        const worker = await this._workerWithResources([resource]);\n        return worker.$computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n    }\n    async findSectionHeaders(uri, options) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$findSectionHeaders(uri.toString(), options);\n    }\n    async computeDefaultDocumentColors(uri) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$computeDefaultDocumentColors(uri.toString());\n    }\n    async _workerWithResources(resources, forceLargeModels = false) {\n        const worker = await this._workerManager.withWorker();\n        return await worker.workerWithSyncedResources(resources, forceLargeModels);\n    }\n};\nEditorWorkerService = __decorate([\n    __param(1, IModelService),\n    __param(2, ITextResourceConfigurationService),\n    __param(3, ILogService),\n    __param(4, ILanguageConfigurationService),\n    __param(5, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    async provideCompletionItems(model, position) {\n        const config = this._configurationService.getValue(model.uri, position, 'editor');\n        if (config.wordBasedSuggestions === 'off') {\n            return undefined;\n        }\n        const models = [];\n        if (config.wordBasedSuggestions === 'currentDocument') {\n            // only current file and only if not too large\n            if (canSyncModel(this._modelService, model.uri)) {\n                models.push(model.uri);\n            }\n        }\n        else {\n            // either all files or files of same language\n            for (const candidate of this._modelService.getModels()) {\n                if (!canSyncModel(this._modelService, candidate.uri)) {\n                    continue;\n                }\n                if (candidate === model) {\n                    models.unshift(candidate.uri);\n                }\n                else if (config.wordBasedSuggestions === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                    models.push(candidate.uri);\n                }\n            }\n        }\n        if (models.length === 0) {\n            return undefined; // File too large, no other files\n        }\n        const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const word = model.getWordAtPosition(position);\n        const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n        const insert = replace.setEndPosition(position.lineNumber, position.column);\n        const client = await this._workerManager.withWorker();\n        const data = await client.textualSuggest(models, word?.word, wordDefRegExp);\n        if (!data) {\n            return undefined;\n        }\n        return {\n            duration: data.duration,\n            suggestions: data.words.map((word) => {\n                return {\n                    kind: 18 /* languages.CompletionItemKind.Text */,\n                    label: word,\n                    insertText: word,\n                    range: { insert, replace }\n                };\n            }),\n        };\n    }\n}\nlet WorkerManager = class WorkerManager extends Disposable {\n    constructor(_workerDescriptor, modelService) {\n        super();\n        this._workerDescriptor = _workerDescriptor;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new WindowIntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2), mainWindow);\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._workerDescriptor, false, this._modelService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n};\nWorkerManager = __decorate([\n    __param(1, IModelService)\n], WorkerManager);\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this.proxy = this._instance;\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    setChannel(channel, handler) {\n        throw new Error(`Not supported`);\n    }\n}\nlet EditorWorkerClient = class EditorWorkerClient extends Disposable {\n    constructor(_workerDescriptor, keepIdleModels, modelService) {\n        super();\n        this._workerDescriptor = _workerDescriptor;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(createWebWorker(this._workerDescriptor));\n                EditorWorkerHost.setChannel(this._worker, this._createEditorWorkerHost());\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = this._createFallbackLocalWorker();\n            }\n        }\n        return this._worker;\n    }\n    async _getProxy() {\n        try {\n            const proxy = this._getOrCreateWorker().proxy;\n            await proxy.$ping();\n            return proxy;\n        }\n        catch (err) {\n            logOnceWebWorkerWarning(err);\n            this._worker = this._createFallbackLocalWorker();\n            return this._worker.proxy;\n        }\n    }\n    _createFallbackLocalWorker() {\n        return new SynchronousWorkerClient(new EditorSimpleWorker(this._createEditorWorkerHost(), null));\n    }\n    _createEditorWorkerHost() {\n        return {\n            $fhr: (method, args) => this.fhr(method, args)\n        };\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new WorkerTextModelSyncClient(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    async workerWithSyncedResources(resources, forceLargeModels = false) {\n        if (this._disposed) {\n            return Promise.reject(canceled());\n        }\n        const proxy = await this._getProxy();\n        this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n        return proxy;\n    }\n    async textualSuggest(resources, leadingWord, wordDefRegExp) {\n        const proxy = await this.workerWithSyncedResources(resources);\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        return proxy.$textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n};\nEditorWorkerClient = __decorate([\n    __param(2, IModelService)\n], EditorWorkerClient);\nexport { EditorWorkerClient };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}