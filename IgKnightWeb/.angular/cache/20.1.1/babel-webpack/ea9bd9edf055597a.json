{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { matchesScheme, matchesSomeScheme, Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n  constructor(_commandService) {\n    this._commandService = _commandService;\n  }\n  open(target, options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!matchesScheme(target, Schemas.command)) {\n        return false;\n      }\n      if (!options?.allowCommands) {\n        // silently ignore commands when command-links are disabled, also\n        // suppress other openers by returning TRUE\n        return true;\n      }\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      if (Array.isArray(options.allowCommands)) {\n        // Only allow specific commands\n        if (!options.allowCommands.includes(target.path)) {\n          // Suppress other openers by returning TRUE\n          return true;\n        }\n      }\n      // execute as command\n      let args = [];\n      try {\n        args = parse(decodeURIComponent(target.query));\n      } catch {\n        // ignore and retry\n        try {\n          args = parse(target.query);\n        } catch {\n          // ignore error\n        }\n      }\n      if (!Array.isArray(args)) {\n        args = [args];\n      }\n      yield _this._commandService.executeCommand(target.path, ...args);\n      return true;\n    })();\n  }\n};\nCommandOpener = __decorate([__param(0, ICommandService)], CommandOpener);\nlet EditorOpener = class EditorOpener {\n  constructor(_editorService) {\n    this._editorService = _editorService;\n  }\n  open(target, options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      const {\n        selection,\n        uri\n      } = extractSelection(target);\n      target = uri;\n      if (target.scheme === Schemas.file) {\n        target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n      }\n      yield _this2._editorService.openCodeEditor({\n        resource: target,\n        options: {\n          selection,\n          source: options?.fromUserGesture ? EditorOpenSource.USER : EditorOpenSource.API,\n          ...options?.editorOptions\n        }\n      }, _this2._editorService.getFocusedCodeEditor(), options?.openToSide);\n      return true;\n    })();\n  }\n};\nEditorOpener = __decorate([__param(0, ICodeEditorService)], EditorOpener);\nlet OpenerService = class OpenerService {\n  constructor(editorService, commandService) {\n    var _this3 = this;\n    this._openers = new LinkedList();\n    this._validators = new LinkedList();\n    this._resolvers = new LinkedList();\n    this._resolvedUriTargets = new ResourceMap(uri => uri.with({\n      path: null,\n      fragment: null,\n      query: null\n    }).toString());\n    this._externalOpeners = new LinkedList();\n    // Default external opener is going through window.open()\n    this._defaultExternalOpener = {\n      openExternal: function () {\n        var _ref = _asyncToGenerator(function* (href) {\n          // ensure to open HTTP/HTTPS links into new windows\n          // to not trigger a navigation. Any other link is\n          // safe to be set as HREF to prevent a blank window\n          // from opening.\n          if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n            dom.windowOpenNoOpener(href);\n          } else {\n            mainWindow.location.href = href;\n          }\n          return true;\n        });\n        return function openExternal(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    };\n    // Default opener: any external, maito, http(s), command, and catch-all-editors\n    this._openers.push({\n      open: function () {\n        var _ref2 = _asyncToGenerator(function* (target, options) {\n          if (options?.openExternal || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n            // open externally\n            yield _this3._doOpenExternal(target, options);\n            return true;\n          }\n          return false;\n        });\n        return function open(_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    });\n    this._openers.push(new CommandOpener(commandService));\n    this._openers.push(new EditorOpener(editorService));\n  }\n  registerOpener(opener) {\n    const remove = this._openers.unshift(opener);\n    return {\n      dispose: remove\n    };\n  }\n  open(target, options) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // check with contributed validators\n      const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n      // validate against the original URI that this URI resolves to, if one exists\n      const validationTarget = _this4._resolvedUriTargets.get(targetURI) ?? target;\n      for (const validator of _this4._validators) {\n        if (!(yield validator.shouldOpen(validationTarget, options))) {\n          return false;\n        }\n      }\n      // check with contributed openers\n      for (const opener of _this4._openers) {\n        const handled = yield opener.open(target, options);\n        if (handled) {\n          return true;\n        }\n      }\n      return false;\n    })();\n  }\n  resolveExternalUri(resource, options) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      for (const resolver of _this5._resolvers) {\n        try {\n          const result = yield resolver.resolveExternalUri(resource, options);\n          if (result) {\n            if (!_this5._resolvedUriTargets.has(result.resolved)) {\n              _this5._resolvedUriTargets.set(result.resolved, resource);\n            }\n            return result;\n          }\n        } catch {\n          // noop\n        }\n      }\n      throw new Error('Could not resolve external URI: ' + resource.toString());\n    })();\n  }\n  _doOpenExternal(resource, options) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n      const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n      let externalUri;\n      try {\n        externalUri = (yield _this6.resolveExternalUri(uri, options)).resolved;\n      } catch {\n        externalUri = uri;\n      }\n      let href;\n      if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n        // open the url-string AS IS\n        href = resource;\n      } else {\n        // open URI using the toString(noEncode)+encodeURI-trick\n        href = encodeURI(externalUri.toString(true));\n      }\n      if (options?.allowContributedOpeners) {\n        const preferredOpenerId = typeof options?.allowContributedOpeners === 'string' ? options?.allowContributedOpeners : undefined;\n        for (const opener of _this6._externalOpeners) {\n          const didOpen = yield opener.openExternal(href, {\n            sourceUri: uri,\n            preferredOpenerId\n          }, CancellationToken.None);\n          if (didOpen) {\n            return true;\n          }\n        }\n      }\n      return _this6._defaultExternalOpener.openExternal(href, {\n        sourceUri: uri\n      }, CancellationToken.None);\n    })();\n  }\n  dispose() {\n    this._validators.clear();\n  }\n};\nOpenerService = __decorate([__param(0, ICodeEditorService), __param(1, ICommandService)], OpenerService);\nexport { OpenerService };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","mainWindow","CancellationToken","LinkedList","ResourceMap","parse","matchesScheme","matchesSomeScheme","Schemas","normalizePath","URI","ICodeEditorService","ICommandService","EditorOpenSource","extractSelection","CommandOpener","constructor","_commandService","open","options","_this","_asyncToGenerator","command","allowCommands","Array","isArray","includes","path","args","decodeURIComponent","query","executeCommand","EditorOpener","_editorService","_this2","selection","uri","scheme","file","openCodeEditor","resource","source","fromUserGesture","USER","API","editorOptions","getFocusedCodeEditor","openToSide","OpenerService","editorService","commandService","_this3","_openers","_validators","_resolvers","_resolvedUriTargets","with","fragment","toString","_externalOpeners","_defaultExternalOpener","openExternal","_ref","href","http","https","windowOpenNoOpener","location","_x","apply","push","_ref2","mailto","vsls","_doOpenExternal","_x2","_x3","registerOpener","opener","remove","unshift","dispose","_this4","targetURI","validationTarget","get","validator","shouldOpen","handled","resolveExternalUri","_this5","resolver","result","has","resolved","set","Error","_this6","externalUri","encodeURI","allowContributedOpeners","preferredOpenerId","undefined","didOpen","sourceUri","None","clear"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { matchesScheme, matchesSomeScheme, Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    async open(target, options) {\n        if (!matchesScheme(target, Schemas.command)) {\n            return false;\n        }\n        if (!options?.allowCommands) {\n            // silently ignore commands when command-links are disabled, also\n            // suppress other openers by returning TRUE\n            return true;\n        }\n        if (typeof target === 'string') {\n            target = URI.parse(target);\n        }\n        if (Array.isArray(options.allowCommands)) {\n            // Only allow specific commands\n            if (!options.allowCommands.includes(target.path)) {\n                // Suppress other openers by returning TRUE\n                return true;\n            }\n        }\n        // execute as command\n        let args = [];\n        try {\n            args = parse(decodeURIComponent(target.query));\n        }\n        catch {\n            // ignore and retry\n            try {\n                args = parse(target.query);\n            }\n            catch {\n                // ignore error\n            }\n        }\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        await this._commandService.executeCommand(target.path, ...args);\n        return true;\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    async open(target, options) {\n        if (typeof target === 'string') {\n            target = URI.parse(target);\n        }\n        const { selection, uri } = extractSelection(target);\n        target = uri;\n        if (target.scheme === Schemas.file) {\n            target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n        }\n        await this._editorService.openCodeEditor({\n            resource: target,\n            options: {\n                selection,\n                source: options?.fromUserGesture ? EditorOpenSource.USER : EditorOpenSource.API,\n                ...options?.editorOptions\n            }\n        }, this._editorService.getFocusedCodeEditor(), options?.openToSide);\n        return true;\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nlet OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: async (href) => {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    mainWindow.location.href = href;\n                }\n                return true;\n            }\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: async (target, options) => {\n                if (options?.openExternal || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    await this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            }\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    async open(target, options) {\n        // check with contributed validators\n        const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n        // validate against the original URI that this URI resolves to, if one exists\n        const validationTarget = this._resolvedUriTargets.get(targetURI) ?? target;\n        for (const validator of this._validators) {\n            if (!(await validator.shouldOpen(validationTarget, options))) {\n                return false;\n            }\n        }\n        // check with contributed openers\n        for (const opener of this._openers) {\n            const handled = await opener.open(target, options);\n            if (handled) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async resolveExternalUri(resource, options) {\n        for (const resolver of this._resolvers) {\n            try {\n                const result = await resolver.resolveExternalUri(resource, options);\n                if (result) {\n                    if (!this._resolvedUriTargets.has(result.resolved)) {\n                        this._resolvedUriTargets.set(result.resolved, resource);\n                    }\n                    return result;\n                }\n            }\n            catch {\n                // noop\n            }\n        }\n        throw new Error('Could not resolve external URI: ' + resource.toString());\n    }\n    async _doOpenExternal(resource, options) {\n        //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n        const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n        let externalUri;\n        try {\n            externalUri = (await this.resolveExternalUri(uri, options)).resolved;\n        }\n        catch {\n            externalUri = uri;\n        }\n        let href;\n        if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n            // open the url-string AS IS\n            href = resource;\n        }\n        else {\n            // open URI using the toString(noEncode)+encodeURI-trick\n            href = encodeURI(externalUri.toString(true));\n        }\n        if (options?.allowContributedOpeners) {\n            const preferredOpenerId = typeof options?.allowContributedOpeners === 'string' ? options?.allowContributedOpeners : undefined;\n            for (const opener of this._externalOpeners) {\n                const didOpen = await opener.openExternal(href, {\n                    sourceUri: uri,\n                    preferredOpenerId,\n                }, CancellationToken.None);\n                if (didOpen) {\n                    return true;\n                }\n            }\n        }\n        return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\nexport { OpenerService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}