{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n  static #_ = this.None = new class extends WordDistance {\n    distance() {\n      return 0;\n    }\n  }();\n  static create(service, editor) {\n    return _asyncToGenerator(function* () {\n      if (!editor.getOption(119 /* EditorOption.suggest */).localityBonus) {\n        return WordDistance.None;\n      }\n      if (!editor.hasModel()) {\n        return WordDistance.None;\n      }\n      const model = editor.getModel();\n      const position = editor.getPosition();\n      if (!service.canComputeWordRanges(model.uri)) {\n        return WordDistance.None;\n      }\n      const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n      if (ranges.length === 0) {\n        return WordDistance.None;\n      }\n      const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\n      if (!wordRanges) {\n        return WordDistance.None;\n      }\n      // remove current word\n      const wordUntilPos = model.getWordUntilPosition(position);\n      delete wordRanges[wordUntilPos.word];\n      return new class extends WordDistance {\n        distance(anchor, item) {\n          if (!position.equals(editor.getPosition())) {\n            return 0;\n          }\n          if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n            return 2 << 20;\n          }\n          const word = typeof item.label === 'string' ? item.label : item.label.label;\n          const wordLines = wordRanges[word];\n          if (isFalsyOrEmpty(wordLines)) {\n            return 2 << 20;\n          }\n          const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n          const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n          let blockDistance = ranges.length;\n          for (const range of ranges) {\n            if (!Range.containsRange(range.range, bestWordRange)) {\n              break;\n            }\n            blockDistance -= 1;\n          }\n          return blockDistance;\n        }\n      }();\n    })();\n  }\n}","map":{"version":3,"names":["binarySearch","isFalsyOrEmpty","Range","BracketSelectionRangeProvider","WordDistance","_","None","distance","create","service","editor","_asyncToGenerator","getOption","localityBonus","hasModel","model","getModel","position","getPosition","canComputeWordRanges","uri","ranges","provideSelectionRanges","length","wordRanges","computeWordRanges","range","wordUntilPos","getWordUntilPosition","word","anchor","item","equals","kind","label","wordLines","idx","fromPositions","compareRangesUsingStarts","bestWordRange","Math","max","blockDistance","containsRange"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n    static { this.None = new class extends WordDistance {\n        distance() { return 0; }\n    }; }\n    static async create(service, editor) {\n        if (!editor.getOption(119 /* EditorOption.suggest */).localityBonus) {\n            return WordDistance.None;\n        }\n        if (!editor.hasModel()) {\n            return WordDistance.None;\n        }\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        if (!service.canComputeWordRanges(model.uri)) {\n            return WordDistance.None;\n        }\n        const [ranges] = await new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n        if (ranges.length === 0) {\n            return WordDistance.None;\n        }\n        const wordRanges = await service.computeWordRanges(model.uri, ranges[0].range);\n        if (!wordRanges) {\n            return WordDistance.None;\n        }\n        // remove current word\n        const wordUntilPos = model.getWordUntilPosition(position);\n        delete wordRanges[wordUntilPos.word];\n        return new class extends WordDistance {\n            distance(anchor, item) {\n                if (!position.equals(editor.getPosition())) {\n                    return 0;\n                }\n                if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n                    return 2 << 20;\n                }\n                const word = typeof item.label === 'string' ? item.label : item.label.label;\n                const wordLines = wordRanges[word];\n                if (isFalsyOrEmpty(wordLines)) {\n                    return 2 << 20;\n                }\n                const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                let blockDistance = ranges.length;\n                for (const range of ranges) {\n                    if (!Range.containsRange(range.range, bestWordRange)) {\n                        break;\n                    }\n                    blockDistance -= 1;\n                }\n                return blockDistance;\n            }\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}