{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = /*#__PURE__*/(() => {\n  let DropIntoEditorController = class DropIntoEditorController extends Disposable {\n    static #_ = DropIntoEditorController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.dropIntoEditorController';\n    static get(editor) {\n      return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n      super();\n      this._configService = _configService;\n      this._languageFeaturesService = _languageFeaturesService;\n      this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n      this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n      this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n      this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, {\n        id: changeDropTypeCommandId,\n        label: localize('postDropWidgetTitle', \"Show drop options...\")\n      }));\n      this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    clearWidgets() {\n      this._postDropWidgetManager.clear();\n    }\n    changeDropType() {\n      this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!dragEvent.dataTransfer || !editor.hasModel()) {\n          return;\n        }\n        _this._currentOperation?.cancel();\n        editor.focus();\n        editor.setPosition(position);\n        const p = createCancelablePromise(/*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (token) {\n            const disposables = new DisposableStore();\n            const tokenSource = disposables.add(new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token));\n            try {\n              const ourDataTransfer = yield _this.extractDataTransferData(dragEvent);\n              if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                return;\n              }\n              const model = editor.getModel();\n              if (!model) {\n                return;\n              }\n              const providers = _this._languageFeaturesService.documentDropEditProvider.ordered(model).filter(provider => {\n                if (!provider.dropMimeTypes) {\n                  // Keep all providers that don't specify mime types\n                  return true;\n                }\n                return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n              });\n              const editSession = disposables.add(yield _this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource));\n              if (tokenSource.token.isCancellationRequested) {\n                return;\n              }\n              if (editSession.edits.length) {\n                const activeEditIndex = _this.getInitialActiveEditIndex(model, editSession.edits);\n                const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                // Pass in the parent token here as it tracks cancelling the entire drop operation\n                yield _this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], {\n                  activeEditIndex,\n                  allEdits: editSession.edits\n                }, canShowWidget, /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator(function* (edit) {\n                    return edit;\n                  });\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }(), token);\n              }\n            } finally {\n              disposables.dispose();\n              if (_this._currentOperation === p) {\n                _this._currentOperation = undefined;\n              }\n            }\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        _this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p, {\n          cancel: () => p.cancel()\n        });\n        _this._currentOperation = p;\n      })();\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n      return _asyncToGenerator(function* () {\n        const disposables = new DisposableStore();\n        const results = yield raceCancellation(Promise.all(providers.map(/*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator(function* (provider) {\n            try {\n              const edits = yield provider.provideDocumentDropEdits(model, position, dataTransfer, tokenSource.token);\n              if (edits) {\n                disposables.add(edits);\n              }\n              return edits?.edits.map(edit => ({\n                ...edit,\n                providerId: provider.id\n              }));\n            } catch (err) {\n              console.error(err);\n            }\n            return undefined;\n          });\n          return function (_x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }())), tokenSource.token);\n        const edits = coalesce(results ?? []).flat();\n        return {\n          edits: sortEditsByYieldTo(edits),\n          dispose: () => disposables.dispose()\n        };\n      })();\n    }\n    getInitialActiveEditIndex(model, edits) {\n      const preferredProviders = this._configService.getValue(defaultProviderConfig, {\n        resource: model.uri\n      });\n      for (const [configMime, desiredKindStr] of Object.entries(preferredProviders)) {\n        const desiredKind = new HierarchicalKind(desiredKindStr);\n        const editIndex = edits.findIndex(edit => desiredKind.value === edit.providerId && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n        if (editIndex >= 0) {\n          return editIndex;\n        }\n      }\n      return 0;\n    }\n    extractDataTransferData(dragEvent) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (!dragEvent.dataTransfer) {\n          return new VSDataTransfer();\n        }\n        const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n        if (_this2.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n          const data = _this2.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n          if (Array.isArray(data)) {\n            for (const id of data) {\n              const treeDataTransfer = yield _this2._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n              if (treeDataTransfer) {\n                for (const [type, value] of treeDataTransfer) {\n                  dataTransfer.replace(type, value);\n                }\n              }\n            }\n          }\n        }\n        return dataTransfer;\n      })();\n    }\n  };\n  return DropIntoEditorController;\n})();\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([__param(1, IInstantiationService), __param(2, IConfigurationService), __param(3, ILanguageFeaturesService), __param(4, ITreeViewsDnDService)], DropIntoEditorController);\nexport { DropIntoEditorController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DropIntoEditorController_1","coalesce","createCancelablePromise","raceCancellation","VSDataTransfer","matchesMimeType","HierarchicalKind","Disposable","DisposableStore","toExternalVSDataTransfer","Range","ILanguageFeaturesService","DraggedTreeItemsIdentifier","ITreeViewsDnDService","EditorStateCancellationTokenSource","InlineProgressManager","localize","IConfigurationService","RawContextKey","LocalSelectionTransfer","IInstantiationService","sortEditsByYieldTo","PostEditWidgetManager","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_","_2","ID","get","editor","getContribution","constructor","instantiationService","_configService","_languageFeaturesService","_treeViewsDragAndDropService","treeItemsTransfer","getInstance","_dropProgressManager","_register","createInstance","_postDropWidgetManager","id","label","onDropIntoEditor","e","position","event","clearWidgets","clear","changeDropType","tryShowSelector","dragEvent","_this","_asyncToGenerator","dataTransfer","hasModel","_currentOperation","cancel","focus","setPosition","p","_ref","token","disposables","tokenSource","add","undefined","ourDataTransfer","extractDataTransferData","size","isCancellationRequested","model","getModel","providers","documentDropEditProvider","ordered","filter","provider","dropMimeTypes","some","mime","matches","editSession","getDropEdits","edits","activeEditIndex","getInitialActiveEditIndex","canShowWidget","getOption","showDropSelector","applyEditAndShowIfNeeded","fromPositions","allEdits","_ref2","edit","_x2","apply","dispose","_x","showWhile","results","Promise","all","map","_ref3","provideDocumentDropEdits","providerId","err","console","error","_x3","flat","preferredProviders","getValue","resource","uri","configMime","desiredKindStr","entries","desiredKind","editIndex","findIndex","value","handledMimeType","_this2","hasData","prototype","data","getData","Array","isArray","treeDataTransfer","removeDragOperationTransfer","identifier","type","replace"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = class DropIntoEditorController extends Disposable {\n    static { DropIntoEditorController_1 = this; }\n    static { this.ID = 'editor.contrib.dropIntoEditorController'; }\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    clearWidgets() {\n        this._postDropWidgetManager.clear();\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    async onDropIntoEditor(editor, position, dragEvent) {\n        if (!dragEvent.dataTransfer || !editor.hasModel()) {\n            return;\n        }\n        this._currentOperation?.cancel();\n        editor.focus();\n        editor.setPosition(position);\n        const p = createCancelablePromise(async (token) => {\n            const disposables = new DisposableStore();\n            const tokenSource = disposables.add(new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token));\n            try {\n                const ourDataTransfer = await this.extractDataTransferData(dragEvent);\n                if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                const model = editor.getModel();\n                if (!model) {\n                    return;\n                }\n                const providers = this._languageFeaturesService.documentDropEditProvider\n                    .ordered(model)\n                    .filter(provider => {\n                    if (!provider.dropMimeTypes) {\n                        // Keep all providers that don't specify mime types\n                        return true;\n                    }\n                    return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                });\n                const editSession = disposables.add(await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource));\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (editSession.edits.length) {\n                    const activeEditIndex = this.getInitialActiveEditIndex(model, editSession.edits);\n                    const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                    // Pass in the parent token here as it tracks cancelling the entire drop operation\n                    await this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: editSession.edits }, canShowWidget, async (edit) => edit, token);\n                }\n            }\n            finally {\n                disposables.dispose();\n                if (this._currentOperation === p) {\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n        this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p, { cancel: () => p.cancel() });\n        this._currentOperation = p;\n    }\n    async getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        const disposables = new DisposableStore();\n        const results = await raceCancellation(Promise.all(providers.map(async (provider) => {\n            try {\n                const edits = await provider.provideDocumentDropEdits(model, position, dataTransfer, tokenSource.token);\n                if (edits) {\n                    disposables.add(edits);\n                }\n                return edits?.edits.map(edit => ({ ...edit, providerId: provider.id }));\n            }\n            catch (err) {\n                console.error(err);\n            }\n            return undefined;\n        })), tokenSource.token);\n        const edits = coalesce(results ?? []).flat();\n        return {\n            edits: sortEditsByYieldTo(edits),\n            dispose: () => disposables.dispose()\n        };\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredKindStr] of Object.entries(preferredProviders)) {\n            const desiredKind = new HierarchicalKind(desiredKindStr);\n            const editIndex = edits.findIndex(edit => desiredKind.value === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    async extractDataTransferData(dragEvent) {\n        if (!dragEvent.dataTransfer) {\n            return new VSDataTransfer();\n        }\n        const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n        if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n            const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n            if (Array.isArray(data)) {\n                for (const id of data) {\n                    const treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                    if (treeDataTransfer) {\n                        for (const [type, value] of treeDataTransfer) {\n                            dataTransfer.replace(type, value);\n                        }\n                    }\n                }\n            }\n        }\n        return dataTransfer;\n    }\n};\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}