{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SelectionAnchorController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = /*#__PURE__*/(() => {\n  let SelectionAnchorController = class SelectionAnchorController {\n    static #_ = SelectionAnchorController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.selectionAnchorController';\n    static get(editor) {\n      return editor.getContribution(SelectionAnchorController_1.ID);\n    }\n    constructor(editor, contextKeyService) {\n      this.editor = editor;\n      this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n      this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n    }\n    setSelectionAnchor() {\n      if (this.editor.hasModel()) {\n        const position = this.editor.getPosition();\n        this.editor.changeDecorations(accessor => {\n          if (this.decorationId) {\n            accessor.removeDecoration(this.decorationId);\n          }\n          this.decorationId = accessor.addDecoration(Selection.fromPositions(position, position), {\n            description: 'selection-anchor',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n            hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n            className: 'selection-anchor'\n          });\n        });\n        this.selectionAnchorSetContextKey.set(!!this.decorationId);\n        alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n      }\n    }\n    goToSelectionAnchor() {\n      if (this.editor.hasModel() && this.decorationId) {\n        const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n        if (anchorPosition) {\n          this.editor.setPosition(anchorPosition.getStartPosition());\n        }\n      }\n    }\n    selectFromAnchorToCursor() {\n      if (this.editor.hasModel() && this.decorationId) {\n        const start = this.editor.getModel().getDecorationRange(this.decorationId);\n        if (start) {\n          const end = this.editor.getPosition();\n          this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n          this.cancelSelectionAnchor();\n        }\n      }\n    }\n    cancelSelectionAnchor() {\n      if (this.decorationId) {\n        const decorationId = this.decorationId;\n        this.editor.changeDecorations(accessor => {\n          accessor.removeDecoration(decorationId);\n          this.decorationId = undefined;\n        });\n        this.selectionAnchorSetContextKey.set(false);\n      }\n    }\n    dispose() {\n      this.cancelSelectionAnchor();\n      this.modelChangeListener.dispose();\n    }\n  };\n  return SelectionAnchorController;\n})();\nSelectionAnchorController = SelectionAnchorController_1 = __decorate([__param(1, IContextKeyService)], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.setSelectionAnchor',\n      label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n      alias: 'Set Selection Anchor',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 32 /* KeyCode.KeyB */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(_accessor, editor) {\n    return _asyncToGenerator(function* () {\n      SelectionAnchorController.get(editor)?.setSelectionAnchor();\n    })();\n  }\n}\nclass GoToSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.goToSelectionAnchor',\n      label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n      alias: 'Go to Selection Anchor',\n      precondition: SelectionAnchorSet\n    });\n  }\n  run(_accessor, editor) {\n    return _asyncToGenerator(function* () {\n      SelectionAnchorController.get(editor)?.goToSelectionAnchor();\n    })();\n  }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.selectFromAnchorToCursor',\n      label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n      alias: 'Select from Anchor to Cursor',\n      precondition: SelectionAnchorSet,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(_accessor, editor) {\n    return _asyncToGenerator(function* () {\n      SelectionAnchorController.get(editor)?.selectFromAnchorToCursor();\n    })();\n  }\n}\nclass CancelSelectionAnchor extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.cancelSelectionAnchor',\n      label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n      alias: 'Cancel Selection Anchor',\n      precondition: SelectionAnchorSet,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 9 /* KeyCode.Escape */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(_accessor, editor) {\n    return _asyncToGenerator(function* () {\n      SelectionAnchorController.get(editor)?.cancelSelectionAnchor();\n    })();\n  }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SelectionAnchorController_1","alert","MarkdownString","KeyChord","EditorAction","registerEditorAction","registerEditorContribution","Selection","EditorContextKeys","localize","IContextKeyService","RawContextKey","SelectionAnchorSet","SelectionAnchorController","_","_2","ID","get","editor","getContribution","constructor","contextKeyService","selectionAnchorSetContextKey","bindTo","modelChangeListener","onDidChangeModel","reset","setSelectionAnchor","hasModel","position","getPosition","changeDecorations","accessor","decorationId","removeDecoration","addDecoration","fromPositions","description","stickiness","hoverMessage","appendText","className","set","lineNumber","column","goToSelectionAnchor","anchorPosition","getModel","getDecorationRange","setPosition","getStartPosition","selectFromAnchorToCursor","start","end","setSelection","cancelSelectionAnchor","undefined","dispose","SetSelectionAnchor","id","label","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","weight","run","_accessor","_asyncToGenerator","GoToSelectionAnchor","SelectFromAnchorToCursor","CancelSelectionAnchor"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/browser/anchorSelect.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SelectionAnchorController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = class SelectionAnchorController {\n    static { SelectionAnchorController_1 = this; }\n    static { this.ID = 'editor.contrib.selectionAnchorController'; }\n    static get(editor) {\n        return editor.getContribution(SelectionAnchorController_1.ID);\n    }\n    constructor(editor, contextKeyService) {\n        this.editor = editor;\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n    }\n    setSelectionAnchor() {\n        if (this.editor.hasModel()) {\n            const position = this.editor.getPosition();\n            this.editor.changeDecorations((accessor) => {\n                if (this.decorationId) {\n                    accessor.removeDecoration(this.decorationId);\n                }\n                this.decorationId = accessor.addDecoration(Selection.fromPositions(position, position), {\n                    description: 'selection-anchor',\n                    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n                    hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n                    className: 'selection-anchor'\n                });\n            });\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n        }\n    }\n    goToSelectionAnchor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (anchorPosition) {\n                this.editor.setPosition(anchorPosition.getStartPosition());\n            }\n        }\n    }\n    selectFromAnchorToCursor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (start) {\n                const end = this.editor.getPosition();\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n                this.cancelSelectionAnchor();\n            }\n        }\n    }\n    cancelSelectionAnchor() {\n        if (this.decorationId) {\n            const decorationId = this.decorationId;\n            this.editor.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n                this.decorationId = undefined;\n            });\n            this.selectionAnchorSetContextKey.set(false);\n        }\n    }\n    dispose() {\n        this.cancelSelectionAnchor();\n        this.modelChangeListener.dispose();\n    }\n};\nSelectionAnchorController = SelectionAnchorController_1 = __decorate([\n    __param(1, IContextKeyService)\n], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.setSelectionAnchor',\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n            alias: 'Set Selection Anchor',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 32 /* KeyCode.KeyB */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.setSelectionAnchor();\n    }\n}\nclass GoToSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToSelectionAnchor',\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n            alias: 'Go to Selection Anchor',\n            precondition: SelectionAnchorSet,\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.goToSelectionAnchor();\n    }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectFromAnchorToCursor',\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n            alias: 'Select from Anchor to Cursor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.selectFromAnchorToCursor();\n    }\n}\nclass CancelSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.cancelSelectionAnchor',\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n            alias: 'Cancel Selection Anchor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        SelectionAnchorController.get(editor)?.cancelSelectionAnchor();\n    }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}