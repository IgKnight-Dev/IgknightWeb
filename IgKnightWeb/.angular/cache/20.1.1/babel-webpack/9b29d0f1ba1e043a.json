{"ast":null,"code":"import { setAccessToken } from \"./auth.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    store;\n    /**\n     *\n     */\n    constructor(store) {\n      this.store = store;\n    }\n    accessTokenKey = 'access_token';\n    refreshTokenKey = 'refresh_token';\n    // In-memory storage\n    accessTokenInMemory = null;\n    refreshTokenInMemory = null;\n    setTokens(accessToken, refreshToken) {\n      this.clearTokens();\n      this.accessTokenInMemory = accessToken;\n      this.refreshTokenInMemory = refreshToken;\n      localStorage.setItem(this.accessTokenKey, accessToken);\n      localStorage.setItem(this.refreshTokenKey, refreshToken);\n      this.store.dispatch(setAccessToken({\n        token: accessToken\n      }));\n    }\n    setAccessToken(token) {\n      this.clearAccessToken();\n      this.accessTokenInMemory = token; // NEW\n      localStorage.setItem('access_token', token);\n      this.store.dispatch(setAccessToken({\n        token: token\n      }));\n    }\n    setRefreshToken(token) {\n      this.clearRefreshToken();\n      this.refreshTokenInMemory = token;\n      localStorage.setItem('refresh_token', token);\n    }\n    getAccessToken() {\n      return this.accessTokenInMemory || localStorage.getItem(this.accessTokenKey);\n    }\n    getRefreshToken() {\n      return this.refreshTokenInMemory || localStorage.getItem(this.refreshTokenKey);\n    }\n    clearTokens() {\n      this.accessTokenInMemory = null;\n      this.refreshTokenInMemory = null;\n      localStorage.removeItem(this.accessTokenKey);\n      localStorage.removeItem(this.refreshTokenKey);\n    }\n    clearAccessToken() {\n      this.accessTokenInMemory = null;\n      localStorage.removeItem(this.accessTokenKey);\n    }\n    clearRefreshToken() {\n      this.refreshTokenInMemory = null;\n      localStorage.removeItem(this.refreshTokenKey);\n    }\n    static ɵfac = function TokenService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TokenService)(i0.ɵɵinject(i1.Store));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenService,\n      factory: TokenService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TokenService;\n})();","map":{"version":3,"names":["setAccessToken","TokenService","store","constructor","accessTokenKey","refreshTokenKey","accessTokenInMemory","refreshTokenInMemory","setTokens","accessToken","refreshToken","clearTokens","localStorage","setItem","dispatch","token","clearAccessToken","setRefreshToken","clearRefreshToken","getAccessToken","getItem","getRefreshToken","removeItem","i0","ɵɵinject","i1","Store","factory","ɵfac","providedIn"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\core\\services\\token.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { setAccessToken } from \"./auth.actions\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TokenService {\r\n  /**\r\n   *\r\n   */\r\n  constructor(private store: Store) {\r\n  }\r\n  private accessTokenKey = 'access_token';\r\n  private refreshTokenKey = 'refresh_token';\r\n\r\n  // In-memory storage\r\n  private accessTokenInMemory: string | null = null;\r\n  private refreshTokenInMemory: string | null = null;\r\n\r\n  setTokens(accessToken: string, refreshToken: string): void {\r\n    this.clearTokens();\r\n    this.accessTokenInMemory = accessToken;\r\n    this.refreshTokenInMemory = refreshToken;\r\n    localStorage.setItem(this.accessTokenKey, accessToken);\r\n    localStorage.setItem(this.refreshTokenKey, refreshToken);\r\n    this.store.dispatch(setAccessToken({ token: accessToken }));\r\n  }\r\n\r\n  setAccessToken(token: string): void {\r\n    this.clearAccessToken();\r\n    this.accessTokenInMemory = token; // NEW\r\n    localStorage.setItem('access_token', token);\r\n    this.store.dispatch(setAccessToken({ token: token }));\r\n  }\r\n\r\n  setRefreshToken(token: string): void {\r\n    this.clearRefreshToken();\r\n    this.refreshTokenInMemory = token;\r\n    localStorage.setItem('refresh_token', token);\r\n  }\r\n\r\n  getAccessToken(): string | null {\r\n    return this.accessTokenInMemory || localStorage.getItem(this.accessTokenKey);\r\n  }\r\n\r\n  getRefreshToken(): string | null {\r\n    return this.refreshTokenInMemory || localStorage.getItem(this.refreshTokenKey);\r\n  }\r\n\r\n  clearTokens(): void {\r\n    this.accessTokenInMemory = null;\r\n    this.refreshTokenInMemory = null;\r\n\r\n    localStorage.removeItem(this.accessTokenKey);\r\n    localStorage.removeItem(this.refreshTokenKey);\r\n  }\r\n\r\n  clearAccessToken(): void {\r\n    this.accessTokenInMemory = null;\r\n\r\n    localStorage.removeItem(this.accessTokenKey);\r\n  }\r\n\r\n  clearRefreshToken(): void {\r\n    this.refreshTokenInMemory = null;\r\n\r\n    localStorage.removeItem(this.refreshTokenKey);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,gBAAgB;;;AAG/C,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IAIHC,KAAA;IAHpB;;;IAGAC,YAAoBD,KAAY;MAAZ,KAAAA,KAAK,GAALA,KAAK;IACzB;IACQE,cAAc,GAAG,cAAc;IAC/BC,eAAe,GAAG,eAAe;IAEzC;IACQC,mBAAmB,GAAkB,IAAI;IACzCC,oBAAoB,GAAkB,IAAI;IAElDC,SAASA,CAACC,WAAmB,EAAEC,YAAoB;MACjD,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAACL,mBAAmB,GAAGG,WAAW;MACtC,IAAI,CAACF,oBAAoB,GAAGG,YAAY;MACxCE,YAAY,CAACC,OAAO,CAAC,IAAI,CAACT,cAAc,EAAEK,WAAW,CAAC;MACtDG,YAAY,CAACC,OAAO,CAAC,IAAI,CAACR,eAAe,EAAEK,YAAY,CAAC;MACxD,IAAI,CAACR,KAAK,CAACY,QAAQ,CAACd,cAAc,CAAC;QAAEe,KAAK,EAAEN;MAAW,CAAE,CAAC,CAAC;IAC7D;IAEAT,cAAcA,CAACe,KAAa;MAC1B,IAAI,CAACC,gBAAgB,EAAE;MACvB,IAAI,CAACV,mBAAmB,GAAGS,KAAK,CAAC,CAAC;MAClCH,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEE,KAAK,CAAC;MAC3C,IAAI,CAACb,KAAK,CAACY,QAAQ,CAACd,cAAc,CAAC;QAAEe,KAAK,EAAEA;MAAK,CAAE,CAAC,CAAC;IACvD;IAEAE,eAAeA,CAACF,KAAa;MAC3B,IAAI,CAACG,iBAAiB,EAAE;MACxB,IAAI,CAACX,oBAAoB,GAAGQ,KAAK;MACjCH,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEE,KAAK,CAAC;IAC9C;IAEAI,cAAcA,CAAA;MACZ,OAAO,IAAI,CAACb,mBAAmB,IAAIM,YAAY,CAACQ,OAAO,CAAC,IAAI,CAAChB,cAAc,CAAC;IAC9E;IAEAiB,eAAeA,CAAA;MACb,OAAO,IAAI,CAACd,oBAAoB,IAAIK,YAAY,CAACQ,OAAO,CAAC,IAAI,CAACf,eAAe,CAAC;IAChF;IAEAM,WAAWA,CAAA;MACT,IAAI,CAACL,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAACC,oBAAoB,GAAG,IAAI;MAEhCK,YAAY,CAACU,UAAU,CAAC,IAAI,CAAClB,cAAc,CAAC;MAC5CQ,YAAY,CAACU,UAAU,CAAC,IAAI,CAACjB,eAAe,CAAC;IAC/C;IAEAW,gBAAgBA,CAAA;MACd,IAAI,CAACV,mBAAmB,GAAG,IAAI;MAE/BM,YAAY,CAACU,UAAU,CAAC,IAAI,CAAClB,cAAc,CAAC;IAC9C;IAEAc,iBAAiBA,CAAA;MACf,IAAI,CAACX,oBAAoB,GAAG,IAAI;MAEhCK,YAAY,CAACU,UAAU,CAAC,IAAI,CAACjB,eAAe,CAAC;IAC/C;;uCA7DWJ,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA;IAAA;;aAAZzB,YAAY;MAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;MAAAC,UAAA,EADC;IAAM;;SACnB5B,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}