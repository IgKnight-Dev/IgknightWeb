{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, inject, ElementRef, NgZone, EventEmitter, Directive, Input, Output, TemplateRef, ViewContainerRef, Component, ViewChild, ContentChild, ChangeDetectorRef, DestroyRef, ContentChildren, NgModule, ChangeDetectionStrategy, ViewEncapsulation, PLATFORM_ID, Injector, afterNextRender, LOCALE_ID, forwardRef, DOCUMENT, afterEveryRender, ApplicationRef, EnvironmentInjector, createComponent, Attribute, ViewChildren, InjectionToken } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, map, startWith, distinctUntilChanged, switchMap, take, tap, withLatestFrom, delay, mergeMap, skip, finalize } from 'rxjs/operators';\nimport { isPlatformBrowser, NgTemplateOutlet, formatDate, PercentPipe } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\nconst _c0 = [\"container\"];\nconst _c1 = [\"ngbAccordionBody\", \"\"];\nconst _c2 = [\"*\"];\nfunction NgbAlert_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NgbAlert_Conditional_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgbCarousel_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_For_2_Template_button_click_0_listener() {\n      const slide_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.focus();\n      return i0.ɵɵresetView(ctx_r2.select(slide_r2.id, ctx_r2.NgbSlideEventSource.INDICATOR));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const slide_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", slide_r2.id === ctx_r2.activeId);\n    i0.ɵɵattribute(\"aria-labelledby\", \"slide-\" + slide_r2.id)(\"aria-controls\", \"slide-\" + slide_r2.id)(\"aria-selected\", slide_r2.id === ctx_r2.activeId);\n  }\n}\nfunction NgbCarousel_For_5_ng_template_3_Template(rf, ctx) {}\nfunction NgbCarousel_For_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"span\", 8);\n    i0.ɵɵi18n(2, 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbCarousel_For_5_ng_template_3_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    const ɵ$index_8_r5 = ctx.$index;\n    const ɵ$count_8_r6 = ctx.$count;\n    i0.ɵɵproperty(\"id\", \"slide-\" + slide_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(ɵ$index_8_r5 + 1)(ɵ$count_8_r6);\n    i0.ɵɵi18nApply(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r4.templateRef);\n  }\n}\nfunction NgbCarousel_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.arrowLeft());\n    });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementStart(2, \"span\", 12);\n    i0.ɵɵi18n(3, 1);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_Conditional_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.arrowRight());\n    });\n    i0.ɵɵelement(5, \"span\", 14);\n    i0.ɵɵelementStart(6, \"span\", 12);\n    i0.ɵɵi18n(7, 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r2.id + \"-previous\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"-previous\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r2.id + \"-next\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"-next\");\n  }\n}\nconst _c3 = [\"ngbDatepickerDayView\", \"\"];\nconst _c4 = [\"month\"];\nconst _c5 = [\"year\"];\nfunction NgbDatepickerNavigationSelect_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const m_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", m_r2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.i18n.getMonthFullName(m_r2, ctx_r2.date.year));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.i18n.getMonthShortName(m_r2, ctx_r2.date.year));\n  }\n}\nfunction NgbDatepickerNavigationSelect_For_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const y_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", y_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.i18n.getYearNumerals(y_r4));\n  }\n}\nfunction _forTrack0($index, $item) {\n  return this.idMonth($item);\n}\nfunction NgbDatepickerNavigation_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    i0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_Conditional_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.select.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r1.date)(\"disabled\", ctx_r1.disabled)(\"months\", ctx_r1.selectBoxes.months)(\"years\", ctx_r1.selectBoxes.years);\n  }\n}\nfunction NgbDatepickerNavigation_Conditional_4_For_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\nfunction NgbDatepickerNavigation_Conditional_4_For_1_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\nfunction NgbDatepickerNavigation_Conditional_4_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NgbDatepickerNavigation_Conditional_4_For_1_Conditional_0_Template, 1, 0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵconditionalCreate(3, NgbDatepickerNavigation_Conditional_4_For_1_Conditional_3_Template, 1, 0, \"div\", 8);\n  }\n  if (rf & 2) {\n    const month_r3 = ctx.$implicit;\n    const ɵ$index_11_r4 = ctx.$index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional(ɵ$index_11_r4 > 0 ? 0 : -1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.i18n.getMonthLabel(month_r3.firstDate), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ɵ$index_11_r4 !== ctx_r1.months.length - 1 ? 3 : -1);\n  }\n}\nfunction NgbDatepickerNavigation_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, NgbDatepickerNavigation_Conditional_4_For_1_Template, 4, 3, null, null, _forTrack0, true);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵrepeater(ctx_r1.months);\n  }\n}\nfunction NgbDatepickerNavigation_For_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthLabel(month_r5.firstDate));\n  }\n}\nfunction NgbDatepickerMonth_Conditional_0_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.i18n.getWeekLabel());\n  }\n}\nfunction NgbDatepickerMonth_Conditional_0_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weekday_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(weekday_r2);\n  }\n}\nfunction NgbDatepickerMonth_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵconditionalCreate(1, NgbDatepickerMonth_Conditional_0_Conditional_1_Template, 2, 1, \"div\", 1);\n    i0.ɵɵrepeaterCreate(2, NgbDatepickerMonth_Conditional_0_For_3_Template, 2, 1, \"div\", 2, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.datepicker.showWeekNumbers ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r0.viewModel.weekdays);\n  }\n}\nfunction NgbDatepickerMonth_For_2_Conditional_0_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const week_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.i18n.getWeekNumerals(week_r3.number));\n  }\n}\nfunction NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 7);\n  }\n  if (rf & 2) {\n    const day_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r5.context);\n  }\n}\nfunction NgbDatepickerMonth_For_2_Conditional_0_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function NgbDatepickerMonth_For_2_Conditional_0_For_3_Template_div_click_0_listener($event) {\n      const day_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      ctx_r0.doSelect(day_r5);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵconditionalCreate(1, NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_Template, 1, 2, null, 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const day_r5 = ctx.$implicit;\n    i0.ɵɵclassProp(\"disabled\", day_r5.context.disabled)(\"hidden\", day_r5.hidden)(\"ngb-dp-today\", day_r5.context.today);\n    i0.ɵɵproperty(\"tabindex\", day_r5.tabindex);\n    i0.ɵɵattribute(\"aria-label\", day_r5.ariaLabel)(\"aria-disabled\", day_r5.context.disabled)(\"aria-selected\", day_r5.context.selected);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!day_r5.hidden ? 1 : -1);\n  }\n}\nfunction NgbDatepickerMonth_For_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵconditionalCreate(1, NgbDatepickerMonth_For_2_Conditional_0_Conditional_1_Template, 2, 1, \"div\", 4);\n    i0.ɵɵrepeaterCreate(2, NgbDatepickerMonth_For_2_Conditional_0_For_3_Template, 2, 11, \"div\", 5, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const week_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.datepicker.showWeekNumbers ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(week_r3.days);\n  }\n}\nfunction NgbDatepickerMonth_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NgbDatepickerMonth_For_2_Conditional_0_Template, 4, 1, \"div\", 3);\n  }\n  if (rf & 2) {\n    const week_r3 = ctx.$implicit;\n    i0.ɵɵconditional(!week_r3.collapsed ? 0 : -1);\n  }\n}\nconst _c6 = [\"defaultDayTemplate\"];\nconst _c7 = [\"content\"];\nconst _c8 = a0 => ({\n  $implicit: a0\n});\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n  if (rf & 2) {\n    const date_r1 = ctx.date;\n    const currentMonth_r2 = ctx.currentMonth;\n    const selected_r3 = ctx.selected;\n    const disabled_r4 = ctx.disabled;\n    const focused_r5 = ctx.focused;\n    i0.ɵɵproperty(\"date\", date_r1)(\"currentMonth\", currentMonth_r2)(\"selected\", selected_r3)(\"disabled\", disabled_r4)(\"focused\", focused_r5);\n  }\n}\nfunction NgbDatepicker_ng_template_2_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const month_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.i18n.getMonthLabel(month_r6.firstDate), \" \");\n  }\n}\nfunction NgbDatepicker_ng_template_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵconditionalCreate(1, NgbDatepicker_ng_template_2_For_1_Conditional_1_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const month_r6 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r6.navigation === \"none\" || ctx_r6.displayMonths > 1 && ctx_r6.navigation === \"select\" ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"month\", month_r6.firstDate);\n  }\n}\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, NgbDatepicker_ng_template_2_For_1_Template, 3, 2, \"div\", 9, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵrepeater(ctx_r6.model.months);\n  }\n}\nfunction NgbDatepicker_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 12);\n    i0.ɵɵlistener(\"navigate\", function NgbDatepicker_Conditional_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onNavigateEvent($event));\n    })(\"select\", function NgbDatepicker_Conditional_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onNavigateDateSelect($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r6.model.firstDate)(\"months\", ctx_r6.model.months)(\"disabled\", ctx_r6.model.disabled)(\"showSelect\", ctx_r6.model.navigation === \"select\")(\"prevDisabled\", ctx_r6.model.prevDisabled)(\"nextDisabled\", ctx_r6.model.nextDisabled)(\"selectBoxes\", ctx_r6.model.selectBoxes);\n  }\n}\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\nconst _c9 = [\"dialog\"];\nconst _c10 = [\"ngbNavOutlet\", \"\"];\nfunction NgbNavOutlet_For_1_Conditional_0_ng_template_1_Template(rf, ctx) {}\nfunction NgbNavOutlet_For_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, NgbNavOutlet_For_1_Conditional_0_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", item_r1)(\"nav\", ctx_r1.nav)(\"role\", ctx_r1.paneRole);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c8, item_r1.active || ctx_r1.isPanelTransitioning(item_r1)));\n  }\n}\nfunction NgbNavOutlet_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NgbNavOutlet_For_1_Conditional_0_Template, 2, 7, \"div\", 0);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(item_r1.isPanelInDom() || ctx_r1.isPanelTransitioning(item_r1) ? 0 : -1);\n  }\n}\nconst _c11 = (a0, a1, a2) => ({\n  $implicit: a0,\n  pages: a1,\n  disabled: a2\n});\nconst _c12 = a0 => ({\n  disabled: true,\n  currentPage: a0\n});\nconst _c13 = (a0, a1, a2) => ({\n  disabled: a0,\n  $implicit: a1,\n  currentPage: a2\n});\nconst _c14 = (a0, a1) => ({\n  disabled: a0,\n  currentPage: a1\n});\nconst _c15 = a0 => ({\n  disabled: a0\n});\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵi18n(1, 7);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵi18n(1, 8);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵi18n(1, 9);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵi18n(1, 10);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"...\");\n  }\n}\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const page_r1 = ctx.$implicit;\n    i0.ɵɵtextInterpolate(page_r1);\n  }\n}\nfunction NgbPagination_ng_template_12_For_1_Conditional_1_ng_template_1_Template(rf, ctx) {}\nfunction NgbPagination_ng_template_12_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_For_1_Conditional_1_ng_template_1_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const page_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const ellipsis_r4 = i0.ɵɵreference(9);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplEllipsis == null ? null : ctx_r2.tplEllipsis.templateRef) || ellipsis_r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, page_r2));\n  }\n}\nfunction NgbPagination_ng_template_12_For_1_Conditional_2_ng_template_1_Template(rf, ctx) {}\nfunction NgbPagination_ng_template_12_For_1_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function NgbPagination_ng_template_12_For_1_Conditional_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const pageNumber_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      ctx_r2.selectPage(pageNumber_r6);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_For_1_Conditional_2_ng_template_1_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageNumber_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    const page_r2 = ctx_r6.$implicit;\n    const disabled_r8 = ctx_r6.disabled;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const defaultNumber_r9 = i0.ɵɵreference(11);\n    i0.ɵɵattribute(\"tabindex\", disabled_r8 ? \"-1\" : null)(\"aria-disabled\", disabled_r8 ? \"true\" : null)(\"aria-current\", pageNumber_r6 === page_r2 ? \"page\" : null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplNumber == null ? null : ctx_r2.tplNumber.templateRef) || defaultNumber_r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(5, _c13, disabled_r8, pageNumber_r6, page_r2));\n  }\n}\nfunction NgbPagination_ng_template_12_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵconditionalCreate(1, NgbPagination_ng_template_12_For_1_Conditional_1_Template, 2, 4, \"a\", 16)(2, NgbPagination_ng_template_12_For_1_Conditional_2_Template, 2, 9, \"a\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageNumber_r6 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    const page_r2 = ctx_r6.$implicit;\n    const disabled_r8 = ctx_r6.disabled;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", pageNumber_r6 === page_r2)(\"disabled\", ctx_r2.isEllipsis(pageNumber_r6) || disabled_r8);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.isEllipsis(pageNumber_r6) ? 1 : 2);\n  }\n}\nfunction NgbPagination_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, NgbPagination_ng_template_12_For_1_Template, 3, 5, \"li\", 14, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const pages_r10 = ctx.pages;\n    i0.ɵɵrepeater(pages_r10);\n  }\n}\nfunction NgbPagination_Conditional_15_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_Conditional_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function NgbPagination_Conditional_15_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.selectPage(1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_Conditional_15_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const first_r12 = i0.ɵɵreference(1);\n    i0.ɵɵclassProp(\"disabled\", ctx_r2.previousDisabled());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"tabindex\", ctx_r2.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r2.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplFirst == null ? null : ctx_r2.tplFirst.templateRef) || first_r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c14, ctx_r2.previousDisabled(), ctx_r2.page));\n  }\n}\nfunction NgbPagination_Conditional_16_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function NgbPagination_Conditional_16_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.selectPage(ctx_r2.page - 1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_Conditional_16_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const previous_r14 = i0.ɵɵreference(3);\n    i0.ɵɵclassProp(\"disabled\", ctx_r2.previousDisabled());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"tabindex\", ctx_r2.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r2.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplPrevious == null ? null : ctx_r2.tplPrevious.templateRef) || previous_r14)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c15, ctx_r2.previousDisabled()));\n  }\n}\nfunction NgbPagination_ng_template_17_Template(rf, ctx) {}\nfunction NgbPagination_Conditional_18_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function NgbPagination_Conditional_18_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.selectPage(ctx_r2.page + 1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_Conditional_18_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const next_r16 = i0.ɵɵreference(5);\n    i0.ɵɵclassProp(\"disabled\", ctx_r2.nextDisabled());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"tabindex\", ctx_r2.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r2.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplNext == null ? null : ctx_r2.tplNext.templateRef) || next_r16)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c14, ctx_r2.nextDisabled(), ctx_r2.page));\n  }\n}\nfunction NgbPagination_Conditional_19_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_Conditional_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 22);\n    i0.ɵɵlistener(\"click\", function NgbPagination_Conditional_19_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r2 = i0.ɵɵnextContext();\n      ctx_r2.selectPage(ctx_r2.pageCount);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_Conditional_19_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const last_r18 = i0.ɵɵreference(7);\n    i0.ɵɵclassProp(\"disabled\", ctx_r2.nextDisabled());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"tabindex\", ctx_r2.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r2.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r2.tplLast == null ? null : ctx_r2.tplLast.templateRef) || last_r18)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c14, ctx_r2.nextDisabled(), ctx_r2.page));\n  }\n}\nfunction NgbPopoverWindow_Conditional_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction NgbPopoverWindow_Conditional_1_ng_template_3_Template(rf, ctx) {}\nfunction NgbPopoverWindow_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 2);\n    i0.ɵɵtemplate(1, NgbPopoverWindow_Conditional_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(3, NgbPopoverWindow_Conditional_1_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const simpleTitle_r2 = i0.ɵɵreference(2);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : simpleTitle_r2)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\nfunction NgbProgressbar_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵi18n(1, 0);\n    i0.ɵɵpipe(2, \"percent\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(i0.ɵɵpipeBind1(2, 1, ctx_r0.getValue() / ctx_r0.max));\n    i0.ɵɵi18nApply(1);\n  }\n}\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const fill_r1 = ctx.fill;\n    i0.ɵɵtextInterpolate(fill_r1 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\nfunction NgbRating_For_3_ng_template_3_Template(rf, ctx) {}\nfunction NgbRating_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 2);\n    i0.ɵɵlistener(\"mouseenter\", function NgbRating_For_3_Template_span_mouseenter_2_listener() {\n      const ɵ$index_4_r3 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.enter(ɵ$index_4_r3 + 1));\n    })(\"click\", function NgbRating_For_3_Template_span_click_2_listener() {\n      const ɵ$index_4_r3 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.handleClick(ɵ$index_4_r3 + 1));\n    });\n    i0.ɵɵtemplate(3, NgbRating_For_3_ng_template_3_Template, 0, 0, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ɵ$index_4_r3 = ctx.$index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    const t_r5 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ɵ$index_4_r3 < ctx_r3.nextRate ? \"*\" : \" \", \")\");\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"cursor\", ctx_r3.isInteractive() ? \"pointer\" : \"default\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.starTemplate || ctx_r3.starTemplateFromContent || t_r5)(\"ngTemplateOutletContext\", ctx_r3.contexts[ɵ$index_4_r3]);\n  }\n}\nfunction NgbTimepicker_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeHour(ctx_r1.hourStep));\n    });\n    i0.ɵɵelement(1, \"span\", 16);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeHour(-ctx_r1.hourStep));\n    });\n    i0.ɵɵelement(1, \"span\", 18);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeMinute(ctx_r1.minuteStep));\n    });\n    i0.ɵɵelement(1, \"span\", 16);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changeMinute(-ctx_r1.minuteStep));\n    });\n    i0.ɵɵelement(1, \"span\", 18);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_12_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_12_Conditional_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changeSecond(ctx_r1.secondStep));\n    });\n    i0.ɵɵelement(1, \"span\", 16);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_12_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_12_Conditional_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changeSecond(-ctx_r1.secondStep));\n    });\n    i0.ɵɵelement(1, \"span\", 18);\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵi18n(3, 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \":\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵconditionalCreate(3, NgbTimepicker_Conditional_12_Conditional_3_Template, 4, 7, \"button\", 10);\n    i0.ɵɵelementStart(4, \"input\", 20);\n    i0.ɵɵlistener(\"change\", function NgbTimepicker_Conditional_12_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateSecond($event.target.value));\n    })(\"blur\", function NgbTimepicker_Conditional_12_Template_input_blur_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.handleBlur());\n    })(\"input\", function NgbTimepicker_Conditional_12_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.formatInput($event.target));\n    })(\"keydown.ArrowUp\", function NgbTimepicker_Conditional_12_Template_input_keydown_ArrowUp_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.changeSecond(ctx_r1.secondStep);\n      return i0.ɵɵresetView($event.preventDefault());\n    })(\"keydown.ArrowDown\", function NgbTimepicker_Conditional_12_Template_input_keydown_ArrowDown_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.changeSecond(-ctx_r1.secondStep);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵconditionalCreate(5, NgbTimepicker_Conditional_12_Conditional_5_Template, 4, 7, \"button\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(ctx_r1.spinners ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"form-control-sm\", ctx_r1.isSmallSize)(\"form-control-lg\", ctx_r1.isLargeSize);\n    i0.ɵɵproperty(\"value\", ctx_r1.formatMinSec(ctx_r1.model == null ? null : ctx_r1.model.second))(\"readOnly\", ctx_r1.readonlyInputs)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.spinners ? 5 : -1);\n  }\n}\nfunction NgbTimepicker_Conditional_13_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵi18nExp(ctx_r1.i18n.getAfternoonPeriod());\n    i0.ɵɵi18nApply(1);\n  }\n}\nfunction NgbTimepicker_Conditional_13_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.i18n.getMorningPeriod());\n  }\n}\nfunction NgbTimepicker_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelement(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"div\", 21)(2, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_Conditional_13_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.toggleMeridian());\n    });\n    i0.ɵɵconditionalCreate(3, NgbTimepicker_Conditional_13_Conditional_3_Template, 2, 1, \"ng-container\")(4, NgbTimepicker_Conditional_13_Conditional_4_Template, 2, 1, \"ng-container\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.model && ctx_r1.model.hour >= 12 ? 3 : 4);\n  }\n}\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.header);\n  }\n}\nfunction NgbToast_Conditional_2_ng_template_1_Template(rf, ctx) {}\nfunction NgbToast_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NgbToast_Conditional_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementStart(2, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function NgbToast_Conditional_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.hide());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const headerTpl_r3 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.contentHeaderTpl || headerTpl_r3);\n  }\n}\nfunction NgbHighlight_For_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.highlightClass);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\nfunction NgbHighlight_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\nfunction NgbHighlight_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NgbHighlight_For_1_Conditional_0_Template, 2, 3, \"span\", 0)(1, NgbHighlight_For_1_Conditional_1_Template, 2, 1, \"ng-container\");\n  }\n  if (rf & 2) {\n    const ɵ$index_1_r3 = ctx.$index;\n    i0.ɵɵconditional(ɵ$index_1_r3 % 2 !== 0 ? 0 : 1);\n  }\n}\nconst _c16 = (a0, a1, a2) => ({\n  result: a0,\n  term: a1,\n  formatter: a2\n});\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n  if (rf & 2) {\n    const result_r1 = ctx.result;\n    const term_r2 = ctx.term;\n    const formatter_r3 = ctx.formatter;\n    i0.ɵɵproperty(\"result\", formatter_r3(result_r1))(\"term\", term_r2);\n  }\n}\nfunction NgbTypeaheadWindow_For_3_ng_template_1_Template(rf, ctx) {}\nfunction NgbTypeaheadWindow_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_For_3_Template_button_mouseenter_0_listener() {\n      const $index_r5 = i0.ɵɵrestoreView(_r4).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.markActive($index_r5));\n    })(\"click\", function NgbTypeaheadWindow_For_3_Template_button_click_0_listener() {\n      const result_r7 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.select(result_r7));\n    });\n    i0.ɵɵtemplate(1, NgbTypeaheadWindow_For_3_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r7 = ctx.$implicit;\n    const $index_r5 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    const rt_r8 = i0.ɵɵreference(1);\n    i0.ɵɵclassProp(\"active\", $index_r5 === ctx_r5.activeIdx);\n    i0.ɵɵproperty(\"id\", ctx_r5.id + \"-\" + $index_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.resultTemplate || rt_r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(5, _c16, result_r7, ctx_r5.term, ctx_r5.formatter));\n  }\n}\nconst environment = {\n  animation: true,\n  transitionTimerDelayMs: 5\n};\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\nlet NgbConfig = /*#__PURE__*/(() => {\n  class NgbConfig {\n    constructor() {\n      this.animation = environment.animation;\n    }\n    static #_ = this.ɵfac = function NgbConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbConfig,\n      factory: NgbConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nlet NgbAccordionConfig = /*#__PURE__*/(() => {\n  class NgbAccordionConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.closeOthers = false;\n      this.destroyOnHide = true;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbAccordionConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbAccordionConfig,\n      factory: NgbAccordionConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbAccordionConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction getTransitionDurationMs(element) {\n  const {\n    transitionDelay,\n    transitionDuration\n  } = window.getComputedStyle(element);\n  const transitionDelaySec = parseFloat(transitionDelay);\n  const transitionDurationSec = parseFloat(transitionDuration);\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\nfunction toString(value) {\n  return value !== undefined && value !== null ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n  return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\nfunction isPromise(v) {\n  return v && v.then;\n}\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  /*\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\n   * we return null when the method is missing.\n   *\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n   * will return the document element whilst in Edge null will be returned. This\n   * compromise was deemed good enough.\n   */\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n  return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nfunction reflow(element) {\n  return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nfunction runInZone(zone) {\n  return source => {\n    return new Observable(observer => {\n      const next = value => zone.run(() => observer.next(value));\n      const error = e => zone.run(() => observer.error(e));\n      const complete = () => zone.run(() => observer.complete());\n      return source.subscribe({\n        next,\n        error,\n        complete\n      });\n    });\n  };\n}\nfunction removeAccents(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\nfunction getActiveElement(root = document) {\n  const activeEl = root?.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  return activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\nconst noopFn = () => {};\nconst {\n  transitionTimerDelayMs\n} = environment;\nconst runningTransitions = new Map();\nconst ngbRunTransition = (zone, element, startFn, options) => {\n  // Getting initial context from options\n  let context = options.context || {};\n  // Checking if there are already running transitions on the given element.\n  const running = runningTransitions.get(element);\n  if (running) {\n    switch (options.runningTransition) {\n      // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n      // We're not emitting any values, but simply completing the observable (EMPTY).\n      case 'continue':\n        return EMPTY;\n      // If there is one running and we want for it to 'stop', we have to complete the running one.\n      // We're simply completing the running one and not emitting any values and merging newly provided context\n      // with the one coming from currently running transition.\n      case 'stop':\n        zone.run(() => running.transition$.complete());\n        context = Object.assign(running.context, context);\n        runningTransitions.delete(element);\n    }\n  }\n  // Running the start function\n  const endFn = startFn(element, options.animation, context) || noopFn;\n  // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n  // If animations are disabled, we have to emit a value and complete the observable\n  // In this case we have to call the end function, but can finish immediately by emitting a value,\n  // completing the observable and executing end functions synchronously.\n  if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n    zone.run(() => endFn());\n    return of(undefined).pipe(runInZone(zone));\n  }\n  // Starting a new transition\n  const transition$ = new Subject();\n  const finishTransition$ = new Subject();\n  const stop$ = transition$.pipe(endWith(true));\n  runningTransitions.set(element, {\n    transition$,\n    complete: () => {\n      finishTransition$.next();\n      finishTransition$.complete();\n    },\n    context\n  });\n  const transitionDurationMs = getTransitionDurationMs(element);\n  // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n  // because 'transitionend' event might not be fired in some browsers, if the transitioning\n  // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n  // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n  // 2. We need to filter transition end events, because they might bubble from shorter transitions\n  // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n  zone.runOutsideAngular(() => {\n    const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({\n      target\n    }) => target === element));\n    const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n    race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(() => {\n      runningTransitions.delete(element);\n      zone.run(() => {\n        endFn();\n        transition$.next();\n        transition$.complete();\n      });\n    });\n  });\n  return transition$.asObservable();\n};\nconst ngbCompleteTransition = element => {\n  runningTransitions.get(element)?.complete();\n};\nfunction measureCollapsingElementDimensionPx(element, dimension) {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n  const {\n    classList\n  } = element;\n  const hasShownClass = classList.contains('show');\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n  element.style[dimension] = '';\n  const dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n  return dimensionSize;\n}\nconst ngbCollapsingTransition = (element, animation, context) => {\n  let {\n    direction,\n    maxSize,\n    dimension\n  } = context;\n  const {\n    classList\n  } = element;\n  function setInitialClasses() {\n    classList.add('collapse');\n    if (direction === 'show') {\n      classList.add('show');\n    } else {\n      classList.remove('show');\n    }\n  }\n  // without animations we just need to set initial classes\n  if (!animation) {\n    setInitialClasses();\n    return;\n  }\n  // No maxHeight -> running the transition for the first time\n  if (!maxSize) {\n    maxSize = measureCollapsingElementDimensionPx(element, dimension);\n    context.maxSize = maxSize;\n    // Fix the height before starting the animation\n    element.style[dimension] = direction !== 'show' ? maxSize : '0px';\n    classList.remove('collapse', 'collapsing', 'show');\n    reflow(element);\n    // Start the animation\n    classList.add('collapsing');\n  }\n  // Start or revert the animation\n  element.style[dimension] = direction === 'show' ? maxSize : '0px';\n  return () => {\n    setInitialClasses();\n    classList.remove('collapsing');\n    element.style[dimension] = '';\n  };\n};\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\nlet NgbCollapseConfig = /*#__PURE__*/(() => {\n  class NgbCollapseConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.horizontal = false;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbCollapseConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCollapseConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCollapseConfig,\n      factory: NgbCollapseConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbCollapseConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\nlet NgbCollapse = /*#__PURE__*/(() => {\n  class NgbCollapse {\n    constructor() {\n      this._config = inject(NgbCollapseConfig);\n      this._element = inject(ElementRef);\n      this._zone = inject(NgZone);\n      /**\n       * If `true`, collapse will be animated.\n       *\n       * Animation is triggered only when clicked on triggering element\n       * or via the `.toggle()` function\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * Flag used to track if the collapse setter is invoked during initialization\n       * or not. This distinction is made in order to avoid running the transition during initialization.\n       */\n      this._afterInit = false;\n      this._isCollapsed = false;\n      this.ngbCollapseChange = new EventEmitter();\n      /**\n       * If `true`, will collapse horizontally.\n       *\n       * @since 13.1.0\n       */\n      this.horizontal = this._config.horizontal;\n      /**\n       * An event emitted when the collapse element is shown, after the transition.\n       * It has no payload.\n       *\n       * @since 8.0.0\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event emitted when the collapse element is hidden, after the transition.\n       * It has no payload.\n       *\n       * @since 8.0.0\n       */\n      this.hidden = new EventEmitter();\n    }\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n    set collapsed(isCollapsed) {\n      if (this._isCollapsed !== isCollapsed) {\n        this._isCollapsed = isCollapsed;\n        if (this._afterInit) {\n          this._runTransitionWithEvents(isCollapsed, this.animation);\n        }\n      }\n    }\n    ngOnInit() {\n      this._runTransition(this._isCollapsed, false);\n      this._afterInit = true;\n    }\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open = this._isCollapsed) {\n      this.collapsed = !open;\n      this.ngbCollapseChange.next(this._isCollapsed);\n    }\n    _runTransition(collapsed, animation) {\n      return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n        animation,\n        runningTransition: 'stop',\n        context: {\n          direction: collapsed ? 'hide' : 'show',\n          dimension: this.horizontal ? 'width' : 'height'\n        }\n      });\n    }\n    _runTransitionWithEvents(collapsed, animation) {\n      this._runTransition(collapsed, animation).subscribe(() => {\n        if (collapsed) {\n          this.hidden.emit();\n        } else {\n          this.shown.emit();\n        }\n      });\n    }\n    static #_ = this.ɵfac = function NgbCollapse_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCollapse)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbCollapse,\n      selectors: [[\"\", \"ngbCollapse\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NgbCollapse_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"collapse-horizontal\", ctx.horizontal);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        collapsed: [0, \"ngbCollapse\", \"collapsed\"],\n        horizontal: \"horizontal\"\n      },\n      outputs: {\n        ngbCollapseChange: \"ngbCollapseChange\",\n        shown: \"shown\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbCollapse\"]\n    });\n  }\n  return NgbCollapse;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextId$3 = 0;\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\nlet NgbAccordionBody = /*#__PURE__*/(() => {\n  class NgbAccordionBody {\n    constructor() {\n      this._item = inject(NgbAccordionItem);\n      this._viewRef = null;\n      /**\n       * the `ElementRef` of the component\n       *\n       * @since 18.0.0\n       */\n      this.elementRef = inject(ElementRef);\n    }\n    ngAfterContentChecked() {\n      if (this._bodyTpl) {\n        if (this._item._shouldBeInDOM) {\n          this._createViewIfNotExists();\n        } else {\n          this._destroyViewIfExists();\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._destroyViewIfExists();\n    }\n    _destroyViewIfExists() {\n      this._viewRef?.destroy();\n      this._viewRef = null;\n    }\n    _createViewIfNotExists() {\n      if (!this._viewRef) {\n        this._viewRef = this._vcr.createEmbeddedView(this._bodyTpl);\n        this._viewRef.detectChanges();\n      }\n    }\n    static #_ = this.ɵfac = function NgbAccordionBody_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionBody)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbAccordionBody,\n      selectors: [[\"\", \"ngbAccordionBody\", \"\"]],\n      contentQueries: function NgbAccordionBody_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyTpl = _t.first);\n        }\n      },\n      viewQuery: function NgbAccordionBody_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._vcr = _t.first);\n        }\n      },\n      hostAttrs: [1, \"accordion-body\"],\n      attrs: _c1,\n      ngContentSelectors: _c2,\n      decls: 3,\n      vars: 0,\n      consts: [[\"container\", \"\"]],\n      template: function NgbAccordionBody_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementContainer(0, null, 0);\n          i0.ɵɵprojection(2);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return NgbAccordionBody;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\nlet NgbAccordionCollapse = /*#__PURE__*/(() => {\n  class NgbAccordionCollapse {\n    constructor() {\n      this.item = inject(NgbAccordionItem);\n      this.ngbCollapse = inject(NgbCollapse);\n    }\n    static #_ = this.ɵfac = function NgbAccordionCollapse_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionCollapse)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionCollapse,\n      selectors: [[\"\", \"ngbAccordionCollapse\", \"\"]],\n      hostAttrs: [\"role\", \"region\", 1, \"accordion-collapse\"],\n      hostVars: 2,\n      hostBindings: function NgbAccordionCollapse_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.item.collapseId);\n          i0.ɵɵattribute(\"aria-labelledby\", ctx.item.toggleId);\n        }\n      },\n      exportAs: [\"ngbAccordionCollapse\"],\n      features: [i0.ɵɵHostDirectivesFeature([NgbCollapse])]\n    });\n  }\n  return NgbAccordionCollapse;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\nlet NgbAccordionToggle = /*#__PURE__*/(() => {\n  class NgbAccordionToggle {\n    constructor() {\n      this.item = inject(NgbAccordionItem);\n      this.accordion = inject(NgbAccordionDirective);\n    }\n    static #_ = this.ɵfac = function NgbAccordionToggle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionToggle)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionToggle,\n      selectors: [[\"\", \"ngbAccordionToggle\", \"\"]],\n      hostVars: 5,\n      hostBindings: function NgbAccordionToggle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgbAccordionToggle_click_HostBindingHandler() {\n            return !ctx.item.disabled && ctx.accordion.toggle(ctx.item.id);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.item.toggleId);\n          i0.ɵɵattribute(\"aria-controls\", ctx.item.collapseId)(\"aria-expanded\", !ctx.item.collapsed);\n          i0.ɵɵclassProp(\"collapsed\", ctx.item.collapsed);\n        }\n      }\n    });\n  }\n  return NgbAccordionToggle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\nlet NgbAccordionButton = /*#__PURE__*/(() => {\n  class NgbAccordionButton {\n    constructor() {\n      this.item = inject(NgbAccordionItem);\n    }\n    static #_ = this.ɵfac = function NgbAccordionButton_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionButton)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionButton,\n      selectors: [[\"button\", \"ngbAccordionButton\", \"\"]],\n      hostAttrs: [\"type\", \"button\", 1, \"accordion-button\"],\n      hostVars: 1,\n      hostBindings: function NgbAccordionButton_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"disabled\", ctx.item.disabled);\n        }\n      },\n      features: [i0.ɵɵHostDirectivesFeature([NgbAccordionToggle])]\n    });\n  }\n  return NgbAccordionButton;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\nlet NgbAccordionHeader = /*#__PURE__*/(() => {\n  class NgbAccordionHeader {\n    constructor() {\n      this.item = inject(NgbAccordionItem);\n    }\n    static #_ = this.ɵfac = function NgbAccordionHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionHeader)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionHeader,\n      selectors: [[\"\", \"ngbAccordionHeader\", \"\"]],\n      hostAttrs: [\"role\", \"heading\", 1, \"accordion-header\"],\n      hostVars: 2,\n      hostBindings: function NgbAccordionHeader_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"collapsed\", ctx.item.collapsed);\n        }\n      }\n    });\n  }\n  return NgbAccordionHeader;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\nlet NgbAccordionItem = /*#__PURE__*/(() => {\n  class NgbAccordionItem {\n    constructor() {\n      this._accordion = inject(NgbAccordionDirective);\n      this._cd = inject(ChangeDetectorRef);\n      this._destroyRef = inject(DestroyRef);\n      this._collapsed = true;\n      this._id = `ngb-accordion-item-${nextId$3++}`;\n      this._collapseAnimationRunning = false;\n      /**\n       * If `true`, the accordion item will be disabled.\n       * It won't react to user's clicks, but still will be toggelable programmatically.\n       */\n      this.disabled = false;\n      /**\n       * Event emitted before the expanding animation starts. It has no payload.\n       *\n       * @since 15.1.0\n       */\n      this.show = new EventEmitter();\n      /**\n       * Event emitted when the expanding animation is finished. It has no payload.\n       */\n      this.shown = new EventEmitter();\n      /**\n       * Event emitted before the collapsing animation starts. It has no payload.\n       *\n       * @since 15.1.0\n       */\n      this.hide = new EventEmitter();\n      /**\n       * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n       * It has no payload.\n       */\n      this.hidden = new EventEmitter();\n    }\n    /**\n     * Sets the custom ID of the accordion item. It must be unique for the document.\n     *\n     * @param id The ID of the accordion item, must be a non-empty string\n     */\n    set id(id) {\n      if (isString(id) && id !== '') {\n        this._id = id;\n      }\n    }\n    /**\n     * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n     *\n     * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n     */\n    set destroyOnHide(destroyOnHide) {\n      this._destroyOnHide = destroyOnHide;\n    }\n    get destroyOnHide() {\n      return this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide;\n    }\n    /**\n     *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n     *\n     * @param collapsed New state of the accordion item.\n     */\n    set collapsed(collapsed) {\n      if (collapsed) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    }\n    get collapsed() {\n      return this._collapsed;\n    }\n    get id() {\n      return `${this._id}`;\n    }\n    get toggleId() {\n      return `${this.id}-toggle`;\n    }\n    get collapseId() {\n      return `${this.id}-collapse`;\n    }\n    get _shouldBeInDOM() {\n      return !this.collapsed || this._collapseAnimationRunning || !this.destroyOnHide;\n    }\n    ngAfterContentInit() {\n      const {\n        ngbCollapse\n      } = this._collapse;\n      // we need to disable the animation for the first init\n      ngbCollapse.animation = false;\n      ngbCollapse.collapsed = this.collapsed;\n      // we set the animation to the default of the accordion\n      ngbCollapse.animation = this._accordion.animation;\n      // event forwarding from 'ngbCollapse' to 'ngbAccordion'\n      ngbCollapse.hidden.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n        // when the animation finishes we can remove the template from DOM\n        this._collapseAnimationRunning = false;\n        this.hidden.emit();\n        this._accordion.hidden.emit(this.id);\n        // need if the accordion is used inside a component having OnPush change detection strategy\n        this._cd.markForCheck();\n      });\n      ngbCollapse.shown.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n        this.shown.emit();\n        this._accordion.shown.emit(this.id);\n        // need if the accordion is used inside a component having OnPush change detection strategy\n        this._cd.markForCheck();\n      });\n    }\n    /**\n     * Toggles an accordion item.\n     */\n    toggle() {\n      this.collapsed = !this.collapsed;\n    }\n    /**\n     * Expands an accordion item.\n     */\n    expand() {\n      if (this.collapsed) {\n        // checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n        if (!this._accordion._ensureCanExpand(this)) {\n          return;\n        }\n        this._collapsed = false;\n        // need if the accordion is used inside a component having OnPush change detection strategy\n        this._cd.markForCheck();\n        // we need force CD to get template into DOM before starting animation to calculate its height correctly\n        // this will synchronously put the item body into DOM, because `this._collapsed` was flipped to `false`\n        this._cd.detectChanges();\n        // firing events before starting animations\n        this.show.emit();\n        this._accordion.show.emit(this.id);\n        // we also need to make sure 'animation' flag is up-to- date\n        this._collapse.ngbCollapse.animation = this._accordion.animation;\n        this._collapse.ngbCollapse.collapsed = false;\n      }\n    }\n    /**\n     * Collapses an accordion item.\n     */\n    collapse() {\n      if (!this.collapsed) {\n        this._collapsed = true;\n        this._collapseAnimationRunning = true;\n        // need if the accordion is used inside a component having OnPush change detection strategy\n        this._cd.markForCheck();\n        // firing events before starting animations\n        this.hide.emit();\n        this._accordion.hide.emit(this.id);\n        // we also need to make sure 'animation' flag is up-to- date\n        this._collapse.ngbCollapse.animation = this._accordion.animation;\n        this._collapse.ngbCollapse.collapsed = true;\n      }\n    }\n    static #_ = this.ɵfac = function NgbAccordionItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionItem)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionItem,\n      selectors: [[\"\", \"ngbAccordionItem\", \"\"]],\n      contentQueries: function NgbAccordionItem_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbAccordionCollapse, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._collapse = _t.first);\n        }\n      },\n      hostAttrs: [1, \"accordion-item\"],\n      hostVars: 1,\n      hostBindings: function NgbAccordionItem_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: [0, \"ngbAccordionItem\", \"id\"],\n        destroyOnHide: \"destroyOnHide\",\n        disabled: \"disabled\",\n        collapsed: \"collapsed\"\n      },\n      outputs: {\n        show: \"show\",\n        shown: \"shown\",\n        hide: \"hide\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbAccordionItem\"]\n    });\n  }\n  return NgbAccordionItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\nlet NgbAccordionDirective = /*#__PURE__*/(() => {\n  class NgbAccordionDirective {\n    constructor() {\n      this._config = inject(NgbAccordionConfig);\n      this._anItemWasAlreadyExpandedDuringInitialisation = false;\n      /**\n       * If `true`, accordion will be animated.\n       */\n      this.animation = this._config.animation;\n      /**\n       * If `true`, only one item at the time can stay open.\n       */\n      this.closeOthers = this._config.closeOthers;\n      /**\n       * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n       *\n       * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n       */\n      this.destroyOnHide = this._config.destroyOnHide;\n      /**\n       * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n       *\n       * @since 15.1.0\n       */\n      this.show = new EventEmitter();\n      /**\n       * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n       */\n      this.shown = new EventEmitter();\n      /**\n       * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n       *\n       * @since 15.1.0\n       */\n      this.hide = new EventEmitter();\n      /**\n       * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n       * The payload is the id of hidden accordion item.\n       */\n      this.hidden = new EventEmitter();\n    }\n    /**\n     * Toggles an item with the given id.\n     *\n     * It will toggle an item, even if it is disabled.\n     *\n     * @param itemId The id of the item to toggle.\n     */\n    toggle(itemId) {\n      this._getItem(itemId)?.toggle();\n    }\n    /**\n     * Expands an item with the given id.\n     *\n     * If `closeOthers` is `true`, it will collapse other panels.\n     *\n     * @param itemId The id of the item to expand.\n     */\n    expand(itemId) {\n      this._getItem(itemId)?.expand();\n    }\n    /**\n     * Expands all items.\n     *\n     * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n     */\n    expandAll() {\n      if (this._items) {\n        if (this.closeOthers) {\n          // we check if there is an item open and if it is not we can expand the first item\n          // (otherwise we toggle nothing)\n          if (!this._items.find(item => !item.collapsed)) {\n            this._items.first.expand();\n          }\n        } else {\n          this._items.forEach(item => item.expand());\n        }\n      }\n    }\n    /**\n     * Collapses an item with the given id.\n     *\n     * Has no effect if the `itemId` does not correspond to any item.\n     *\n     * @param itemId The id of the item to collapse.\n     */\n    collapse(itemId) {\n      this._getItem(itemId)?.collapse();\n    }\n    /**\n     * Collapses all items.\n     */\n    collapseAll() {\n      this._items?.forEach(item => item.collapse());\n    }\n    /**\n     * Checks if an item with the given id is expanded.\n     *\n     * If the `itemId` does not correspond to any item, it returns `false`.\n     *\n     * @param itemId The id of the item to check.\n     */\n    isExpanded(itemId) {\n      const item = this._getItem(itemId);\n      return item ? !item.collapsed : false;\n    }\n    /**\n     * It checks, if the item can be expanded in the current state of the accordion.\n     * With `closeOthers` there can be only one expanded item at a time.\n     *\n     * @internal\n     */\n    _ensureCanExpand(toExpand) {\n      if (!this.closeOthers) {\n        return true;\n      }\n      // special case during the initialization of the [collapse]=\"false\" inputs\n      // `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n      if (!this._items) {\n        if (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n          this._anItemWasAlreadyExpandedDuringInitialisation = true;\n          return true;\n        }\n        return false;\n      }\n      // if there is an expanded item, we need to collapse it first\n      this._items.find(item => !item.collapsed && toExpand !== item)?.collapse();\n      return true;\n    }\n    _getItem(itemId) {\n      return this._items?.find(item => item.id === itemId);\n    }\n    static #_ = this.ɵfac = function NgbAccordionDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbAccordionDirective,\n      selectors: [[\"\", \"ngbAccordion\", \"\"]],\n      contentQueries: function NgbAccordionDirective_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbAccordionItem, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      hostAttrs: [1, \"accordion\"],\n      inputs: {\n        animation: \"animation\",\n        closeOthers: \"closeOthers\",\n        destroyOnHide: \"destroyOnHide\"\n      },\n      outputs: {\n        show: \"show\",\n        shown: \"shown\",\n        hide: \"hide\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbAccordion\"]\n    });\n  }\n  return NgbAccordionDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordionButton, NgbAccordionDirective, NgbAccordionItem, NgbAccordionHeader, NgbAccordionToggle, NgbAccordionBody, NgbAccordionCollapse];\nlet NgbAccordionModule = /*#__PURE__*/(() => {\n  class NgbAccordionModule {\n    static #_ = this.ɵfac = function NgbAccordionModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAccordionModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbAccordionModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbAccordionModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nlet NgbAlertConfig = /*#__PURE__*/(() => {\n  class NgbAlertConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.dismissible = true;\n      this.type = 'warning';\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbAlertConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAlertConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbAlertConfig,\n      factory: NgbAlertConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbAlertConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ngbAlertFadingTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n};\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nlet NgbAlert = /*#__PURE__*/(() => {\n  class NgbAlert {\n    constructor() {\n      this._config = inject(NgbAlertConfig);\n      this._elementRef = inject(ElementRef);\n      this._zone = inject(NgZone);\n      /**\n       * If `true`, alert closing will be animated.\n       *\n       * Animation is triggered only when clicked on the close button (×)\n       * or via the `.close()` function\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * If `true`, alert can be dismissed by the user.\n       *\n       * The close button (×) will be displayed and you can be notified\n       * of the event with the `(closed)` output.\n       */\n      this.dismissible = this._config.dismissible;\n      /**\n       * Type of the alert.\n       *\n       * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n       * `'secondary'`, `'light'` and `'dark'`.\n       */\n      this.type = this._config.type;\n      /**\n       * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n       *\n       * @since 8.0.0\n       */\n      this.closed = new EventEmitter();\n    }\n    /**\n     * Triggers alert closing programmatically (same as clicking on the close button (×)).\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(closed)` output\n     *\n     * @since 8.0.0\n     */\n    close() {\n      const transition = ngbRunTransition(this._zone, this._elementRef.nativeElement, ngbAlertFadingTransition, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n      transition.subscribe(() => this.closed.emit());\n      return transition;\n    }\n    static #_ = this.ɵfac = function NgbAlert_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAlert)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbAlert,\n      selectors: [[\"ngb-alert\"]],\n      hostAttrs: [\"role\", \"alert\"],\n      hostVars: 6,\n      hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"alert show\" + (ctx.type ? \" alert-\" + ctx.type : \"\"));\n          i0.ɵɵclassProp(\"fade\", ctx.animation)(\"alert-dismissible\", ctx.dismissible);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        dismissible: \"dismissible\",\n        type: \"type\"\n      },\n      outputs: {\n        closed: \"closed\"\n      },\n      exportAs: [\"ngbAlert\"],\n      ngContentSelectors: _c2,\n      decls: 2,\n      vars: 1,\n      consts: () => {\n        let i18n_0;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_0 = goog.getMsg(\"Close\");\n          i18n_0 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_0;\n        } else {\n          i18n_0 = $localize`:@@ngb.alert.close:Close`;\n        }\n        return [[\"type\", \"button\", \"aria-label\", i18n_0, 1, \"btn-close\"], [\"type\", \"button\", \"aria-label\", i18n_0, 1, \"btn-close\", 3, \"click\"]];\n      },\n      template: function NgbAlert_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵconditionalCreate(1, NgbAlert_Conditional_1_Template, 1, 0, \"button\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.dismissible ? 1 : -1);\n        }\n      },\n      styles: [\"ngb-alert{display:block}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbAlert;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbAlertModule = /*#__PURE__*/(() => {\n  class NgbAlertModule {\n    static #_ = this.ɵfac = function NgbAlertModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbAlertModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbAlertModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbAlertModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nlet NgbCarouselConfig = /*#__PURE__*/(() => {\n  class NgbCarouselConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.interval = 5000;\n      this.wrap = true;\n      this.keyboard = true;\n      this.pauseOnHover = true;\n      this.pauseOnFocus = true;\n      this.showNavigationArrows = true;\n      this.showNavigationIndicators = true;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbCarouselConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCarouselConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCarouselConfig,\n      factory: NgbCarouselConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbCarouselConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection = /*#__PURE__*/function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[\"START\"] = \"start\";\n  NgbSlideEventDirection[\"END\"] = \"end\";\n  return NgbSlideEventDirection;\n}(NgbSlideEventDirection || {});\nconst isBeingAnimated = ({\n  classList\n}) => {\n  return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\nconst removeDirectionClasses = classList => {\n  classList.remove('carousel-item-start', 'carousel-item-end');\n};\nconst removeClasses = classList => {\n  removeDirectionClasses(classList);\n  classList.remove('carousel-item-prev', 'carousel-item-next');\n};\nconst ngbCarouselTransitionIn = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n  if (!animation) {\n    removeClasses(classList);\n    classList.add('active');\n    return;\n  }\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n    classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n    reflow(element);\n    classList.add('carousel-item-' + direction);\n  }\n  return () => {\n    removeClasses(classList);\n    classList.add('active');\n  };\n};\nconst ngbCarouselTransitionOut = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n  if (!animation) {\n    removeClasses(classList);\n    classList.remove('active');\n    return;\n  }\n  //  direction is left or right, depending on the way the slide goes out.\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    classList.add('carousel-item-' + direction);\n  }\n  return () => {\n    removeClasses(classList);\n    classList.remove('active');\n  };\n};\nlet nextId$2 = 0;\nlet carouselId = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nlet NgbSlide = /*#__PURE__*/(() => {\n  class NgbSlide {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n      /**\n       * Slide id that must be unique for the entire document.\n       *\n       * If not provided, will be generated in the `ngb-slide-xx` format.\n       */\n      this.id = `ngb-slide-${nextId$2++}`;\n      /**\n       * An event emitted when the slide transition is finished\n       *\n       * @since 8.0.0\n       */\n      this.slid = new EventEmitter();\n    }\n    static #_ = this.ɵfac = function NgbSlide_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbSlide)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbSlide,\n      selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n      inputs: {\n        id: \"id\"\n      },\n      outputs: {\n        slid: \"slid\"\n      }\n    });\n  }\n  return NgbSlide;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nlet NgbCarousel = /*#__PURE__*/(() => {\n  class NgbCarousel {\n    constructor() {\n      this.NgbSlideEventSource = NgbSlideEventSource;\n      this._config = inject(NgbCarouselConfig);\n      this._platformId = inject(PLATFORM_ID);\n      this._ngZone = inject(NgZone);\n      this._cd = inject(ChangeDetectorRef);\n      this._container = inject(ElementRef);\n      this._destroyRef = inject(DestroyRef);\n      this._injector = inject(Injector);\n      this._interval$ = new BehaviorSubject(this._config.interval);\n      this._mouseHover$ = new BehaviorSubject(false);\n      this._focused$ = new BehaviorSubject(false);\n      this._pauseOnHover$ = new BehaviorSubject(this._config.pauseOnHover);\n      this._pauseOnFocus$ = new BehaviorSubject(this._config.pauseOnFocus);\n      this._pause$ = new BehaviorSubject(false);\n      this._wrap$ = new BehaviorSubject(this._config.wrap);\n      this.id = `ngb-carousel-${carouselId++}`;\n      /**\n       * A flag to enable/disable the animations.\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n       */\n      this.keyboard = this._config.keyboard;\n      /**\n       * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n       *\n       * @since 2.2.0\n       */\n      this.showNavigationArrows = this._config.showNavigationArrows;\n      /**\n       * If `true`, navigation indicators at the bottom of the slide will be visible.\n       *\n       * @since 2.2.0\n       */\n      this.showNavigationIndicators = this._config.showNavigationIndicators;\n      /**\n       * An event emitted just before the slide transition starts.\n       *\n       * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n       */\n      this.slide = new EventEmitter();\n      /**\n       * An event emitted right after the slide transition is completed.\n       *\n       * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n       *\n       * @since 8.0.0\n       */\n      this.slid = new EventEmitter();\n      /*\n       * Keep the ids of the panels currently transitionning\n       * in order to allow only the transition revertion\n       */\n      this._transitionIds = null;\n    }\n    /**\n     * Time in milliseconds before the next slide is shown.\n     */\n    set interval(value) {\n      this._interval$.next(value);\n    }\n    get interval() {\n      return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n    set wrap(value) {\n      this._wrap$.next(value);\n    }\n    get wrap() {\n      return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n    set pauseOnHover(value) {\n      this._pauseOnHover$.next(value);\n    }\n    get pauseOnHover() {\n      return this._pauseOnHover$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when the focus is inside the carousel.\n     */\n    set pauseOnFocus(value) {\n      this._pauseOnFocus$.next(value);\n    }\n    get pauseOnFocus() {\n      return this._pauseOnFocus$.value;\n    }\n    set mouseHover(value) {\n      this._mouseHover$.next(value);\n    }\n    get mouseHover() {\n      return this._mouseHover$.value;\n    }\n    set focused(value) {\n      this._focused$.next(value);\n    }\n    get focused() {\n      return this._focused$.value;\n    }\n    arrowLeft() {\n      this.focus();\n      this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n    arrowRight() {\n      this.focus();\n      this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n    ngAfterContentInit() {\n      // setInterval() doesn't play well with SSR and protractor,\n      // so we should run it in the browser and outside Angular\n      if (isPlatformBrowser(this._platformId)) {\n        this._ngZone.runOutsideAngular(() => {\n          const hasNextSlide$ = combineLatest([this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)), this._wrap$, this.slides.changes.pipe(startWith(null))]).pipe(map(([currentSlideId, wrap]) => {\n            const slideArr = this.slides.toArray();\n            const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n            return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n          }), distinctUntilChanged());\n          combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$, hasNextSlide$]).pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || pauseOnHover && mouseHover || pauseOnFocus && focused || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntilDestroyed(this._destroyRef)).subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n        });\n      }\n      this.slides.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n        this._transitionIds?.forEach(id => ngbCompleteTransition(this._getSlideElement(id)));\n        this._transitionIds = null;\n        this._cd.markForCheck();\n        // The following code need to be done asynchronously, after the dom becomes stable,\n        // otherwise all changes will be undone.\n        afterNextRender({\n          mixedReadWrite: () => {\n            for (const {\n              id\n            } of this.slides) {\n              const element = this._getSlideElement(id);\n              if (id === this.activeId) {\n                element.classList.add('active');\n              } else {\n                element.classList.remove('active');\n              }\n            }\n          }\n        }, {\n          injector: this._injector\n        });\n      });\n    }\n    ngAfterContentChecked() {\n      let activeSlide = this._getSlideById(this.activeId);\n      this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n    }\n    ngAfterViewInit() {\n      // Initialize the 'active' class (not managed by the template)\n      if (this.activeId) {\n        const element = this._getSlideElement(this.activeId);\n        if (element) {\n          element.classList.add('active');\n        }\n      }\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    select(slideId, source) {\n      this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n    prev(source) {\n      this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n    next(source) {\n      this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n    pause() {\n      this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from start to end.\n     */\n    cycle() {\n      this._pause$.next(false);\n    }\n    /**\n     * Set the focus on the carousel.\n     */\n    focus() {\n      this._container.nativeElement.focus();\n    }\n    _cycleToSelected(slideIdx, direction, source) {\n      const transitionIds = this._transitionIds;\n      if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n        // Revert prevented\n        return;\n      }\n      let selectedSlide = this._getSlideById(slideIdx);\n      if (selectedSlide && selectedSlide.id !== this.activeId) {\n        this._transitionIds = [this.activeId, slideIdx];\n        this.slide.emit({\n          prev: this.activeId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source\n        });\n        const options = {\n          animation: this.animation,\n          runningTransition: 'stop',\n          context: {\n            direction\n          }\n        };\n        const transitions = [];\n        const activeSlide = this._getSlideById(this.activeId);\n        if (activeSlide) {\n          const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n          activeSlideTransition.subscribe(() => {\n            activeSlide.slid.emit({\n              isShown: false,\n              direction,\n              source\n            });\n          });\n          transitions.push(activeSlideTransition);\n        }\n        const previousId = this.activeId;\n        this.activeId = selectedSlide.id;\n        const nextSlide = this._getSlideById(this.activeId);\n        const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n        transition.subscribe(() => {\n          nextSlide?.slid.emit({\n            isShown: true,\n            direction,\n            source\n          });\n        });\n        transitions.push(transition);\n        zip(...transitions).pipe(take(1)).subscribe(() => {\n          this._transitionIds = null;\n          this.slid.emit({\n            prev: previousId,\n            current: selectedSlide.id,\n            direction: direction,\n            paused: this._pause$.value,\n            source\n          });\n        });\n      }\n      // we get here after the interval fires or any external API call like next(), prev() or select()\n      this._cd.markForCheck();\n    }\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n      const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n      const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n      return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n    }\n    _getSlideById(slideId) {\n      return this.slides.find(slide => slide.id === slideId) || null;\n    }\n    _getSlideIdxById(slideId) {\n      const slide = this._getSlideById(slideId);\n      return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n    _getNextSlide(currentSlideId) {\n      const slideArr = this.slides.toArray();\n      const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n      const isLastSlide = currentSlideIdx === slideArr.length - 1;\n      return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n    }\n    _getPrevSlide(currentSlideId) {\n      const slideArr = this.slides.toArray();\n      const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n      const isFirstSlide = currentSlideIdx === 0;\n      return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n    }\n    _getSlideElement(slideId) {\n      return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n    }\n    static #_ = this.ɵfac = function NgbCarousel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCarousel)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbCarousel,\n      selectors: [[\"ngb-carousel\"]],\n      contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbSlide, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slides = _t);\n        }\n      },\n      hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n      hostVars: 2,\n      hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n            return ctx.keyboard && ctx.arrowLeft();\n          })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n            return ctx.keyboard && ctx.arrowRight();\n          })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n            return ctx.mouseHover = true;\n          })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n            return ctx.mouseHover = false;\n          })(\"focusin\", function NgbCarousel_focusin_HostBindingHandler() {\n            return ctx.focused = true;\n          })(\"focusout\", function NgbCarousel_focusout_HostBindingHandler() {\n            return ctx.focused = false;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"display\", \"block\");\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        activeId: \"activeId\",\n        interval: \"interval\",\n        wrap: \"wrap\",\n        keyboard: \"keyboard\",\n        pauseOnHover: \"pauseOnHover\",\n        pauseOnFocus: \"pauseOnFocus\",\n        showNavigationArrows: \"showNavigationArrows\",\n        showNavigationIndicators: \"showNavigationIndicators\"\n      },\n      outputs: {\n        slide: \"slide\",\n        slid: \"slid\"\n      },\n      exportAs: [\"ngbCarousel\"],\n      decls: 7,\n      vars: 3,\n      consts: () => {\n        let i18n_1;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @desc Currently selected slide number read by screen reader\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_1 = goog.getMsg(\" Slide {$interpolation} of {$interpolation_1} \", {\n            \"interpolation\": \"\\uFFFD0\\uFFFD\",\n            \"interpolation_1\": \"\\uFFFD1\\uFFFD\"\n          }, {\n            original_code: {\n              \"interpolation\": \"{{ i + 1 }}\",\n              \"interpolation_1\": \"{{ c }}\"\n            }\n          });\n          i18n_1 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_1;\n        } else {\n          i18n_1 = $localize`:Currently selected slide number read by screen reader@@ngb.carousel.slide-number: Slide ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: of ${\"\\uFFFD1\\uFFFD\"}:INTERPOLATION_1: `;\n        }\n        let i18n_2;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_2 = goog.getMsg(\"Previous\");\n          i18n_2 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_2;\n        } else {\n          i18n_2 = $localize`:@@ngb.carousel.previous:Previous`;\n        }\n        let i18n_3;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_3 = goog.getMsg(\"Next\");\n          i18n_3 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_3;\n        } else {\n          i18n_3 = $localize`:@@ngb.carousel.next:Next`;\n        }\n        return [i18n_1, i18n_2, i18n_3, [\"role\", \"tablist\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"active\"], [1, \"carousel-inner\"], [\"role\", \"tabpanel\", 1, \"carousel-item\", 3, \"id\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"click\"], [1, \"visually-hidden\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"visually-hidden\", 3, \"id\"], [\"type\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"]];\n      },\n      template: function NgbCarousel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 3);\n          i0.ɵɵrepeaterCreate(1, NgbCarousel_For_2_Template, 1, 5, \"button\", 4, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 5);\n          i0.ɵɵrepeaterCreate(4, NgbCarousel_For_5_Template, 4, 4, \"div\", 6, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(6, NgbCarousel_Conditional_6_Template, 8, 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"visually-hidden\", !ctx.showNavigationIndicators);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx.slides);\n          i0.ɵɵadvance(3);\n          i0.ɵɵrepeater(ctx.slides);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.showNavigationArrows ? 6 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbCarousel;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NgbSlideEventSource = /*#__PURE__*/function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n  return NgbSlideEventSource;\n}(NgbSlideEventSource || {});\nlet NgbCarouselModule = /*#__PURE__*/(() => {\n  class NgbCarouselModule {\n    static #_ = this.ɵfac = function NgbCarouselModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCarouselModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbCarouselModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbCarouselModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbCollapseModule = /*#__PURE__*/(() => {\n  class NgbCollapseModule {\n    static #_ = this.ɵfac = function NgbCollapseModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCollapseModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbCollapseModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbCollapseModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date) {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n  constructor(year, month, day) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other) {\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other) {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other) {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nlet NgbCalendar = /*#__PURE__*/(() => {\n  class NgbCalendar {\n    static #_ = this.ɵfac = function NgbCalendar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbCalendar)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendar,\n      factory: () => NGB_DATEPICKER_CALENDAR_FACTORY(),\n      providedIn: 'root'\n    });\n  }\n  return NgbCalendar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbCalendarGregorian = /*#__PURE__*/(() => {\n  class NgbCalendarGregorian extends NgbCalendar {\n    getDaysPerWeek() {\n      return 7;\n    }\n    getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n      return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n      let jsDate = toJSDate(date);\n      let checkMonth = true;\n      let expectedMonth = jsDate.getMonth();\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n          break;\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n        default:\n          return date;\n      }\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n      return fromJSDate(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      let jsDate = toJSDate(date);\n      let day = jsDate.getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      let date = week[thursdayIndex];\n      const jsDate = toJSDate(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      const time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n      return fromJSDate(new Date());\n    }\n    isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      }\n      // year 0 doesn't exist in Gregorian calendar\n      if (date.year === 0) {\n        return false;\n      }\n      const jsDate = toJSDate(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarGregorian_BaseFactory;\n      return function NgbCalendarGregorian_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarGregorian_BaseFactory || (ɵNgbCalendarGregorian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarGregorian)))(__ngFactoryType__ || NgbCalendarGregorian);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarGregorian,\n      factory: NgbCalendarGregorian.ɵfac\n    });\n  }\n  return NgbCalendarGregorian;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n  return date || null;\n}\nfunction isDateSelectable(date, state) {\n  const {\n    minDate,\n    maxDate,\n    disabled,\n    markDisabled\n  } = state;\n  return !(date === null || date === undefined || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate));\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n  let months = calendar.getMonths(date.year);\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n  return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n  return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n  const {\n    displayMonths,\n    months\n  } = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({\n    length: displayMonths\n  }, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n    return firstDate;\n  });\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n  const {\n    dayTemplateData,\n    minDate,\n    maxDate,\n    firstDayOfWeek,\n    markDisabled,\n    outsideDays,\n    weekdayWidth,\n    weekdaysVisible\n  } = state;\n  const calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n  // clearing weekdays, if not visible\n  if (!weekdaysVisible) {\n    month.weekdays.length = 0;\n  }\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n    const days = weekObject.days;\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0 && weekdaysVisible) {\n        month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n      }\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n      // marking date as disabled\n      let disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      }\n      // today\n      let today = newDate.equals(calendarToday);\n      // adding user-provided data to the context\n      let contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined;\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled,\n        focused: false,\n        selected: false,\n        today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n  return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nlet NgbDatepickerI18n = /*#__PURE__*/(() => {\n  class NgbDatepickerI18n {\n    /**\n     * Returns the text label to display above the day view.\n     *\n     * @since 9.1.0\n     */\n    getMonthLabel(date) {\n      return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date) {\n      return `${date.day}`;\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber) {\n      return `${weekNumber}`;\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year) {\n      return `${year}`;\n    }\n    /**\n     * Returns the week label to display in the heading of the month view.\n     *\n     * @since 9.1.0\n     */\n    getWeekLabel() {\n      return '';\n    }\n    static #_ = this.ɵfac = function NgbDatepickerI18n_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerI18n)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerI18n,\n      factory: () => (() => new NgbDatepickerI18nDefault())(),\n      providedIn: 'root'\n    });\n  }\n  return NgbDatepickerI18n;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\nlet NgbDatepickerI18nDefault = /*#__PURE__*/(() => {\n  class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    constructor() {\n      super(...arguments);\n      this._locale = inject(LOCALE_ID);\n      this._monthsShort = [...Array(12).keys()].map(month => Intl.DateTimeFormat(this._locale, {\n        month: 'short',\n        timeZone: 'UTC'\n      }).format(Date.UTC(2000, month)));\n      this._monthsFull = [...Array(12).keys()].map(month => Intl.DateTimeFormat(this._locale, {\n        month: 'long',\n        timeZone: 'UTC'\n      }).format(Date.UTC(2000, month)));\n    }\n    getWeekdayLabel(weekday, width = 'narrow') {\n      // 1 MAY 2000 is a Monday\n      const weekdays = [1, 2, 3, 4, 5, 6, 7].map(day => Intl.DateTimeFormat(this._locale, {\n        weekday: width,\n        timeZone: 'UTC'\n      }).format(Date.UTC(2000, 4, day)));\n      // `weekday` is 1 (Mon) to 7 (Sun)\n      return weekdays[weekday - 1] || '';\n    }\n    getMonthShortName(month) {\n      return this._monthsShort[month - 1] || '';\n    }\n    getMonthFullName(month) {\n      return this._monthsFull[month - 1] || '';\n    }\n    getDayAriaLabel(date) {\n      const jsDate = new Date(date.year, date.month - 1, date.day);\n      return formatDate(jsDate, 'fullDate', this._locale);\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDatepickerI18nDefault_BaseFactory;\n      return function NgbDatepickerI18nDefault_Factory(__ngFactoryType__) {\n        return (ɵNgbDatepickerI18nDefault_BaseFactory || (ɵNgbDatepickerI18nDefault_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDatepickerI18nDefault)))(__ngFactoryType__ || NgbDatepickerI18nDefault);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerI18nDefault,\n      factory: NgbDatepickerI18nDefault.ɵfac\n    });\n  }\n  return NgbDatepickerI18nDefault;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDatepickerService = /*#__PURE__*/(() => {\n  class NgbDatepickerService {\n    constructor() {\n      this._VALIDATORS = {\n        dayTemplateData: dayTemplateData => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {\n              dayTemplateData\n            };\n          }\n        },\n        displayMonths: displayMonths => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {\n              displayMonths\n            };\n          }\n        },\n        disabled: disabled => {\n          if (this._state.disabled !== disabled) {\n            return {\n              disabled\n            };\n          }\n        },\n        firstDayOfWeek: firstDayOfWeek => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {\n              firstDayOfWeek\n            };\n          }\n        },\n        focusVisible: focusVisible => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {\n              focusVisible\n            };\n          }\n        },\n        markDisabled: markDisabled => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {\n              markDisabled\n            };\n          }\n        },\n        maxDate: date => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {\n              maxDate\n            };\n          }\n        },\n        minDate: date => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {\n              minDate\n            };\n          }\n        },\n        navigation: navigation => {\n          if (this._state.navigation !== navigation) {\n            return {\n              navigation\n            };\n          }\n        },\n        outsideDays: outsideDays => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {\n              outsideDays\n            };\n          }\n        },\n        weekdays: weekdays => {\n          const weekdayWidth = weekdays === true || weekdays === false ? 'narrow' : weekdays;\n          const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n          if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n            return {\n              weekdayWidth,\n              weekdaysVisible\n            };\n          }\n        }\n      };\n      this._calendar = inject(NgbCalendar);\n      this._i18n = inject(NgbDatepickerI18n);\n      this._model$ = new Subject();\n      this._dateSelect$ = new Subject();\n      this._state = {\n        dayTemplateData: null,\n        markDisabled: null,\n        maxDate: null,\n        minDate: null,\n        disabled: false,\n        displayMonths: 1,\n        firstDate: null,\n        firstDayOfWeek: 1,\n        lastDate: null,\n        focusDate: null,\n        focusVisible: false,\n        months: [],\n        navigation: 'select',\n        outsideDays: 'visible',\n        prevDisabled: false,\n        nextDisabled: false,\n        selectedDate: null,\n        selectBoxes: {\n          years: [],\n          months: []\n        },\n        weekdayWidth: 'narrow',\n        weekdaysVisible: true\n      };\n    }\n    get model$() {\n      return this._model$.pipe(filter(model => model.months.length > 0));\n    }\n    get dateSelect$() {\n      return this._dateSelect$.pipe(filter(date => date !== null));\n    }\n    set(options) {\n      let patch = Object.keys(options).map(key => this._VALIDATORS[key](options[key])).reduce((obj, part) => ({\n        ...obj,\n        ...part\n      }), {});\n      if (Object.keys(patch).length > 0) {\n        this._nextState(patch);\n      }\n    }\n    focus(date) {\n      const focusedDate = this.toValidDate(date, null);\n      if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n        this._nextState({\n          focusDate: date\n        });\n      }\n    }\n    focusSelect() {\n      if (isDateSelectable(this._state.focusDate, this._state)) {\n        this.select(this._state.focusDate, {\n          emitEvent: true\n        });\n      }\n    }\n    open(date) {\n      const firstDate = this.toValidDate(date, this._calendar.getToday());\n      if (firstDate != null && !this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n        this._nextState({\n          firstDate\n        });\n      }\n    }\n    select(date, options = {}) {\n      const selectedDate = this.toValidDate(date, null);\n      if (selectedDate != null && !this._state.disabled) {\n        if (isChangedDate(this._state.selectedDate, selectedDate)) {\n          this._nextState({\n            selectedDate\n          });\n        }\n        if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n          this._dateSelect$.next(selectedDate);\n        }\n      }\n    }\n    toValidDate(date, defaultValue) {\n      const ngbDate = NgbDate.from(date);\n      if (defaultValue === undefined) {\n        defaultValue = this._calendar.getToday();\n      }\n      return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    getMonth(struct) {\n      for (let month of this._state.months) {\n        if (struct.month === month.number && struct.year === month.year) {\n          return month;\n        }\n      }\n      throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n    }\n    _nextState(patch) {\n      const newState = this._updateState(patch);\n      this._patchContexts(newState);\n      this._state = newState;\n      this._model$.next(this._state);\n    }\n    _patchContexts(state) {\n      const {\n        months,\n        displayMonths,\n        selectedDate,\n        focusDate,\n        focusVisible,\n        disabled,\n        outsideDays\n      } = state;\n      state.months.forEach(month => {\n        month.weeks.forEach(week => {\n          week.days.forEach(day => {\n            // patch focus flag\n            if (focusDate) {\n              day.context.focused = focusDate.equals(day.date) && focusVisible;\n            }\n            // calculating tabindex\n            day.tabindex = !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n            // override context disabled\n            if (disabled === true) {\n              day.context.disabled = true;\n            }\n            // patch selection flag\n            if (selectedDate !== undefined) {\n              day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n            }\n            // visibility\n            if (month.number !== day.date.month) {\n              day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n            }\n          });\n        });\n      });\n    }\n    _updateState(patch) {\n      // patching fields\n      const state = Object.assign({}, this._state, patch);\n      let startDate = state.firstDate;\n      // min/max dates changed\n      if ('minDate' in patch || 'maxDate' in patch) {\n        checkMinBeforeMax(state.minDate, state.maxDate);\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n      }\n      // disabled\n      if ('disabled' in patch) {\n        state.focusVisible = false;\n      }\n      // initial rebuild via 'select()'\n      if ('selectedDate' in patch && this._state.months.length === 0) {\n        startDate = state.selectedDate;\n      }\n      // terminate early if only focus visibility was changed\n      if ('focusVisible' in patch) {\n        return state;\n      }\n      // focus date changed\n      if ('focusDate' in patch) {\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n        // nothing to rebuild if only focus changed and it is still visible\n        if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n          return state;\n        }\n      }\n      // first date changed\n      if ('firstDate' in patch) {\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.firstDate;\n      }\n      // rebuilding months\n      if (startDate) {\n        const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch || 'weekdaysVisible' in patch;\n        const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n        // updating months and boundary dates\n        state.months = months;\n        state.firstDate = months[0].firstDate;\n        state.lastDate = months[months.length - 1].lastDate;\n        // reset selected date if 'markDisabled' returns true\n        if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n          state.selectedDate = null;\n        }\n        // adjusting focus after months were built\n        if ('firstDate' in patch) {\n          if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n            state.focusDate = startDate;\n          }\n        }\n        // adjusting months/years for the select box navigation\n        const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n        const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n        if (state.navigation === 'select') {\n          // years ->  boundaries (min/max were changed)\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n            state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n          }\n          // months -> when current year or boundaries change\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n            state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n          }\n        } else {\n          state.selectBoxes = {\n            years: [],\n            months: []\n          };\n        }\n        // updating navigation arrows -> boundaries change (min/max) or month/year changes\n        if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n          state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n          state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n        }\n      }\n      return state;\n    }\n    static #_ = this.ɵfac = function NgbDatepickerService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerService,\n      factory: NgbDatepickerService.ɵfac\n    });\n  }\n  return NgbDatepickerService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NavigationEvent = /*#__PURE__*/function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n  return NavigationEvent;\n}(NavigationEvent || {});\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nlet NgbDatepickerConfig = /*#__PURE__*/(() => {\n  class NgbDatepickerConfig {\n    constructor() {\n      this.displayMonths = 1;\n      this.firstDayOfWeek = 1;\n      this.navigation = 'select';\n      this.outsideDays = 'visible';\n      this.showWeekNumbers = false;\n      this.weekdays = 'narrow';\n    }\n    static #_ = this.ɵfac = function NgbDatepickerConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerConfig,\n      factory: NgbDatepickerConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbDatepickerConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nlet NgbDateAdapter = /*#__PURE__*/(() => {\n  class NgbDateAdapter {\n    static #_ = this.ɵfac = function NgbDateAdapter_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDateAdapter)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateAdapter,\n      factory: () => NGB_DATEPICKER_DATE_ADAPTER_FACTORY(),\n      providedIn: 'root'\n    });\n  }\n  return NgbDateAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDateStructAdapter = /*#__PURE__*/(() => {\n  class NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    fromModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDateStructAdapter_BaseFactory;\n      return function NgbDateStructAdapter_Factory(__ngFactoryType__) {\n        return (ɵNgbDateStructAdapter_BaseFactory || (ɵNgbDateStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateStructAdapter)))(__ngFactoryType__ || NgbDateStructAdapter);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateStructAdapter,\n      factory: NgbDateStructAdapter.ɵfac\n    });\n  }\n  return NgbDateStructAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nlet NgbDatepickerKeyboardService = /*#__PURE__*/(() => {\n  class NgbDatepickerKeyboardService {\n    /**\n     * Processes a keyboard event.\n     */\n    processKey(event, datepicker) {\n      const {\n        state,\n        calendar\n      } = datepicker;\n      switch (event.key) {\n        case 'PageUp':\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n        case 'PageDown':\n          datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n        case 'End':\n          datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n          break;\n        case 'Home':\n          datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n          break;\n        case 'ArrowLeft':\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n          break;\n        case 'ArrowUp':\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n        case 'ArrowRight':\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n          break;\n        case 'ArrowDown':\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n        case 'Enter':\n        case ' ':\n          datepicker.focusSelect();\n          break;\n        default:\n          return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    static #_ = this.ɵfac = function NgbDatepickerKeyboardService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerKeyboardService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerKeyboardService,\n      factory: NgbDatepickerKeyboardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbDatepickerKeyboardService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDatepickerDayView = /*#__PURE__*/(() => {\n  class NgbDatepickerDayView {\n    constructor() {\n      this.i18n = inject(NgbDatepickerI18n);\n    }\n    isMuted() {\n      return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n    static #_ = this.ɵfac = function NgbDatepickerDayView_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerDayView)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbDatepickerDayView,\n      selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n      hostAttrs: [1, \"btn-light\"],\n      hostVars: 10,\n      hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n        }\n      },\n      inputs: {\n        currentMonth: \"currentMonth\",\n        date: \"date\",\n        disabled: \"disabled\",\n        focused: \"focused\",\n        selected: \"selected\"\n      },\n      attrs: _c3,\n      decls: 1,\n      vars: 1,\n      template: function NgbDatepickerDayView_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtext(0);\n        }\n        if (rf & 2) {\n          i0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n        }\n      },\n      styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-tertiary-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbDatepickerDayView;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDatepickerNavigationSelect = /*#__PURE__*/(() => {\n  class NgbDatepickerNavigationSelect {\n    constructor() {\n      this._month = -1;\n      this._year = -1;\n      this.i18n = inject(NgbDatepickerI18n);\n      this.select = new EventEmitter();\n    }\n    changeMonth(month) {\n      this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n    changeYear(year) {\n      this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n    ngAfterViewChecked() {\n      if (this.date) {\n        if (this.date.month !== this._month) {\n          this._month = this.date.month;\n          this.monthSelect.nativeElement.value = `${this._month}`;\n        }\n        if (this.date.year !== this._year) {\n          this._year = this.date.year;\n          this.yearSelect.nativeElement.value = `${this._year}`;\n        }\n      }\n    }\n    static #_ = this.ɵfac = function NgbDatepickerNavigationSelect_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerNavigationSelect)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbDatepickerNavigationSelect,\n      selectors: [[\"ngb-datepicker-navigation-select\"]],\n      viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c4, 7, ElementRef);\n          i0.ɵɵviewQuery(_c5, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n        }\n      },\n      inputs: {\n        date: \"date\",\n        disabled: \"disabled\",\n        months: \"months\",\n        years: \"years\"\n      },\n      outputs: {\n        select: \"select\"\n      },\n      decls: 8,\n      vars: 2,\n      consts: () => {\n        let i18n_4;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_4 = goog.getMsg(\"Select month\");\n          i18n_4 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_4;\n        } else {\n          i18n_4 = $localize`:@@ngb.datepicker.select-month:Select month`;\n        }\n        let i18n_5;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_5 = goog.getMsg(\"Select month\");\n          i18n_5 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_5;\n        } else {\n          i18n_5 = $localize`:@@ngb.datepicker.select-month:Select month`;\n        }\n        let i18n_6;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_6 = goog.getMsg(\"Select year\");\n          i18n_6 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_6;\n        } else {\n          i18n_6 = $localize`:@@ngb.datepicker.select-year:Select year`;\n        }\n        let i18n_7;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_7 = goog.getMsg(\"Select year\");\n          i18n_7 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_7;\n        } else {\n          i18n_7 = $localize`:@@ngb.datepicker.select-year:Select year`;\n        }\n        return [[\"month\", \"\"], [\"year\", \"\"], [\"aria-label\", i18n_4, \"title\", i18n_5, 1, \"form-select\", 3, \"change\", \"disabled\"], [3, \"value\"], [\"aria-label\", i18n_6, \"title\", i18n_7, 1, \"form-select\", 3, \"change\", \"disabled\"]];\n      },\n      template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"select\", 2, 0);\n          i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.changeMonth($event.target.value));\n          });\n          i0.ɵɵrepeaterCreate(2, NgbDatepickerNavigationSelect_For_3_Template, 2, 3, \"option\", 3, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"select\", 4, 1);\n          i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.changeYear($event.target.value));\n          });\n          i0.ɵɵrepeaterCreate(6, NgbDatepickerNavigationSelect_For_7_Template, 2, 2, \"option\", 3, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.months);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.years);\n        }\n      },\n      styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbDatepickerNavigationSelect;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDatepickerNavigation = /*#__PURE__*/(() => {\n  class NgbDatepickerNavigation {\n    constructor() {\n      this.navigation = NavigationEvent;\n      this.i18n = inject(NgbDatepickerI18n);\n      this.months = [];\n      this.navigate = new EventEmitter();\n      this.select = new EventEmitter();\n    }\n    onClickPrev(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.PREV);\n    }\n    onClickNext(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.NEXT);\n    }\n    idMonth(month) {\n      return month;\n    }\n    static #_ = this.ɵfac = function NgbDatepickerNavigation_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerNavigation)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbDatepickerNavigation,\n      selectors: [[\"ngb-datepicker-navigation\"]],\n      inputs: {\n        date: \"date\",\n        disabled: \"disabled\",\n        months: \"months\",\n        showSelect: \"showSelect\",\n        prevDisabled: \"prevDisabled\",\n        nextDisabled: \"nextDisabled\",\n        selectBoxes: \"selectBoxes\"\n      },\n      outputs: {\n        navigate: \"navigate\",\n        select: \"select\"\n      },\n      decls: 11,\n      vars: 4,\n      consts: () => {\n        let i18n_8;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_8 = goog.getMsg(\"Previous month\");\n          i18n_8 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_8;\n        } else {\n          i18n_8 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n        }\n        let i18n_9;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_9 = goog.getMsg(\"Previous month\");\n          i18n_9 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_9;\n        } else {\n          i18n_9 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n        }\n        let i18n_10;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_10 = goog.getMsg(\"Next month\");\n          i18n_10 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_10;\n        } else {\n          i18n_10 = $localize`:@@ngb.datepicker.next-month:Next month`;\n        }\n        let i18n_11;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_11 = goog.getMsg(\"Next month\");\n          i18n_11 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_11;\n        } else {\n          i18n_11 = $localize`:@@ngb.datepicker.next-month:Next month`;\n        }\n        return [[1, \"ngb-dp-arrow\", \"ngb-dp-arrow-prev\"], [\"type\", \"button\", \"aria-label\", i18n_8, \"title\", i18n_9, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"click\", \"disabled\"], [1, \"ngb-dp-navigation-chevron\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\"], [\"aria-live\", \"polite\", 1, \"visually-hidden\"], [1, \"ngb-dp-arrow\", \"ngb-dp-arrow-next\"], [\"type\", \"button\", \"aria-label\", i18n_10, \"title\", i18n_11, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"click\", \"disabled\"], [1, \"ngb-dp-navigation-select\", 3, \"select\", \"date\", \"disabled\", \"months\", \"years\"], [1, \"ngb-dp-arrow\"], [1, \"ngb-dp-month-name\"]];\n      },\n      template: function NgbDatepickerNavigation_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n            return ctx.onClickPrev($event);\n          });\n          i0.ɵɵelement(2, \"span\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵconditionalCreate(3, NgbDatepickerNavigation_Conditional_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n          i0.ɵɵconditionalCreate(4, NgbDatepickerNavigation_Conditional_4_Template, 2, 0);\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵrepeaterCreate(6, NgbDatepickerNavigation_For_7_Template, 2, 1, \"span\", null, _forTrack0, true);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_9_listener($event) {\n            return ctx.onClickNext($event);\n          });\n          i0.ɵɵelement(10, \"span\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.showSelect ? 3 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(!ctx.showSelect ? 4 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.months);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n        }\n      },\n      dependencies: [NgbDatepickerNavigationSelect],\n      styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbDatepickerNavigation;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nlet NgbDatepickerContent = /*#__PURE__*/(() => {\n  class NgbDatepickerContent {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbDatepickerContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerContent)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDatepickerContent,\n      selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n    });\n  }\n  return NgbDatepickerContent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nlet NgbDatepickerMonth = /*#__PURE__*/(() => {\n  class NgbDatepickerMonth {\n    constructor() {\n      this._keyboardService = inject(NgbDatepickerKeyboardService);\n      this._service = inject(NgbDatepickerService);\n      this.i18n = inject(NgbDatepickerI18n);\n      this.datepicker = inject(NgbDatepicker);\n    }\n    /**\n     * The first date of month to be rendered.\n     *\n     * This month must one of the months present in the\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n     */\n    set month(month) {\n      this.viewModel = this._service.getMonth(month);\n    }\n    onKeyDown(event) {\n      this._keyboardService.processKey(event, this.datepicker);\n    }\n    doSelect(day) {\n      if (!day.context.disabled && !day.hidden) {\n        this.datepicker.onDateSelect(day.date);\n      }\n    }\n    static #_ = this.ɵfac = function NgbDatepickerMonth_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerMonth)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbDatepickerMonth,\n      selectors: [[\"ngb-datepicker-month\"]],\n      hostAttrs: [\"role\", \"grid\"],\n      hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          });\n        }\n      },\n      inputs: {\n        month: \"month\"\n      },\n      decls: 3,\n      vars: 1,\n      consts: [[\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\", \"small\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"click\", \"tabindex\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgbDatepickerMonth_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵconditionalCreate(0, NgbDatepickerMonth_Conditional_0_Template, 4, 1, \"div\", 0);\n          i0.ɵɵrepeaterCreate(1, NgbDatepickerMonth_For_2_Template, 1, 1, null, null, i0.ɵɵrepeaterTrackByIdentity);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.viewModel.weekdays.length > 0 ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx.viewModel.weeks);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-tertiary-bg)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return NgbDatepickerMonth;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nlet NgbDatepicker = /*#__PURE__*/(() => {\n  class NgbDatepicker {\n    constructor() {\n      this.injector = inject(Injector);\n      this._service = inject(NgbDatepickerService);\n      this._calendar = inject(NgbCalendar);\n      this._i18n = inject(NgbDatepickerI18n);\n      this._config = inject(NgbDatepickerConfig);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._ngbDateAdapter = inject(NgbDateAdapter);\n      this._ngZone = inject(NgZone);\n      this._destroyRef = inject(DestroyRef);\n      this._injector = inject(Injector);\n      this._controlValue = null;\n      this._publicState = {};\n      this._initialized = false;\n      /**\n       * The reference to a custom template for the day.\n       *\n       * Allows to completely override the way a day 'cell' in the calendar is displayed.\n       *\n       * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n       */\n      this.dayTemplate = this._config.dayTemplate;\n      /**\n       * The callback to pass any arbitrary data to the template cell via the\n       * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n       *\n       * `current` is the month that is currently displayed by the datepicker.\n       *\n       * @since 3.3.0\n       */\n      this.dayTemplateData = this._config.dayTemplateData;\n      /**\n       * The number of months to display.\n       */\n      this.displayMonths = this._config.displayMonths;\n      /**\n       * The first day of the week.\n       *\n       * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n       */\n      this.firstDayOfWeek = this._config.firstDayOfWeek;\n      /**\n       * The reference to the custom template for the datepicker footer.\n       *\n       * @since 3.3.0\n       */\n      this.footerTemplate = this._config.footerTemplate;\n      /**\n       * The callback to mark some dates as disabled.\n       *\n       * It is called for each new date when navigating to a different month.\n       *\n       * `current` is the month that is currently displayed by the datepicker.\n       */\n      this.markDisabled = this._config.markDisabled;\n      /**\n       * The latest date that can be displayed or selected.\n       *\n       * If not provided, 'year' select box will display 10 years after the current month.\n       */\n      this.maxDate = this._config.maxDate;\n      /**\n       * The earliest date that can be displayed or selected.\n       *\n       * If not provided, 'year' select box will display 10 years before the current month.\n       */\n      this.minDate = this._config.minDate;\n      /**\n       * Navigation type.\n       *\n       * * `\"select\"` - select boxes for month and navigation arrows\n       * * `\"arrows\"` - only navigation arrows\n       * * `\"none\"` - no navigation visible at all\n       */\n      this.navigation = this._config.navigation;\n      /**\n       * The way of displaying days that don't belong to the current month.\n       *\n       * * `\"visible\"` - days are visible\n       * * `\"hidden\"` - days are hidden, white space preserved\n       * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n       *\n       * For the 2+ months view, days in between months are never shown.\n       */\n      this.outsideDays = this._config.outsideDays;\n      /**\n       * If `true`, week numbers will be displayed.\n       */\n      this.showWeekNumbers = this._config.showWeekNumbers;\n      /**\n       * The date to open calendar with.\n       *\n       * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date is provided, calendar will open with current month.\n       *\n       * You could use `navigateTo(date)` method as an alternative.\n       */\n      this.startDate = this._config.startDate;\n      /**\n       * The way weekdays should be displayed.\n       *\n       * * `true` - weekdays are displayed using default width\n       * * `false` - weekdays are not displayed\n       * * `\"short\" | \"long\" | \"narrow\"` - weekdays are displayed using specified width\n       *\n       * @since 9.1.0\n       */\n      this.weekdays = this._config.weekdays;\n      /**\n       * An event emitted right before the navigation happens and displayed month changes.\n       *\n       * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n       */\n      this.navigate = new EventEmitter();\n      /**\n       * An event emitted when user selects a date using keyboard or mouse.\n       *\n       * The payload of the event is currently selected `NgbDate`.\n       *\n       * @since 5.2.0\n       */\n      this.dateSelect = new EventEmitter();\n      this.onChange = _ => {};\n      this.onTouched = () => {};\n      const cd = inject(ChangeDetectorRef);\n      this._service.dateSelect$.pipe(takeUntilDestroyed()).subscribe(date => {\n        this.dateSelect.emit(date);\n      });\n      this._service.model$.pipe(takeUntilDestroyed()).subscribe(model => {\n        const newDate = model.firstDate;\n        const oldDate = this.model ? this.model.firstDate : null;\n        // update public state\n        this._publicState = {\n          maxDate: model.maxDate,\n          minDate: model.minDate,\n          firstDate: model.firstDate,\n          lastDate: model.lastDate,\n          focusedDate: model.focusDate,\n          months: model.months.map(viewModel => viewModel.firstDate)\n        };\n        let navigationPrevented = false;\n        // emitting navigation event if the first month changes\n        if (!newDate.equals(oldDate)) {\n          this.navigate.emit({\n            current: oldDate ? {\n              year: oldDate.year,\n              month: oldDate.month\n            } : null,\n            next: {\n              year: newDate.year,\n              month: newDate.month\n            },\n            preventDefault: () => navigationPrevented = true\n          });\n          // can't prevent the very first navigation\n          if (navigationPrevented && oldDate !== null) {\n            this._service.open(oldDate);\n            return;\n          }\n        }\n        const newSelectedDate = model.selectedDate;\n        const newFocusedDate = model.focusDate;\n        const oldFocusedDate = this.model ? this.model.focusDate : null;\n        this.model = model;\n        // handling selection change\n        if (isChangedDate(newSelectedDate, this._controlValue)) {\n          this._controlValue = newSelectedDate;\n          this.onTouched();\n          this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n        }\n        // handling focus change\n        if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n          this.focus();\n        }\n        cd.markForCheck();\n      });\n    }\n    /**\n     *  Returns the readonly public state of the datepicker\n     *\n     * @since 5.2.0\n     */\n    get state() {\n      return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n    get calendar() {\n      return this._calendar;\n    }\n    /**\n     * Returns the i18n service used in the specific datepicker instance.\n     *\n     * @since 14.2.0\n     */\n    get i18n() {\n      return this._i18n;\n    }\n    /**\n     *  Focuses on given date.\n     */\n    focusDate(date) {\n      this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n    focusSelect() {\n      this._service.focusSelect();\n    }\n    focus() {\n      afterNextRender({\n        read: () => {\n          this._nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]')?.focus();\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n      this._service.open(NgbDate.from(date ? date.day ? date : {\n        ...date,\n        day: 1\n      } : null));\n    }\n    ngAfterViewInit() {\n      this._ngZone.runOutsideAngular(() => {\n        const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n        const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n        // we're changing 'focusVisible' only when entering or leaving months view\n        // and ignoring all focus events where both 'target' and 'related' target are day cells\n        merge(focusIns$, focusOuts$).pipe(filter(focusEvent => {\n          const target = focusEvent.target;\n          const relatedTarget = focusEvent.relatedTarget;\n          return !(target?.classList.contains('ngb-dp-day') && relatedTarget?.classList.contains('ngb-dp-day') && this._nativeElement.contains(target) && this._nativeElement.contains(relatedTarget));\n        }), takeUntilDestroyed(this._destroyRef)).subscribe(({\n          type\n        }) => this._ngZone.run(() => this._service.set({\n          focusVisible: type === 'focusin'\n        })));\n      });\n    }\n    ngOnInit() {\n      if (this.model === undefined) {\n        const inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].forEach(name => inputs[name] = this[name]);\n        this._service.set(inputs);\n        this.navigateTo(this.startDate);\n      }\n      if (!this.dayTemplate) {\n        this.dayTemplate = this._defaultDayTemplate;\n      }\n      this._initialized = true;\n    }\n    ngOnChanges(changes) {\n      const inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].filter(name => name in changes).forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n      if ('startDate' in changes && this._initialized) {\n        const {\n          currentValue,\n          previousValue\n        } = changes.startDate;\n        if (isChangedMonth(previousValue, currentValue)) {\n          this.navigateTo(this.startDate);\n        }\n      }\n    }\n    onDateSelect(date) {\n      this._service.focus(date);\n      this._service.select(date, {\n        emitEvent: true\n      });\n    }\n    onNavigateDateSelect(date) {\n      this._service.open(date);\n    }\n    onNavigateEvent(event) {\n      switch (event) {\n        case NavigationEvent.PREV:\n          this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n          break;\n        case NavigationEvent.NEXT:\n          this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n          break;\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n      this._service.set({\n        disabled\n      });\n    }\n    writeValue(value) {\n      this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n      this._service.select(this._controlValue);\n    }\n    static #_ = this.ɵfac = function NgbDatepicker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepicker)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbDatepicker,\n      selectors: [[\"ngb-datepicker\"]],\n      contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbDatepickerContent, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplateFromContent = _t.first);\n        }\n      },\n      viewQuery: function NgbDatepicker_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c6, 7);\n          i0.ɵɵviewQuery(_c7, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n        }\n      },\n      hostVars: 2,\n      hostBindings: function NgbDatepicker_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"disabled\", ctx.model.disabled);\n        }\n      },\n      inputs: {\n        contentTemplate: \"contentTemplate\",\n        dayTemplate: \"dayTemplate\",\n        dayTemplateData: \"dayTemplateData\",\n        displayMonths: \"displayMonths\",\n        firstDayOfWeek: \"firstDayOfWeek\",\n        footerTemplate: \"footerTemplate\",\n        markDisabled: \"markDisabled\",\n        maxDate: \"maxDate\",\n        minDate: \"minDate\",\n        navigation: \"navigation\",\n        outsideDays: \"outsideDays\",\n        showWeekNumbers: \"showWeekNumbers\",\n        startDate: \"startDate\",\n        weekdays: \"weekdays\"\n      },\n      outputs: {\n        navigate: \"navigate\",\n        dateSelect: \"dateSelect\"\n      },\n      exportAs: [\"ngbDatepicker\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbDatepicker),\n        multi: true\n      }, NgbDatepickerService]), i0.ɵɵNgOnChangesFeature],\n      decls: 10,\n      vars: 9,\n      consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [\"content\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"], [1, \"ngb-dp-content\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", \"ngTemplateOutletInjector\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [1, \"ngb-dp-month\"], [1, \"ngb-dp-month-name\"], [3, \"month\"], [3, \"navigate\", \"select\", \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"]],\n      template: function NgbDatepicker_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, NgbDatepicker_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵconditionalCreate(5, NgbDatepicker_Conditional_5_Template, 1, 7, \"ngb-datepicker-navigation\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5, 2);\n          i0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 7);\n        }\n        if (rf & 2) {\n          const defaultContentTemplate_r9 = i0.ɵɵreference(3);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(ctx.navigation !== \"none\" ? 5 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || (ctx.contentTemplateFromContent == null ? null : ctx.contentTemplateFromContent.templateRef) || defaultContentTemplate_r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c8, ctx))(\"ngTemplateOutletInjector\", ctx.injector);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n        }\n      },\n      dependencies: [NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation],\n      styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-tertiary-bg)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-tertiary-bg)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbDatepicker;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n      const shouldCloseOnClick = event => {\n        const element = event.target;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } /* if (type === true) */else {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n      const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), filter(e => e.key === 'Escape'), tap(e => e.preventDefault()));\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n      race([escapes$.pipe(map(_ => 0 /* SOURCE.ESCAPE */)), closeableClicks$.pipe(map(_ => 1 /* SOURCE.CLICK */))]).subscribe(source => zone.run(() => close(source)));\n    }));\n  }\n}\nconst FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n  const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n  zone.runOutsideAngular(() => {\n    // last focused element\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n    // 'tab' / 'shift+tab' stream\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$), filter(e => e.key === 'Tab'), withLatestFrom(lastFocusedElement$)).subscribe(([tabEvent, focusedElement]) => {\n      const [first, last] = getFocusableBoundaryElements(element);\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    });\n    // inside click\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1])).subscribe(lastFocusedElement => lastFocusedElement.focus());\n    }\n  });\n};\nlet NgbRTL = /*#__PURE__*/(() => {\n  class NgbRTL {\n    constructor() {\n      this._element = inject(DOCUMENT).documentElement;\n    }\n    isRTL() {\n      return (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n    }\n    static #_ = this.ɵfac = function NgbRTL_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbRTL)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbRTL,\n      factory: NgbRTL.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbRTL;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\nconst bootstrapPopperMatches = {\n  top: ['top'],\n  bottom: ['bottom'],\n  start: ['left', 'right'],\n  left: ['left'],\n  end: ['right', 'left'],\n  right: ['right'],\n  'top-start': ['top-start', 'top-end'],\n  'top-left': ['top-start'],\n  'top-end': ['top-end', 'top-start'],\n  'top-right': ['top-end'],\n  'bottom-start': ['bottom-start', 'bottom-end'],\n  'bottom-left': ['bottom-start'],\n  'bottom-end': ['bottom-end', 'bottom-start'],\n  'bottom-right': ['bottom-end'],\n  'start-top': ['left-start', 'right-start'],\n  'left-top': ['left-start'],\n  'start-bottom': ['left-end', 'right-end'],\n  'left-bottom': ['left-end'],\n  'end-top': ['right-start', 'left-start'],\n  'right-top': ['right-start'],\n  'end-bottom': ['right-end', 'left-end'],\n  'right-bottom': ['right-end']\n};\nfunction getPopperClassPlacement(placement, isRTL) {\n  const [leftClass, rightClass] = bootstrapPopperMatches[placement];\n  return isRTL ? rightClass || leftClass : leftClass;\n}\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n  let [primary, secondary] = placement.split('-');\n  const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n  let classnames = [newPrimary];\n  if (secondary) {\n    let newSecondary = secondary;\n    if (primary === 'left' || primary === 'right') {\n      newSecondary = newSecondary.replace(popperStartSecondaryPlacement, 'top').replace(popperEndSecondaryPlacement, 'bottom');\n    }\n    classnames.push(`${newPrimary}-${newSecondary}`);\n  }\n  if (baseClass) {\n    classnames = classnames.map(classname => `${baseClass}-${classname}`);\n  }\n  return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nfunction getPopperOptions({\n  placement,\n  baseClass\n}, rtl) {\n  let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n  const allowedPlacements = ['top', 'bottom', 'start', 'end', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'start-top', 'start-bottom', 'end-top', 'end-bottom'];\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  }\n  const popperPlacements = placementVals.map(_placement => {\n    return getPopperClassPlacement(_placement, rtl.isRTL());\n  });\n  let mainPlacement = popperPlacements.shift();\n  const bsModifier = {\n    name: 'bootstrapClasses',\n    enabled: !!baseClass,\n    phase: 'write',\n    fn({\n      state\n    }) {\n      const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n      const popperElement = state.elements.popper;\n      const popperPlacement = state.placement;\n      let className = popperElement.className;\n      // Remove old bootstrap classes\n      className = className.replace(bsClassRegExp, '');\n      // Add current placements\n      className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`;\n      // Remove multiple spaces\n      className = className.trim().replace(spacesRegExp, ' ');\n      // Reassign\n      popperElement.className = className;\n    }\n  };\n  return {\n    placement: mainPlacement,\n    modifiers: [bsModifier, flip, preventOverflow, arrow, {\n      enabled: true,\n      name: 'flip',\n      options: {\n        fallbackPlacements: popperPlacements\n      }\n    }]\n  };\n}\nfunction noop(arg) {\n  return arg;\n}\nfunction ngbPositioning() {\n  const rtl = inject(NgbRTL);\n  let popperInstance = null;\n  return {\n    createPopper(positioningOption) {\n      if (!popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n        popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n      }\n    },\n    update() {\n      if (popperInstance) {\n        popperInstance.update();\n      }\n    },\n    setOptions(positioningOption) {\n      if (popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n        popperInstance.setOptions(popperOptions);\n      }\n    },\n    destroy() {\n      if (popperInstance) {\n        popperInstance.destroy();\n        popperInstance = null;\n      }\n    }\n  };\n}\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nlet NgbDateParserFormatter = /*#__PURE__*/(() => {\n  class NgbDateParserFormatter {\n    static #_ = this.ɵfac = function NgbDateParserFormatter_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDateParserFormatter)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateParserFormatter,\n      factory: () => NGB_DATEPICKER_PARSER_FORMATTER_FACTORY(),\n      providedIn: 'root'\n    });\n  }\n  return NgbDateParserFormatter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbDateISOParserFormatter = /*#__PURE__*/(() => {\n  class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n      if (value != null) {\n        const dateParts = value.trim().split('-');\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: null,\n            day: null\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: null\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[2])\n          };\n        }\n      }\n      return null;\n    }\n    format(date) {\n      return date ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` : '';\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDateISOParserFormatter_BaseFactory;\n      return function NgbDateISOParserFormatter_Factory(__ngFactoryType__) {\n        return (ɵNgbDateISOParserFormatter_BaseFactory || (ɵNgbDateISOParserFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter)))(__ngFactoryType__ || NgbDateISOParserFormatter);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateISOParserFormatter,\n      factory: NgbDateISOParserFormatter.ɵfac\n    });\n  }\n  return NgbDateISOParserFormatter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nlet NgbInputDatepickerConfig = /*#__PURE__*/(() => {\n  class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n    constructor() {\n      super(...arguments);\n      this.autoClose = true;\n      this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n      this.popperOptions = options => options;\n      this.restoreFocus = true;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbInputDatepickerConfig_BaseFactory;\n      return function NgbInputDatepickerConfig_Factory(__ngFactoryType__) {\n        return (ɵNgbInputDatepickerConfig_BaseFactory || (ɵNgbInputDatepickerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig)))(__ngFactoryType__ || NgbInputDatepickerConfig);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbInputDatepickerConfig,\n      factory: NgbInputDatepickerConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbInputDatepickerConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction addPopperOffset(offset$1) {\n  return options => {\n    options.modifiers.push(offset, {\n      name: 'offset',\n      options: {\n        offset: () => offset$1\n      }\n    });\n    return options;\n  };\n}\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nlet NgbInputDatepicker = /*#__PURE__*/(() => {\n  class NgbInputDatepicker {\n    constructor() {\n      this._parserFormatter = inject(NgbDateParserFormatter);\n      this._elRef = inject(ElementRef);\n      this._vcRef = inject(ViewContainerRef);\n      this._ngZone = inject(NgZone);\n      this._calendar = inject(NgbCalendar);\n      this._dateAdapter = inject(NgbDateAdapter);\n      this._document = inject(DOCUMENT);\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._injector = inject(Injector);\n      this._config = inject(NgbInputDatepickerConfig);\n      this._cRef = null;\n      this._disabled = false;\n      this._elWithFocus = null;\n      this._model = null;\n      this._positioning = ngbPositioning();\n      this._destroyCloseHandlers$ = new Subject();\n      /**\n       * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n       *\n       * * `true` - the popup will close on both date selection and outside click.\n       * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n       * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n       * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n       *\n       * @since 3.0.0\n       */\n      this.autoClose = this._config.autoClose;\n      /**\n       * The preferred placement of the datepicker popup, among the [possible values](#/guides/positioning#api).\n       *\n       * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n       *\n       * Please see the [positioning overview](#/positioning) for more details.\n       */\n      this.placement = this._config.placement;\n      /**\n       * Allows to change default Popper options when positioning the popup.\n       * Receives current popper options and returns modified ones.\n       *\n       * @since 13.1.0\n       */\n      this.popperOptions = this._config.popperOptions;\n      /**\n       * A selector specifying the element the datepicker popup should be appended to.\n       *\n       * Currently only supports `\"body\"`.\n       */\n      this.container = this._config.container;\n      /**\n       * A css selector or html element specifying the element the datepicker popup should be positioned against.\n       *\n       * By default the input is used as a target.\n       *\n       * @since 4.2.0\n       */\n      this.positionTarget = this._config.positionTarget;\n      /**\n       * An event emitted when user selects a date using keyboard or mouse.\n       *\n       * The payload of the event is currently selected `NgbDate`.\n       *\n       * @since 1.1.1\n       */\n      this.dateSelect = new EventEmitter();\n      /**\n       * Event emitted right after the navigation happens and displayed month changes.\n       *\n       * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n       */\n      this.navigate = new EventEmitter();\n      /**\n       * An event fired after closing datepicker window.\n       *\n       * @since 4.2.0\n       */\n      this.closed = new EventEmitter();\n      this._onChange = _ => {};\n      this._onTouched = () => {};\n      this._validatorChange = () => {};\n    }\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value === '' || value && value !== 'false';\n      if (this.isOpen()) {\n        this._cRef.instance.setDisabledState(this._disabled);\n      }\n    }\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n      this._validatorChange = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    validate(c) {\n      const {\n        value\n      } = c;\n      if (value != null) {\n        const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        if (!ngbDate) {\n          return {\n            ngbDate: {\n              invalid: value\n            }\n          };\n        }\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n          return {\n            ngbDate: {\n              minDate: {\n                minDate: this.minDate,\n                actual: value\n              }\n            }\n          };\n        }\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n          return {\n            ngbDate: {\n              maxDate: {\n                maxDate: this.maxDate,\n                actual: value\n              }\n            }\n          };\n        }\n      }\n      return null;\n    }\n    writeValue(value) {\n      this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n      this._writeModelValue(this._model);\n    }\n    manualDateChange(value, updateView = false) {\n      const inputValueChanged = value !== this._inputValue;\n      if (inputValueChanged) {\n        this._inputValue = value;\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n      }\n      if (inputValueChanged || !updateView) {\n        this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n      }\n      if (updateView && this._model) {\n        this._writeModelValue(this._model);\n      }\n    }\n    isOpen() {\n      return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    open() {\n      if (!this.isOpen()) {\n        this._cRef = this._vcRef.createComponent(NgbDatepicker, {\n          injector: this._injector\n        });\n        this._applyPopupStyling(this._cRef.location.nativeElement);\n        this._applyDatepickerInputs(this._cRef);\n        this._subscribeForDatepickerOutputs(this._cRef.instance);\n        this._cRef.instance.ngOnInit();\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n        // date selection event handling\n        this._cRef.instance.registerOnChange(selectedDate => {\n          this.writeValue(selectedDate);\n          this._onChange(selectedDate);\n          this._onTouched();\n        });\n        this._cRef.changeDetectorRef.detectChanges();\n        this._cRef.instance.setDisabledState(this.disabled);\n        if (this.container === 'body') {\n          this._document.querySelector(this.container)?.appendChild(this._cRef.location.nativeElement);\n        }\n        // focus handling\n        this._elWithFocus = this._document.activeElement;\n        ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n        setTimeout(() => this._cRef?.instance.focus());\n        let hostElement;\n        if (isString(this.positionTarget)) {\n          hostElement = this._document.querySelector(this.positionTarget);\n        } else if (this.positionTarget instanceof HTMLElement) {\n          hostElement = this.positionTarget;\n        } else {\n          hostElement = this._elRef.nativeElement;\n        }\n        if (this.positionTarget && !hostElement) {\n          throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n        }\n        // Setting up popper and scheduling updates when zone is stable\n        this._ngZone.runOutsideAngular(() => {\n          if (this._cRef && hostElement) {\n            this._positioning.createPopper({\n              hostElement,\n              targetElement: this._cRef.location.nativeElement,\n              placement: this.placement,\n              updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n            });\n            this._afterRenderRef = afterEveryRender({\n              mixedReadWrite: () => {\n                this._positioning.update();\n              }\n            }, {\n              injector: this._injector\n            });\n          }\n        });\n        this._setCloseHandlers();\n      }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n    close() {\n      if (this.isOpen()) {\n        this._cRef?.destroy();\n        this._cRef = null;\n        this._positioning.destroy();\n        this._afterRenderRef?.destroy();\n        this._destroyCloseHandlers$.next();\n        this.closed.emit();\n        this._changeDetector.markForCheck();\n        // restore focus\n        let elementToFocus = this._elWithFocus;\n        if (isString(this.restoreFocus)) {\n          elementToFocus = this._document.querySelector(this.restoreFocus);\n        } else if (this.restoreFocus !== undefined) {\n          elementToFocus = this.restoreFocus;\n        }\n        // in IE document.activeElement can contain an object without 'focus()' sometimes\n        if (elementToFocus && elementToFocus['focus']) {\n          elementToFocus.focus();\n        } else {\n          this._document.body.focus();\n        }\n      }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n    toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n      if (this.isOpen()) {\n        this._cRef.instance.navigateTo(date);\n      }\n    }\n    onBlur() {\n      this._onTouched();\n    }\n    onFocus() {\n      this._elWithFocus = this._elRef.nativeElement;\n    }\n    ngOnChanges(changes) {\n      if (changes['minDate'] || changes['maxDate']) {\n        this._validatorChange();\n        if (this.isOpen()) {\n          if (changes['minDate']) {\n            this._cRef.setInput('minDate', this.minDate);\n          }\n          if (changes['maxDate']) {\n            this._cRef.setInput('maxDate', this.maxDate);\n          }\n        }\n      }\n      if (changes['datepickerClass']) {\n        const {\n          currentValue,\n          previousValue\n        } = changes['datepickerClass'];\n        this._applyPopupClass(currentValue, previousValue);\n      }\n      if (changes['autoClose'] && this.isOpen()) {\n        this._setCloseHandlers();\n      }\n    }\n    ngOnDestroy() {\n      this.close();\n    }\n    _applyDatepickerInputs(datepickerComponentRef) {\n      ['contentTemplate', 'dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays'].forEach(inputName => {\n        if (this[inputName] !== undefined) {\n          datepickerComponentRef.setInput(inputName, this[inputName]);\n        }\n      });\n      datepickerComponentRef.setInput('startDate', this.startDate || this._model);\n    }\n    _applyPopupClass(newClass, oldClass) {\n      const popupEl = this._cRef?.location.nativeElement;\n      if (popupEl) {\n        if (newClass) {\n          popupEl.classList.add(newClass);\n        }\n        if (oldClass) {\n          popupEl.classList.remove(oldClass);\n        }\n      }\n    }\n    _applyPopupStyling(nativeElement) {\n      nativeElement.classList.add('dropdown-menu', 'show');\n      if (this.container === 'body') {\n        nativeElement.classList.add('ngb-dp-body');\n      }\n      this._applyPopupClass(this.datepickerClass);\n    }\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n      datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n      datepickerInstance.dateSelect.subscribe(date => {\n        this.dateSelect.emit(date);\n        if (this.autoClose === true || this.autoClose === 'inside') {\n          this.close();\n        }\n      });\n    }\n    _writeModelValue(model) {\n      const value = this._parserFormatter.format(model);\n      this._inputValue = value;\n      this._elRef.nativeElement.value = value;\n      if (this.isOpen()) {\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n        this._onTouched();\n      }\n    }\n    _fromDateStruct(date) {\n      const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n      return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    _setCloseHandlers() {\n      this._destroyCloseHandlers$.next();\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n    static #_ = this.ɵfac = function NgbInputDatepicker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbInputDatepicker)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbInputDatepicker,\n      selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n      hostVars: 1,\n      hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n            return ctx.manualDateChange($event.target.value);\n          })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n            return ctx.manualDateChange($event.target.value, true);\n          })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n            return ctx.onFocus();\n          })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n            return ctx.onBlur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        autoClose: \"autoClose\",\n        contentTemplate: \"contentTemplate\",\n        datepickerClass: \"datepickerClass\",\n        dayTemplate: \"dayTemplate\",\n        dayTemplateData: \"dayTemplateData\",\n        displayMonths: \"displayMonths\",\n        firstDayOfWeek: \"firstDayOfWeek\",\n        footerTemplate: \"footerTemplate\",\n        markDisabled: \"markDisabled\",\n        minDate: \"minDate\",\n        maxDate: \"maxDate\",\n        navigation: \"navigation\",\n        outsideDays: \"outsideDays\",\n        placement: \"placement\",\n        popperOptions: \"popperOptions\",\n        restoreFocus: \"restoreFocus\",\n        showWeekNumbers: \"showWeekNumbers\",\n        startDate: \"startDate\",\n        container: \"container\",\n        positionTarget: \"positionTarget\",\n        weekdays: \"weekdays\",\n        disabled: \"disabled\"\n      },\n      outputs: {\n        dateSelect: \"dateSelect\",\n        navigate: \"navigate\",\n        closed: \"closed\"\n      },\n      exportAs: [\"ngbDatepicker\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbInputDatepicker;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbCalendarHijri = /*#__PURE__*/(() => {\n  class NgbCalendarHijri extends NgbCalendar {\n    getDaysPerWeek() {\n      return 7;\n    }\n    getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n      return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date = this._setYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = this._setMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return this._setDay(date, date.day + number);\n        default:\n          return date;\n      }\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      const day = this.toGregorian(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      const date = week[thursdayIndex];\n      const jsDate = this.toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      const time = jsDate.getTime();\n      const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n      return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n      return this.fromGregorian(new Date());\n    }\n    isValid(date) {\n      return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n    }\n    _setDay(date, day) {\n      day = +day;\n      let mDays = this.getDaysPerMonth(date.month, date.year);\n      if (day <= 0) {\n        while (day <= 0) {\n          date = this._setMonth(date, date.month - 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n          day += mDays;\n        }\n      } else if (day > mDays) {\n        while (day > mDays) {\n          day -= mDays;\n          date = this._setMonth(date, date.month + 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n        }\n      }\n      date.day = day;\n      return date;\n    }\n    _setMonth(date, month) {\n      month = +month;\n      date.year = date.year + Math.floor((month - 1) / 12);\n      date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n      return date;\n    }\n    _setYear(date, year) {\n      date.year = +year;\n      return date;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarHijri_BaseFactory;\n      return function NgbCalendarHijri_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarHijri_BaseFactory || (ɵNgbCalendarHijri_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHijri)))(__ngFactoryType__ || NgbCalendarHijri);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarHijri,\n      factory: NgbCalendarHijri.ɵfac\n    });\n  }\n  return NgbCalendarHijri;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear$1(gDate) {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nlet NgbCalendarIslamicCivil = /*#__PURE__*/(() => {\n  class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n      const gYear = gDate.getFullYear(),\n        gMonth = gDate.getMonth(),\n        gDay = gDate.getDate();\n      let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n      julianDay = Math.floor(julianDay) + 0.5;\n      const days = julianDay - ISLAMIC_EPOCH;\n      const hYear = Math.floor((30 * days + 10646) / 10631.0);\n      let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n      hMonth = Math.min(hMonth, 11);\n      const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n      return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    toGregorian(hDate) {\n      const hYear = hDate.year;\n      const hMonth = hDate.month - 1;\n      const hDay = hDate.day;\n      const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n      const wjd = Math.floor(julianDay - 0.5) + 0.5,\n        depoch = wjd - GREGORIAN_EPOCH$1,\n        quadricent = Math.floor(depoch / 146097),\n        dqc = mod$1(depoch, 146097),\n        cent = Math.floor(dqc / 36524),\n        dcent = mod$1(dqc, 36524),\n        quad = Math.floor(dcent / 1461),\n        dquad = mod$1(dcent, 1461),\n        yindex = Math.floor(dquad / 365);\n      let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n      if (!(cent === 4 || yindex === 4)) {\n        year++;\n      }\n      const gYearStart = GREGORIAN_EPOCH$1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n      const yearday = wjd - gYearStart;\n      const tjd = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n      const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n      const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n      const tjd2 = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n      const day = wjd - tjd2 + 1;\n      return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    getDaysPerMonth(month, year) {\n      year = year + Math.floor(month / 13);\n      month = (month - 1) % 12 + 1;\n      let length = 29 + month % 2;\n      if (month === 12 && isIslamicLeapYear(year)) {\n        length++;\n      }\n      return length;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarIslamicCivil_BaseFactory;\n      return function NgbCalendarIslamicCivil_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarIslamicCivil_BaseFactory || (ɵNgbCalendarIslamicCivil_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil)))(__ngFactoryType__ || NgbCalendarIslamicCivil);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarIslamicCivil,\n      factory: NgbCalendarIslamicCivil.ɵfac\n    });\n  }\n  return NgbCalendarIslamicCivil;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n// 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n// 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n// 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n// 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n// 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n// 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n// 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n// 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n// 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n// 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n// 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n// 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n// 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n// 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n// 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n// 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n// 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n// 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n// 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n// 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n// 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n// 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n// 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n// 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n// 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n// 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n// 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n// 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n// 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n// 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n// 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n// 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n// 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n// 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n// 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n// 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n// 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n// 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n// 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n// 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n// 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n// 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n// 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n// 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n// 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n// 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n// 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n// 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n// 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n// 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n// 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n// 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n// 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n// 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n// 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n// 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n// 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n// 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n// 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n// 1600\n'001010011101'];\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\nlet NgbCalendarIslamicUmalqura = /*#__PURE__*/(() => {\n  class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n      let hDay = 1,\n        hMonth = 0,\n        hYear = 1300;\n      let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n      if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n        let year = 1300;\n        for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n          for (let j = 0; j < 12; j++) {\n            let numOfDays = +MONTH_LENGTH[i][j] + 29;\n            if (daysDiff <= numOfDays) {\n              hDay = daysDiff + 1;\n              if (hDay > numOfDays) {\n                hDay = 1;\n                j++;\n              }\n              if (j > 11) {\n                j = 0;\n                year++;\n              }\n              hMonth = j;\n              hYear = year;\n              return new NgbDate(hYear, hMonth + 1, hDay);\n            }\n            daysDiff = daysDiff - numOfDays;\n          }\n        }\n        return null;\n      } else {\n        return super.fromGregorian(gDate);\n      }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     */\n    toGregorian(hDate) {\n      const hYear = hDate.year;\n      const hMonth = hDate.month - 1;\n      const hDay = hDate.day;\n      let gDate = new Date(GREGORIAN_FIRST_DATE);\n      let dayDiff = hDay - 1;\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n          for (let m = 0; m < 12; m++) {\n            dayDiff += +MONTH_LENGTH[y][m] + 29;\n          }\n        }\n        for (let m = 0; m < hMonth; m++) {\n          dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n        }\n        gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n      } else {\n        gDate = super.toGregorian(hDate);\n      }\n      return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     */\n    getDaysPerMonth(hMonth, hYear) {\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        const pos = hYear - HIJRI_BEGIN;\n        return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n      }\n      return super.getDaysPerMonth(hMonth, hYear);\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarIslamicUmalqura_BaseFactory;\n      return function NgbCalendarIslamicUmalqura_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarIslamicUmalqura_BaseFactory || (ɵNgbCalendarIslamicUmalqura_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura)))(__ngFactoryType__ || NgbCalendarIslamicUmalqura);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarIslamicUmalqura,\n      factory: NgbCalendarIslamicUmalqura.ɵfac\n    });\n  }\n  return NgbCalendarIslamicUmalqura;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian$3(jalaliDate) {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian$1(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian$3(gdate) {\n  let g2d = gregorianToJulian$1(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\nfunction setJalaliDay(date, day) {\n  let mDays = getDaysPerMonth$1(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth$1(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth$1(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian$1(julianDayNumber) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian$1(gy, gm, gd) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n  let gy = julianToGregorian$1(julianDayNumber).getFullYear(),\n    // Calculate Gregorian year (gy).\n    jalaliYear = gy - 621,\n    r = jalCal(jalaliYear),\n    gregorianDay = gregorianToJulian$1(gy, 3, r.march),\n    jalaliDay,\n    jalaliMonth,\n    numberOfDays;\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  let r = jalCal(jYear);\n  return gregorianToJulian$1(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth$1(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\nlet NgbCalendarPersian = /*#__PURE__*/(() => {\n  class NgbCalendarPersian extends NgbCalendar {\n    getDaysPerWeek() {\n      return 7;\n    }\n    getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n      return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date = setJalaliYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = setJalaliMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return setJalaliDay(date, date.day + number);\n        default:\n          return date;\n      }\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      const day = toGregorian$3(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      const date = week[thursdayIndex];\n      const jsDate = toGregorian$3(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      const time = jsDate.getTime();\n      const startDate = toGregorian$3(new NgbDate(date.year, 1, 1));\n      return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n      return fromGregorian$3(new Date());\n    }\n    isValid(date) {\n      return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian$3(date).getTime());\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarPersian_BaseFactory;\n      return function NgbCalendarPersian_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarPersian_BaseFactory || (ɵNgbCalendarPersian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarPersian)))(__ngFactoryType__ || NgbCalendarPersian);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarPersian,\n      factory: NgbCalendarPersian.ɵfac\n    });\n  }\n  return NgbCalendarPersian;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\nfunction isGregorianLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  let dayOfWeek = dayNumber % 7; // 0 == Monday\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n  if (year != null) {\n    let b = (year * 12 + 17) % 19;\n    return b >= (b < 0 ? -7 : 12);\n  }\n  return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\nfunction setHebrewDay(date, val) {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$2(gdate) {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(),\n    gMonth = date.getMonth(),\n    gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$2(hebrewDate) {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = ['\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6', '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = ['', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea', '\\u05ea\\u05ea\\u05e7'];\n  const hArray1000_9000 = ['', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1', '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'];\n  const geresh = '\\u05f3',\n    gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nlet NgbCalendarHebrew = /*#__PURE__*/(() => {\n  class NgbCalendarHebrew extends NgbCalendar {\n    getDaysPerWeek() {\n      return 7;\n    }\n    getMonths(year) {\n      if (year && isHebrewLeapYear(year)) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n      } else {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      }\n    }\n    getWeeksPerMonth() {\n      return 6;\n    }\n    isValid(date) {\n      if (date != null) {\n        let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n        b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n        b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n        return b && !isNaN(toGregorian$2(date).getTime());\n      }\n      return false;\n    }\n    getNext(date, period = 'd', number = 1) {\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date.year += number;\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = setHebrewMonth(date, number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return setHebrewDay(date, number);\n        default:\n          return date;\n      }\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      const day = toGregorian$2(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      const date = week[week.length - 1];\n      return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    getToday() {\n      return fromGregorian$2(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n    toGregorian(date) {\n      return fromJSDate(toGregorian$2(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n    fromGregorian(date) {\n      return fromGregorian$2(toJSDate(date));\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarHebrew_BaseFactory;\n      return function NgbCalendarHebrew_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarHebrew_BaseFactory || (ɵNgbCalendarHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHebrew)))(__ngFactoryType__ || NgbCalendarHebrew);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarHebrew,\n      factory: NgbCalendarHebrew.ɵfac\n    });\n  }\n  return NgbCalendarHebrew;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst WEEKDAYS$1 = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS$1 = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\nlet NgbDatepickerI18nHebrew = /*#__PURE__*/(() => {\n  class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n      return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n      return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS$1[month - 1] || '';\n    }\n    getWeekdayLabel(weekday, width) {\n      return WEEKDAYS$1[weekday - 1] || '';\n    }\n    getDayAriaLabel(date) {\n      return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    getDayNumerals(date) {\n      return hebrewNumerals(date.day);\n    }\n    getWeekNumerals(weekNumber) {\n      return hebrewNumerals(weekNumber);\n    }\n    getYearNumerals(year) {\n      return hebrewNumerals(year);\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDatepickerI18nHebrew_BaseFactory;\n      return function NgbDatepickerI18nHebrew_Factory(__ngFactoryType__) {\n        return (ɵNgbDatepickerI18nHebrew_BaseFactory || (ɵNgbDatepickerI18nHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew)))(__ngFactoryType__ || NgbDatepickerI18nHebrew);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerI18nHebrew,\n      factory: NgbDatepickerI18nHebrew.ɵfac\n    });\n  }\n  return NgbDatepickerI18nHebrew;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nfunction toGregorian$1(date) {\n  return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nfunction fromGregorian$1(gdate) {\n  return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n\n/**\n * @since 9.1.0\n */\nlet NgbCalendarBuddhist = /*#__PURE__*/(() => {\n  class NgbCalendarBuddhist extends NgbCalendarGregorian {\n    getToday() {\n      return fromGregorian$1(new Date());\n    }\n    getNext(date, period = 'd', number = 1) {\n      let jsDate = toGregorian$1(date);\n      let checkMonth = true;\n      let expectedMonth = jsDate.getMonth();\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n          break;\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n        default:\n          return date;\n      }\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n      return fromGregorian$1(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      let jsDate = toGregorian$1(date);\n      let day = jsDate.getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      let date = week[thursdayIndex];\n      const jsDate = toGregorian$1(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      const time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      }\n      // year 0 doesn't exist in Gregorian calendar\n      if (date.year === 0) {\n        return false;\n      }\n      const jsDate = toGregorian$1(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarBuddhist_BaseFactory;\n      return function NgbCalendarBuddhist_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarBuddhist_BaseFactory || (ɵNgbCalendarBuddhist_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarBuddhist)))(__ngFactoryType__ || NgbCalendarBuddhist);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarBuddhist,\n      factory: NgbCalendarBuddhist.ɵfac\n    });\n  }\n  return NgbCalendarBuddhist;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst JD_EPOCH = 1724220.5;\nconst DAYSPERMONTH = [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 5];\n/**\n * Determine whether this date is in a leap year.\n * * `year` is the year to examine\n * returns boolean - true if this is a leap year, false if not\n * */\nfunction isEthiopianLeapYear(year) {\n  if (year != null) {\n    return year % 4 == 3 || year % 4 == -1;\n  }\n  return false;\n}\n/**\n * Sets the Ethiopian year.\n * * `date` is Ethiopian date\n * * `yearValue` incremented year\n * returns NgbDate - ethiopian date\n * */\nfunction setEthiopianYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n/**\n * Sets the Ethiopian month.\n * * `date` is Ethiopian date\n * * `val` incremented month\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianMonth(date, val) {\n  val = +val;\n  date.year = date.year + Math.floor((val - 1) / 13);\n  date.month = Math.floor(((val - 1) % 13 + 13) % 13) + 1;\n  return date;\n}\n/**\n * Sets the Ethiopian day.\n * * `date` is Ethiopian date\n * * `day` incremented day\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianDay(date, day) {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setEthiopianMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setEthiopianMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\nfunction getDaysPerMonth(month, year) {\n  let leapYear = isEthiopianLeapYear(year);\n  return DAYSPERMONTH[month - 1] + (month === 13 && leapYear ? 1 : 0);\n}\nfunction toGregorian(ethiopianDate) {\n  let jdn = ethiopianToJulian(ethiopianDate.year, ethiopianDate.month, ethiopianDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\nfunction fromGregorian(gdate) {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return juilianToEthiopia(g2d);\n}\nfunction ethiopianToJulian(year, month, day) {\n  if (year < 0) {\n    year++;\n  } // No year zero\n  return day + (month - 1) * 30 + (year - 1) * 365 + Math.floor(year / 4) + JD_EPOCH - 1;\n}\nfunction juilianToEthiopia(jd) {\n  let c = Math.floor(jd) + 0.5 - JD_EPOCH;\n  let year = Math.floor((c - Math.floor((c + 366) / 1461)) / 365) + 1;\n  if (year <= 0) {\n    year--;\n  } // No year zero\n  c = Math.floor(jd) + 0.5 - ethiopianToJulian(year, 1, 1);\n  let month = Math.floor(c / 30) + 1;\n  let day = c - (month - 1) * 30 + 1;\n  return new NgbDate(year, month, day);\n}\nfunction julianToGregorian(jd) {\n  let z = Math.floor(jd + 0.5);\n  let a = Math.floor((z - 1867216.25) / 36524.25);\n  a = z + 1 + a - Math.floor(a / 4);\n  let b = a + 1524;\n  let c = Math.floor((b - 122.1) / 365.25);\n  let d = Math.floor(365.25 * c);\n  let e = Math.floor((b - d) / 30.6001);\n  let day = b - d - Math.floor(e * 30.6001);\n  let month = e - (e > 13.5 ? 13 : 1);\n  let year = c - (month > 2.5 ? 4716 : 4715);\n  if (year <= 0) {\n    year--;\n  } // No year zero\n  return new Date(year, month, day);\n}\nfunction gregorianToJulian(year, month, day) {\n  if (year < 0) {\n    year++;\n  } // No year zero\n  // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\n  if (month < 3) {\n    month += 12;\n    year--;\n  }\n  let a = Math.floor(year / 100);\n  let b = 2 - a + Math.floor(a / 4);\n  return Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5;\n}\n\n/**\n * @since 16.0.0\n */\nlet NgbCalendarEthiopian = /*#__PURE__*/(() => {\n  class NgbCalendarEthiopian extends NgbCalendar {\n    getDaysPerWeek() {\n      return 7;\n    }\n    getMonths(year) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    }\n    getNext(date, period = 'd', number = 1) {\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date = setEthiopianYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = setEthiopianMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return setEthiopianDay(date, date.day + number);\n        default:\n          return date;\n      }\n    }\n    getPrev(date, period = 'd', number = 1) {\n      return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n      const dt = Math.floor(ethiopianToJulian(date.year, date.month, date.day) + 3) % 7;\n      return dt === 0 ? 7 : dt;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      const date = week[thursdayIndex];\n      const jsDate = toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      const time = jsDate.getTime();\n      const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n      return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getWeeksPerMonth() {\n      return 6;\n    }\n    getToday() {\n      return fromGregorian(new Date());\n    }\n    isValid(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbCalendarEthiopian_BaseFactory;\n      return function NgbCalendarEthiopian_Factory(__ngFactoryType__) {\n        return (ɵNgbCalendarEthiopian_BaseFactory || (ɵNgbCalendarEthiopian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarEthiopian)))(__ngFactoryType__ || NgbCalendarEthiopian);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbCalendarEthiopian,\n      factory: NgbCalendarEthiopian.ɵfac\n    });\n  }\n  return NgbCalendarEthiopian;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst WEEKDAYS = ['እሑድ', 'ሰኞ', 'ማክሰኞ', 'ረቡዕ', 'ሓሙስ', 'ዓርብ', 'ቅዳሜ'];\nconst MONTHS = ['መስከረም', 'ጥቅምት', 'ኅዳር', 'ታህሣሥ', 'ጥር', 'የካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰኔ', 'ሐምሌ', 'ነሐሴ', 'ጳጉሜ'];\n/**\n * @since 16.0.0\n */\nlet NgbDatepickerI18nAmharic = /*#__PURE__*/(() => {\n  class NgbDatepickerI18nAmharic extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n      return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n      return MONTHS[month - 1];\n    }\n    getWeekdayLabel(weekday, width) {\n      return WEEKDAYS[weekday - 1];\n    }\n    getDayAriaLabel(date) {\n      return `${date.day} ${this.getMonthFullName(date.month, date.year)} ${date.year}`;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDatepickerI18nAmharic_BaseFactory;\n      return function NgbDatepickerI18nAmharic_Factory(__ngFactoryType__) {\n        return (ɵNgbDatepickerI18nAmharic_BaseFactory || (ɵNgbDatepickerI18nAmharic_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDatepickerI18nAmharic)))(__ngFactoryType__ || NgbDatepickerI18nAmharic);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDatepickerI18nAmharic,\n      factory: NgbDatepickerI18nAmharic.ɵfac\n    });\n  }\n  return NgbDatepickerI18nAmharic;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nlet NgbDateNativeAdapter = /*#__PURE__*/(() => {\n  class NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    fromModel(date) {\n      return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n    }\n    _fromNativeDate(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate()\n      };\n    }\n    _toNativeDate(date) {\n      const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n      // avoid 30 -> 1930 conversion\n      jsDate.setFullYear(date.year);\n      return jsDate;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDateNativeAdapter_BaseFactory;\n      return function NgbDateNativeAdapter_Factory(__ngFactoryType__) {\n        return (ɵNgbDateNativeAdapter_BaseFactory || (ɵNgbDateNativeAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeAdapter)))(__ngFactoryType__ || NgbDateNativeAdapter);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateNativeAdapter,\n      factory: NgbDateNativeAdapter.ɵfac\n    });\n  }\n  return NgbDateNativeAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nlet NgbDateNativeUTCAdapter = /*#__PURE__*/(() => {\n  class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    _fromNativeDate(date) {\n      return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate()\n      };\n    }\n    _toNativeDate(date) {\n      const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n      // avoid 30 -> 1930 conversion\n      jsDate.setUTCFullYear(date.year);\n      return jsDate;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDateNativeUTCAdapter_BaseFactory;\n      return function NgbDateNativeUTCAdapter_Factory(__ngFactoryType__) {\n        return (ɵNgbDateNativeUTCAdapter_BaseFactory || (ɵNgbDateNativeUTCAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter)))(__ngFactoryType__ || NgbDateNativeUTCAdapter);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDateNativeUTCAdapter,\n      factory: NgbDateNativeUTCAdapter.ɵfac\n    });\n  }\n  return NgbDateNativeUTCAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\nlet NgbDatepickerModule = /*#__PURE__*/(() => {\n  class NgbDatepickerModule {\n    static #_ = this.ɵfac = function NgbDatepickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDatepickerModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbDatepickerModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbDatepickerModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nlet NgbDropdownConfig = /*#__PURE__*/(() => {\n  class NgbDropdownConfig {\n    constructor() {\n      this.autoClose = true;\n      this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n      this.popperOptions = options => options;\n      this.container = null;\n    }\n    static #_ = this.ɵfac = function NgbDropdownConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbDropdownConfig,\n      factory: NgbDropdownConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbDropdownConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nlet NgbDropdownItem = /*#__PURE__*/(() => {\n  class NgbDropdownItem {\n    constructor() {\n      this._disabled = false;\n      this.nativeElement = inject(ElementRef).nativeElement;\n      this.tabindex = 0;\n    }\n    set disabled(value) {\n      this._disabled = value === '' || value === true; // accept an empty attribute as true\n    }\n    get disabled() {\n      return this._disabled;\n    }\n    static #_ = this.ɵfac = function NgbDropdownItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownItem)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdownItem,\n      selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n      hostAttrs: [1, \"dropdown-item\"],\n      hostVars: 3,\n      hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"tabIndex\", ctx.disabled ? -1 : ctx.tabindex);\n          i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        tabindex: \"tabindex\",\n        disabled: \"disabled\"\n      }\n    });\n  }\n  return NgbDropdownItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that will be applied if dropdown item is a button.\n * It will only set the disabled property.\n */\nlet NgbDropdownButtonItem = /*#__PURE__*/(() => {\n  class NgbDropdownButtonItem {\n    constructor() {\n      this.item = inject(NgbDropdownItem);\n    }\n    static #_ = this.ɵfac = function NgbDropdownButtonItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownButtonItem)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdownButtonItem,\n      selectors: [[\"button\", \"ngbDropdownItem\", \"\"]],\n      hostVars: 1,\n      hostBindings: function NgbDropdownButtonItem_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"disabled\", ctx.item.disabled);\n        }\n      }\n    });\n  }\n  return NgbDropdownButtonItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nlet NgbDropdownMenu = /*#__PURE__*/(() => {\n  class NgbDropdownMenu {\n    constructor() {\n      this.dropdown = inject(NgbDropdown);\n      this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static #_ = this.ɵfac = function NgbDropdownMenu_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownMenu)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdownMenu,\n      selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n      contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n        }\n      },\n      hostAttrs: [1, \"dropdown-menu\"],\n      hostVars: 2,\n      hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"show\", ctx.dropdown.isOpen());\n        }\n      }\n    });\n  }\n  return NgbDropdownMenu;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nlet NgbDropdownAnchor = /*#__PURE__*/(() => {\n  class NgbDropdownAnchor {\n    constructor() {\n      this.dropdown = inject(NgbDropdown);\n      this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static #_ = this.ɵfac = function NgbDropdownAnchor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownAnchor)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdownAnchor,\n      selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n      hostAttrs: [1, \"dropdown-toggle\"],\n      hostVars: 3,\n      hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n          i0.ɵɵclassProp(\"show\", ctx.dropdown.isOpen());\n        }\n      }\n    });\n  }\n  return NgbDropdownAnchor;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nlet NgbDropdownToggle = /*#__PURE__*/(() => {\n  class NgbDropdownToggle extends NgbDropdownAnchor {\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbDropdownToggle_BaseFactory;\n      return function NgbDropdownToggle_Factory(__ngFactoryType__) {\n        return (ɵNgbDropdownToggle_BaseFactory || (ɵNgbDropdownToggle_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDropdownToggle)))(__ngFactoryType__ || NgbDropdownToggle);\n      };\n    })();\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdownToggle,\n      selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n      hostAttrs: [1, \"dropdown-toggle\"],\n      hostVars: 3,\n      hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n            return ctx.dropdown.toggle();\n          })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) {\n            return ctx.dropdown.onKeyDown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n          i0.ɵɵclassProp(\"show\", ctx.dropdown.isOpen());\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(() => NgbDropdownToggle)\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgbDropdownToggle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nlet NgbDropdown = /*#__PURE__*/(() => {\n  class NgbDropdown {\n    constructor() {\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._config = inject(NgbDropdownConfig);\n      this._document = inject(DOCUMENT);\n      this._injector = inject(Injector);\n      this._ngZone = inject(NgZone);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._destroyCloseHandlers$ = new Subject();\n      this._bodyContainer = null;\n      this._positioning = ngbPositioning();\n      /**\n       * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n       *\n       * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n       * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n       * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n       * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n       */\n      this.autoClose = this._config.autoClose;\n      /**\n       * Defines whether or not the dropdown menu is opened initially.\n       */\n      this._open = false;\n      /**\n       * The preferred placement of the dropdown, among the [possible values](#/guides/positioning#api).\n       *\n       * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n       *\n       * Please see the [positioning overview](#/positioning) for more details.\n       */\n      this.placement = this._config.placement;\n      /**\n       * Allows to change default Popper options when positioning the dropdown.\n       * Receives current popper options and returns modified ones.\n       *\n       * @since 13.1.0\n       */\n      this.popperOptions = this._config.popperOptions;\n      /**\n       * A selector specifying the element the dropdown should be appended to.\n       * Currently only supports \"body\".\n       *\n       * @since 4.1.0\n       */\n      this.container = this._config.container;\n      /**\n       * An event fired when the dropdown is opened or closed.\n       *\n       * The event payload is a `boolean`:\n       * * `true` - the dropdown was opened\n       * * `false` - the dropdown was closed\n       */\n      this.openChange = new EventEmitter();\n    }\n    ngOnInit() {\n      if (!this.display) {\n        this.display = this._nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n      }\n    }\n    ngAfterContentInit() {\n      afterNextRender({\n        write: () => {\n          this._applyPlacementClasses();\n          if (this._open) {\n            this._setCloseHandlers();\n          }\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes.container && this._open) {\n        this._applyContainer(this.container);\n      }\n      if (changes.placement && !changes.placement.firstChange) {\n        this._positioning.setOptions({\n          hostElement: this._anchor.nativeElement,\n          targetElement: this._bodyContainer || this._menu.nativeElement,\n          placement: this.placement\n        });\n        this._applyPlacementClasses();\n      }\n      if (changes.dropdownClass) {\n        const {\n          currentValue,\n          previousValue\n        } = changes.dropdownClass;\n        this._applyCustomDropdownClass(currentValue, previousValue);\n      }\n      if (changes.autoClose && this._open) {\n        this.autoClose = changes.autoClose.currentValue;\n        this._setCloseHandlers();\n      }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    isOpen() {\n      return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n    open() {\n      if (!this._open) {\n        this._open = true;\n        this._applyContainer(this.container);\n        this.openChange.emit(true);\n        this._setCloseHandlers();\n        if (this._anchor) {\n          this._anchor.nativeElement.focus();\n          if (this.display === 'dynamic') {\n            this._ngZone.runOutsideAngular(() => {\n              this._positioning.createPopper({\n                hostElement: this._anchor.nativeElement,\n                targetElement: this._bodyContainer || this._menu.nativeElement,\n                placement: this.placement,\n                updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n              });\n              this._applyPlacementClasses();\n              this._afterRenderRef = afterEveryRender({\n                write: () => {\n                  this._positionMenu();\n                }\n              }, {\n                injector: this._injector\n              });\n            });\n          }\n        }\n      }\n    }\n    _setCloseHandlers() {\n      this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, source => {\n        this.close();\n        if (source === 0 /* SOURCE.ESCAPE */) {\n          this._anchor.nativeElement.focus();\n        }\n      }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n    close() {\n      if (this._open) {\n        this._open = false;\n        this._resetContainer();\n        this._positioning.destroy();\n        this._afterRenderRef?.destroy();\n        this._destroyCloseHandlers$.next();\n        this.openChange.emit(false);\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n    toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    ngOnDestroy() {\n      this.close();\n    }\n    onKeyDown(event) {\n      const {\n        key\n      } = event;\n      const itemElements = this._getMenuElements();\n      let position = -1;\n      let itemElement = null;\n      const isEventFromToggle = this._isEventFromToggle(event);\n      if (!isEventFromToggle && itemElements.length) {\n        itemElements.forEach((item, index) => {\n          if (item.contains(event.target)) {\n            itemElement = item;\n          }\n          if (item === getActiveElement(this._document)) {\n            position = index;\n          }\n        });\n      }\n      // closing on Enter / Space\n      if (key === ' ' || key === 'Enter') {\n        if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n          // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n          // So we have to register a one-time click handler that will fire after any user defined click handlers\n          // to close the dropdown\n          fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n        }\n        return;\n      }\n      if (key === 'Tab') {\n        if (event.target && this.isOpen() && this.autoClose) {\n          if (this._anchor.nativeElement === event.target) {\n            if (this.container === 'body' && !event.shiftKey) {\n              /* This case is special: user is using [Tab] from the anchor/toggle.\n              User expects the next focusable element in the dropdown menu to get focus.\n              But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n              Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n              so that browser will focus the proper element (first one focusable in the menu) */\n              this._menu.nativeElement.setAttribute('tabindex', '0');\n              this._menu.nativeElement.focus();\n              this._menu.nativeElement.removeAttribute('tabindex');\n            } else if (event.shiftKey) {\n              this.close();\n            }\n            return;\n          } else if (this.container === 'body') {\n            const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n            if (event.shiftKey && event.target === focusableElements[0]) {\n              this._anchor.nativeElement.focus();\n              event.preventDefault();\n            } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n              this._anchor.nativeElement.focus();\n              this.close();\n            }\n          } else {\n            fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(({\n              relatedTarget\n            }) => {\n              if (!this._nativeElement.contains(relatedTarget)) {\n                this.close();\n              }\n            });\n          }\n        }\n        return;\n      }\n      // opening / navigating\n      if (isEventFromToggle || itemElement) {\n        this.open();\n        if (itemElements.length) {\n          switch (key) {\n            case 'ArrowDown':\n              position = Math.min(position + 1, itemElements.length - 1);\n              break;\n            case 'ArrowUp':\n              if (this._isDropup() && position === -1) {\n                position = itemElements.length - 1;\n                break;\n              }\n              position = Math.max(position - 1, 0);\n              break;\n            case 'Home':\n              position = 0;\n              break;\n            case 'End':\n              position = itemElements.length - 1;\n              break;\n          }\n          itemElements[position].focus();\n        }\n        event.preventDefault();\n      }\n    }\n    _isDropup() {\n      return this._nativeElement.classList.contains('dropup');\n    }\n    _isEventFromToggle(event) {\n      return this._anchor.nativeElement.contains(event.target);\n    }\n    _getMenuElements() {\n      return this._menu ? this._menu.menuItems.filter(({\n        disabled\n      }) => !disabled).map(({\n        nativeElement\n      }) => nativeElement) : [];\n    }\n    _positionMenu() {\n      const menu = this._menu;\n      if (this.isOpen() && menu) {\n        if (this.display === 'dynamic') {\n          this._positioning.update();\n          this._applyPlacementClasses();\n        } else {\n          this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n        }\n      }\n    }\n    _getFirstPlacement(placement) {\n      return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n    _resetContainer() {\n      if (this._menu) {\n        this._nativeElement.appendChild(this._menu.nativeElement);\n      }\n      if (this._bodyContainer) {\n        this._document.body.removeChild(this._bodyContainer);\n        this._bodyContainer = null;\n      }\n    }\n    _applyContainer(container = null) {\n      this._resetContainer();\n      if (container === 'body') {\n        const dropdownMenuElement = this._menu.nativeElement;\n        const bodyContainer = this._bodyContainer = this._bodyContainer || this._document.createElement('div');\n        // Override some styles to have the positioning working\n        bodyContainer.style.position = 'absolute';\n        dropdownMenuElement.style.position = 'static';\n        bodyContainer.style.zIndex = '1055';\n        bodyContainer.appendChild(dropdownMenuElement);\n        this._document.body.appendChild(bodyContainer);\n      }\n      this._applyCustomDropdownClass(this.dropdownClass);\n    }\n    _applyCustomDropdownClass(newClass, oldClass) {\n      const targetElement = this.container === 'body' ? this._bodyContainer : this._nativeElement;\n      if (targetElement) {\n        if (oldClass) {\n          targetElement.classList.remove(oldClass);\n        }\n        if (newClass) {\n          targetElement.classList.add(newClass);\n        }\n      }\n    }\n    _applyPlacementClasses(placement) {\n      if (this._menu) {\n        if (!placement) {\n          placement = this._getFirstPlacement(this.placement);\n        }\n        // remove the current placement classes\n        this._nativeElement.classList.remove('dropup', 'dropdown');\n        if (this.display === 'static') {\n          this._menu.nativeElement.setAttribute('data-bs-popper', 'static');\n        } else {\n          this._menu.nativeElement.removeAttribute('data-bs-popper');\n        }\n        /*\n         * apply the new placement\n         * in case of top use up-arrow or down-arrow otherwise\n         */\n        const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n        this._nativeElement.classList.add(dropdownClass);\n        if (this._bodyContainer) {\n          this._bodyContainer.classList.remove('dropup', 'dropdown');\n          this._bodyContainer.classList.add(dropdownClass);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function NgbDropdown_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdown)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbDropdown,\n      selectors: [[\"\", \"ngbDropdown\", \"\"]],\n      contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n        }\n      },\n      hostVars: 2,\n      hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"show\", ctx.isOpen());\n        }\n      },\n      inputs: {\n        autoClose: \"autoClose\",\n        dropdownClass: \"dropdownClass\",\n        _open: [0, \"open\", \"_open\"],\n        placement: \"placement\",\n        popperOptions: \"popperOptions\",\n        container: \"container\",\n        display: \"display\"\n      },\n      outputs: {\n        openChange: \"openChange\"\n      },\n      exportAs: [\"ngbDropdown\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbDropdown;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbDropdownButtonItem];\nlet NgbDropdownModule = /*#__PURE__*/(() => {\n  class NgbDropdownModule {\n    static #_ = this.ɵfac = function NgbDropdownModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbDropdownModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbDropdownModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbDropdownModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\nlet NgbModalConfig = /*#__PURE__*/(() => {\n  class NgbModalConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.backdrop = true;\n      this.fullscreen = false;\n      this.keyboard = true;\n      this.role = 'dialog';\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbModalConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModalConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbModalConfig,\n      factory: NgbModalConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbModalConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass ContentRef {\n  constructor(nodes, viewRef, componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\nclass PopupService {\n  constructor(_componentType) {\n    this._componentType = _componentType;\n    this._windowRef = null;\n    this._contentRef = null;\n    this._document = inject(DOCUMENT);\n    this._applicationRef = inject(ApplicationRef);\n    this._injector = inject(Injector);\n    this._viewContainerRef = inject(ViewContainerRef);\n    this._ngZone = inject(NgZone);\n  }\n  open(content, templateContext, animation = false) {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, templateContext);\n      this._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n        injector: this._injector,\n        projectableNodes: this._contentRef.nodes\n      });\n    }\n    const {\n      nativeElement\n    } = this._windowRef.location;\n    const nextRenderSubject = new Subject();\n    afterNextRender({\n      mixedReadWrite: () => {\n        nextRenderSubject.next();\n        nextRenderSubject.complete();\n      }\n    }, {\n      injector: this._injector\n    });\n    const transition$ = nextRenderSubject.pipe(mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({\n      classList\n    }) => classList.add('show'), {\n      animation,\n      runningTransition: 'continue'\n    })));\n    return {\n      windowRef: this._windowRef,\n      transition$\n    };\n  }\n  close(animation = false) {\n    if (!this._windowRef) {\n      return of(undefined);\n    }\n    return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation,\n      runningTransition: 'stop'\n    }).pipe(tap(() => {\n      this._windowRef?.destroy();\n      this._contentRef?.viewRef?.destroy();\n      this._windowRef = null;\n      this._contentRef = null;\n    }));\n  }\n  _getContentRef(content, templateContext) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(templateContext);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._document.createTextNode(`${content}`)]]);\n    }\n  }\n}\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\nlet ScrollBar = /*#__PURE__*/(() => {\n  class ScrollBar {\n    constructor() {\n      this._document = inject(DOCUMENT);\n    }\n    /**\n     * To be called to hide a potential vertical scrollbar:\n     * - if a scrollbar is there and has a width greater than 0, adds some compensation\n     * padding to the body to keep the same layout as when the scrollbar is there\n     * - adds overflow: hidden\n     *\n     * @return a callback used to revert the change\n     */\n    hide() {\n      const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n      const body = this._document.body;\n      const bodyStyle = body.style;\n      const {\n        overflow,\n        paddingRight\n      } = bodyStyle;\n      if (scrollbarWidth > 0) {\n        const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n        bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n      }\n      bodyStyle.overflow = 'hidden';\n      return () => {\n        if (scrollbarWidth > 0) {\n          bodyStyle.paddingRight = paddingRight;\n        }\n        bodyStyle.overflow = overflow;\n      };\n    }\n    static #_ = this.ɵfac = function ScrollBar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScrollBar)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScrollBar,\n      factory: ScrollBar.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ScrollBar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst BACKDROP_ATTRIBUTES = ['animation', 'backdropClass'];\nlet NgbModalBackdrop = /*#__PURE__*/(() => {\n  class NgbModalBackdrop {\n    constructor() {\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._zone = inject(NgZone);\n      this._injector = inject(Injector);\n      this._cdRef = inject(ChangeDetectorRef);\n    }\n    ngOnInit() {\n      afterNextRender({\n        mixedReadWrite: () => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n          if (animation) {\n            reflow(element);\n          }\n          element.classList.add('show');\n        }, {\n          animation: this.animation,\n          runningTransition: 'continue'\n        })\n      }, {\n        injector: this._injector\n      });\n    }\n    hide() {\n      return ngbRunTransition(this._zone, this._nativeElement, ({\n        classList\n      }) => classList.remove('show'), {\n        animation: this.animation,\n        runningTransition: 'stop'\n      });\n    }\n    updateOptions(options) {\n      BACKDROP_ATTRIBUTES.forEach(optionName => {\n        if (isDefined(options[optionName])) {\n          this[optionName] = options[optionName];\n        }\n      });\n      this._cdRef.markForCheck();\n    }\n    static #_ = this.ɵfac = function NgbModalBackdrop_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModalBackdrop)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbModalBackdrop,\n      selectors: [[\"ngb-modal-backdrop\"]],\n      hostAttrs: [2, \"z-index\", \"1055\"],\n      hostVars: 6,\n      hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"modal-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n          i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        backdropClass: \"backdropClass\"\n      },\n      decls: 0,\n      vars: 0,\n      template: function NgbModalBackdrop_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return NgbModalBackdrop;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n  /**\n   * Updates options of an opened modal.\n   *\n   * @since 14.2.0\n   */\n  update(options) {}\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason) {}\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n  /**\n   * Updates options of an opened modal.\n   *\n   * @since 14.2.0\n   */\n  update(options) {\n    this._windowCmptRef.instance.updateOptions(options);\n    if (this._backdropCmptRef && this._backdropCmptRef.instance) {\n      this._backdropCmptRef.instance.updateOptions(options);\n    }\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the modal is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   *\n   * @since 8.0.0\n   */\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   *\n   * @since 8.0.0\n   */\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\n   * At this point modal and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   *\n   * @since 8.0.0\n   */\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when modal is fully visible and animation was finished.\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if modal is closed before open animation is finished.\n   *\n   * @since 8.0.0\n   */\n  get shown() {\n    return this._windowCmptRef.instance.shown.asObservable();\n  }\n  constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n    _windowCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {\n    if (this._windowCmptRef) {\n      this._closed.next(result);\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n    this._reject(reason);\n    this._removeModalElements();\n  }\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason) {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n  _removeModalElements() {\n    const windowTransition$ = this._windowCmptRef.instance.hide();\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n    // hiding window\n    windowTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._windowCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n      this._windowCmptRef.destroy();\n      this._contentRef?.viewRef?.destroy();\n      this._windowCmptRef = null;\n      this._contentRef = null;\n    });\n    // hiding backdrop\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n        this._backdropCmptRef.destroy();\n        this._backdropCmptRef = null;\n      }\n    });\n    // all done\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n      this._hidden.complete();\n    });\n  }\n}\nvar ModalDismissReasons = /*#__PURE__*/function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n  return ModalDismissReasons;\n}(ModalDismissReasons || {});\nconst WINDOW_ATTRIBUTES = ['animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'fullscreen', 'keyboard', 'role', 'scrollable', 'size', 'windowClass', 'modalDialogClass'];\nlet NgbModalWindow = /*#__PURE__*/(() => {\n  class NgbModalWindow {\n    constructor() {\n      this._document = inject(DOCUMENT);\n      this._elRef = inject(ElementRef);\n      this._zone = inject(NgZone);\n      this._injector = inject(Injector);\n      this._cdRef = inject(ChangeDetectorRef);\n      this._closed$ = new Subject();\n      this._elWithFocus = null; // element that is focused prior to modal opening\n      this.backdrop = true;\n      this.keyboard = true;\n      this.role = 'dialog';\n      this.dismissEvent = new EventEmitter();\n      this.shown = new Subject();\n      this.hidden = new Subject();\n    }\n    get fullscreenClass() {\n      return this.fullscreen === true ? ' modal-fullscreen' : isString(this.fullscreen) ? ` modal-fullscreen-${this.fullscreen}-down` : '';\n    }\n    dismiss(reason) {\n      this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n      this._elWithFocus = this._document.activeElement;\n      afterNextRender({\n        mixedReadWrite: () => this._show()\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnDestroy() {\n      this._disableEventHandling();\n    }\n    hide() {\n      const {\n        nativeElement\n      } = this._elRef;\n      const context = {\n        animation: this.animation,\n        runningTransition: 'stop'\n      };\n      const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n      const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n      const transitions$ = zip(windowTransition$, dialogTransition$);\n      transitions$.subscribe(() => {\n        this.hidden.next();\n        this.hidden.complete();\n      });\n      this._disableEventHandling();\n      this._restoreFocus();\n      return transitions$;\n    }\n    updateOptions(options) {\n      WINDOW_ATTRIBUTES.forEach(optionName => {\n        if (isDefined(options[optionName])) {\n          this[optionName] = options[optionName];\n        }\n      });\n      this._cdRef.markForCheck();\n    }\n    _show() {\n      const context = {\n        animation: this.animation,\n        runningTransition: 'continue'\n      };\n      const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n        element.classList.add('show');\n      }, context);\n      const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n      zip(windowTransition$, dialogTransition$).subscribe(() => {\n        this.shown.next();\n        this.shown.complete();\n      });\n      this._enableEventHandling();\n      this._setFocus();\n    }\n    _enableEventHandling() {\n      const {\n        nativeElement\n      } = this._elRef;\n      this._zone.runOutsideAngular(() => {\n        fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$), filter(e => e.key === 'Escape')).subscribe(event => {\n          if (this.keyboard) {\n            requestAnimationFrame(() => {\n              if (!event.defaultPrevented) {\n                this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n              }\n            });\n          } else if (this.backdrop === 'static') {\n            this._bumpBackdrop();\n          }\n        });\n        // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n        // inside the modal dialog and releasing it outside\n        let preventClose = false;\n        fromEvent(this._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(this._closed$), tap(() => preventClose = false), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({\n          target\n        }) => nativeElement === target)).subscribe(() => {\n          preventClose = true;\n        });\n        // We're listening to 'click' to dismiss modal on modal window click, except when:\n        // 1. clicking on modal dialog itself\n        // 2. closing was prevented by mousedown/up handlers\n        // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n        fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({\n          target\n        }) => {\n          if (nativeElement === target) {\n            if (this.backdrop === 'static') {\n              this._bumpBackdrop();\n            } else if (this.backdrop === true && !preventClose) {\n              this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n            }\n          }\n          preventClose = false;\n        });\n      });\n    }\n    _disableEventHandling() {\n      this._closed$.next();\n    }\n    _setFocus() {\n      const {\n        nativeElement\n      } = this._elRef;\n      if (!nativeElement.contains(document.activeElement)) {\n        const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n        const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n        const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n        elementToFocus.focus();\n      }\n    }\n    _restoreFocus() {\n      const body = this._document.body;\n      const elWithFocus = this._elWithFocus;\n      let elementToFocus;\n      if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n        elementToFocus = elWithFocus;\n      } else {\n        elementToFocus = body;\n      }\n      this._zone.runOutsideAngular(() => {\n        setTimeout(() => elementToFocus.focus());\n        this._elWithFocus = null;\n      });\n    }\n    _bumpBackdrop() {\n      if (this.backdrop === 'static') {\n        ngbRunTransition(this._zone, this._elRef.nativeElement, ({\n          classList\n        }) => {\n          classList.add('modal-static');\n          return () => classList.remove('modal-static');\n        }, {\n          animation: this.animation,\n          runningTransition: 'continue'\n        });\n      }\n    }\n    static #_ = this.ɵfac = function NgbModalWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModalWindow)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbModalWindow,\n      selectors: [[\"ngb-modal-window\"]],\n      viewQuery: function NgbModalWindow_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c9, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n        }\n      },\n      hostAttrs: [\"tabindex\", \"-1\"],\n      hostVars: 8,\n      hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy)(\"role\", ctx.role);\n          i0.ɵɵclassMap(\"modal d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n          i0.ɵɵclassProp(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        ariaDescribedBy: \"ariaDescribedBy\",\n        backdrop: \"backdrop\",\n        centered: \"centered\",\n        fullscreen: \"fullscreen\",\n        keyboard: \"keyboard\",\n        role: \"role\",\n        scrollable: \"scrollable\",\n        size: \"size\",\n        windowClass: \"windowClass\",\n        modalDialogClass: \"modalDialogClass\"\n      },\n      outputs: {\n        dismissEvent: \"dismiss\"\n      },\n      ngContentSelectors: _c2,\n      decls: 4,\n      vars: 2,\n      consts: [[\"dialog\", \"\"], [\"role\", \"document\"], [1, \"modal-content\"]],\n      template: function NgbModalWindow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0)(2, \"div\", 2);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + ctx.fullscreenClass + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\") + (ctx.modalDialogClass ? \" \" + ctx.modalDialogClass : \"\"));\n        }\n      },\n      styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return NgbModalWindow;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbModalStack = /*#__PURE__*/(() => {\n  class NgbModalStack {\n    constructor() {\n      this._applicationRef = inject(ApplicationRef);\n      this._injector = inject(Injector);\n      this._environmentInjector = inject(EnvironmentInjector);\n      this._document = inject(DOCUMENT);\n      this._scrollBar = inject(ScrollBar);\n      this._activeWindowCmptHasChanged = new Subject();\n      this._ariaHiddenValues = new Map();\n      this._scrollBarRestoreFn = null;\n      this._modalRefs = [];\n      this._windowCmpts = [];\n      this._activeInstances = new EventEmitter();\n      const ngZone = inject(NgZone);\n      // Trap focus on active WindowCmpt\n      this._activeWindowCmptHasChanged.subscribe(() => {\n        if (this._windowCmpts.length) {\n          const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n          ngbFocusTrap(ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n          this._revertAriaHidden();\n          this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n        }\n      });\n    }\n    _restoreScrollBar() {\n      const scrollBarRestoreFn = this._scrollBarRestoreFn;\n      if (scrollBarRestoreFn) {\n        this._scrollBarRestoreFn = null;\n        scrollBarRestoreFn();\n      }\n    }\n    _hideScrollBar() {\n      if (!this._scrollBarRestoreFn) {\n        this._scrollBarRestoreFn = this._scrollBar.hide();\n      }\n    }\n    open(contentInjector, content, options) {\n      const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n      if (!containerEl) {\n        throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n      }\n      this._hideScrollBar();\n      const activeModal = new NgbActiveModal();\n      contentInjector = options.injector || contentInjector;\n      const environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n      const contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n      let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n      let windowCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n      let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n      this._registerModalRef(ngbModalRef);\n      this._registerWindowCmpt(windowCmptRef);\n      // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n      // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n      // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n      ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n        if (!this._modalRefs.length) {\n          this._document.body.classList.remove('modal-open');\n          this._restoreScrollBar();\n          this._revertAriaHidden();\n        }\n      }));\n      activeModal.close = result => {\n        ngbModalRef.close(result);\n      };\n      activeModal.dismiss = reason => {\n        ngbModalRef.dismiss(reason);\n      };\n      activeModal.update = options => {\n        ngbModalRef.update(options);\n      };\n      ngbModalRef.update(options);\n      if (this._modalRefs.length === 1) {\n        this._document.body.classList.add('modal-open');\n      }\n      if (backdropCmptRef && backdropCmptRef.instance) {\n        backdropCmptRef.changeDetectorRef.detectChanges();\n      }\n      windowCmptRef.changeDetectorRef.detectChanges();\n      return ngbModalRef;\n    }\n    get activeInstances() {\n      return this._activeInstances;\n    }\n    dismissAll(reason) {\n      this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason));\n    }\n    hasOpenModals() {\n      return this._modalRefs.length > 0;\n    }\n    _attachBackdrop(containerEl) {\n      let backdropCmptRef = createComponent(NgbModalBackdrop, {\n        environmentInjector: this._applicationRef.injector,\n        elementInjector: this._injector\n      });\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n      return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n      let windowCmptRef = createComponent(NgbModalWindow, {\n        environmentInjector: this._applicationRef.injector,\n        elementInjector: this._injector,\n        projectableNodes\n      });\n      this._applicationRef.attachView(windowCmptRef.hostView);\n      containerEl.appendChild(windowCmptRef.location.nativeElement);\n      return windowCmptRef;\n    }\n    _getContentRef(contentInjector, environmentInjector, content, activeModal, options) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        return this._createFromTemplateRef(content, activeModal);\n      } else if (isString(content)) {\n        return this._createFromString(content);\n      } else {\n        return this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n      }\n    }\n    _createFromTemplateRef(templateRef, activeModal) {\n      const context = {\n        $implicit: activeModal,\n        close(result) {\n          activeModal.close(result);\n        },\n        dismiss(reason) {\n          activeModal.dismiss(reason);\n        }\n      };\n      const viewRef = templateRef.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n      const component = this._document.createTextNode(`${content}`);\n      return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, environmentInjector, componentType, context, options) {\n      const elementInjector = Injector.create({\n        providers: [{\n          provide: NgbActiveModal,\n          useValue: context\n        }],\n        parent: contentInjector\n      });\n      const componentRef = createComponent(componentType, {\n        environmentInjector,\n        elementInjector\n      });\n      const componentNativeEl = componentRef.location.nativeElement;\n      if (options.scrollable) {\n        componentNativeEl.classList.add('component-host-scrollable');\n      }\n      this._applicationRef.attachView(componentRef.hostView);\n      // FIXME: we should here get rid of the component nativeElement\n      // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n      return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _setAriaHidden(element) {\n      const parent = element.parentElement;\n      if (parent && element !== this._document.body) {\n        Array.from(parent.children).forEach(sibling => {\n          if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n            this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n            sibling.setAttribute('aria-hidden', 'true');\n          }\n        });\n        this._setAriaHidden(parent);\n      }\n    }\n    _revertAriaHidden() {\n      this._ariaHiddenValues.forEach((value, element) => {\n        if (value) {\n          element.setAttribute('aria-hidden', value);\n        } else {\n          element.removeAttribute('aria-hidden');\n        }\n      });\n      this._ariaHiddenValues.clear();\n    }\n    _registerModalRef(ngbModalRef) {\n      const unregisterModalRef = () => {\n        const index = this._modalRefs.indexOf(ngbModalRef);\n        if (index > -1) {\n          this._modalRefs.splice(index, 1);\n          this._activeInstances.emit(this._modalRefs);\n        }\n      };\n      this._modalRefs.push(ngbModalRef);\n      this._activeInstances.emit(this._modalRefs);\n      ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    _registerWindowCmpt(ngbWindowCmpt) {\n      this._windowCmpts.push(ngbWindowCmpt);\n      this._activeWindowCmptHasChanged.next();\n      ngbWindowCmpt.onDestroy(() => {\n        const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n        if (index > -1) {\n          this._windowCmpts.splice(index, 1);\n          this._activeWindowCmptHasChanged.next();\n        }\n      });\n    }\n    static #_ = this.ɵfac = function NgbModalStack_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModalStack)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbModalStack,\n      factory: NgbModalStack.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbModalStack;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nlet NgbModal = /*#__PURE__*/(() => {\n  class NgbModal {\n    constructor() {\n      this._injector = inject(Injector);\n      this._modalStack = inject(NgbModalStack);\n      this._config = inject(NgbModalConfig);\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    open(content, options = {}) {\n      const combinedOptions = {\n        ...this._config,\n        animation: this._config.animation,\n        ...options\n      };\n      return this._modalStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active modal instances.\n     */\n    get activeInstances() {\n      return this._modalStack.activeInstances;\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason) {\n      this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals() {\n      return this._modalStack.hasOpenModals();\n    }\n    static #_ = this.ɵfac = function NgbModal_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModal)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbModal,\n      factory: NgbModal.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbModal;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbModalModule = /*#__PURE__*/(() => {\n  class NgbModalModule {\n    static #_ = this.ɵfac = function NgbModalModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModalModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbModalModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [NgbModal]\n    });\n  }\n  return NgbModalModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nlet NgbNavConfig = /*#__PURE__*/(() => {\n  class NgbNavConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.destroyOnHide = true;\n      this.orientation = 'horizontal';\n      this.roles = 'tablist';\n      this.keyboard = true;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbNavConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbNavConfig,\n      factory: NgbNavConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbNavConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst isValidNavId = id => isDefined(id) && id !== '';\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nlet NgbNavContent = /*#__PURE__*/(() => {\n  class NgbNavContent {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbNavContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavContent)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavContent,\n      selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n    });\n  }\n  return NgbNavContent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\nlet NgbNavItemRole = /*#__PURE__*/(() => {\n  class NgbNavItemRole {\n    constructor(role) {\n      this.role = role;\n      this.nav = inject(NgbNav);\n    }\n    static #_ = this.ɵfac = function NgbNavItemRole_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavItemRole)(i0.ɵɵinjectAttribute('role'));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavItemRole,\n      selectors: [[\"\", \"ngbNavItem\", \"\", 5, \"ng-container\"]],\n      hostVars: 1,\n      hostBindings: function NgbNavItemRole_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"presentation\" : undefined);\n        }\n      }\n    });\n  }\n  return NgbNavItemRole;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nlet NgbNavItem = /*#__PURE__*/(() => {\n  class NgbNavItem {\n    constructor() {\n      this._nav = inject(NgbNav);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      /**\n       * If `true`, the current nav item is disabled and can't be toggled by user.\n       *\n       * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n       */\n      this.disabled = false;\n      /**\n       * An event emitted when the fade in transition is finished on the related nav content\n       *\n       * @since 8.0.0\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event emitted when the fade out transition is finished on the related nav content\n       *\n       * @since 8.0.0\n       */\n      this.hidden = new EventEmitter();\n    }\n    ngOnInit() {\n      if (!isDefined(this.domId)) {\n        this.domId = `ngb-nav-${navCounter++}`;\n      }\n    }\n    get active() {\n      return this._nav.activeId === this.id;\n    }\n    get id() {\n      return isValidNavId(this._id) ? this._id : this.domId;\n    }\n    get panelDomId() {\n      return `${this.domId}-panel`;\n    }\n    isPanelInDom() {\n      return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n    /**\n     * @internal\n     */\n    isNgContainer() {\n      return this._nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n    static #_ = this.ɵfac = function NgbNavItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavItem)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavItem,\n      selectors: [[\"\", \"ngbNavItem\", \"\"]],\n      contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbNavContent, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTpl = _t.first);\n        }\n      },\n      hostAttrs: [1, \"nav-item\"],\n      inputs: {\n        destroyOnHide: \"destroyOnHide\",\n        disabled: \"disabled\",\n        domId: \"domId\",\n        _id: [0, \"ngbNavItem\", \"_id\"]\n      },\n      outputs: {\n        shown: \"shown\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbNavItem\"]\n    });\n  }\n  return NgbNavItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nlet NgbNav = /*#__PURE__*/(() => {\n  class NgbNav {\n    constructor(role) {\n      this.role = role;\n      this._config = inject(NgbNavConfig);\n      this._cd = inject(ChangeDetectorRef);\n      this._document = inject(DOCUMENT);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this.destroyRef = inject(DestroyRef);\n      this._navigatingWithKeyboard = false;\n      /**\n       * The event emitted after the active nav changes\n       * The payload of the event is the newly active nav id\n       *\n       * If you want to prevent nav change, you should use `(navChange)` event\n       */\n      this.activeIdChange = new EventEmitter();\n      /**\n       * If `true`, nav change will be animated.\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * If `true`, non-active nav content will be removed from DOM\n       * Otherwise it will just be hidden\n       */\n      this.destroyOnHide = this._config.destroyOnHide;\n      /**\n       * The orientation of navs.\n       *\n       * Using `vertical` will also add the `aria-orientation` attribute\n       */\n      this.orientation = this._config.orientation;\n      /**\n       * Role attribute generating strategy:\n       * - `false` - no role attributes will be generated\n       * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n       */\n      this.roles = this._config.roles;\n      /**\n       * Keyboard support for nav focus/selection using arrow keys.\n       *\n       * * `true` - navs will be focused using keyboard arrow keys\n       * * `false` - no keyboard support\n       * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\n       *\n       * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\n       *\n       * @since 6.1.0\n       */\n      this.keyboard = this._config.keyboard;\n      /**\n       * An event emitted when the fade in transition is finished for one of the items.\n       *\n       * Payload of the event is the nav id that was just shown.\n       *\n       * @since 8.0.0\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event emitted when the fade out transition is finished for one of the items.\n       *\n       * Payload of the event is the nav id that was just hidden.\n       *\n       * @since 8.0.0\n       */\n      this.hidden = new EventEmitter();\n      this.navItemChange$ = new Subject();\n      /**\n       * The nav change event emitted right before the nav change happens on user click.\n       *\n       * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n       *\n       * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n       */\n      this.navChange = new EventEmitter();\n    }\n    click(item) {\n      if (!item.disabled) {\n        this._updateActiveId(item.id);\n      }\n    }\n    onFocusout({\n      relatedTarget\n    }) {\n      if (!this._nativeElement.contains(relatedTarget)) {\n        this._navigatingWithKeyboard = false;\n      }\n    }\n    onKeyDown(event) {\n      if (this.roles !== 'tablist' || !this.keyboard) {\n        return;\n      }\n      const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n      const {\n        length\n      } = enabledLinks;\n      let position = -1;\n      enabledLinks.forEach((link, index) => {\n        if (link.nativeElement === this._document.activeElement) {\n          position = index;\n        }\n      });\n      if (length) {\n        switch (event.key) {\n          case 'ArrowUp':\n          case 'ArrowLeft':\n            position = (position - 1 + length) % length;\n            break;\n          case 'ArrowRight':\n          case 'ArrowDown':\n            position = (position + 1) % length;\n            break;\n          case 'Home':\n            position = 0;\n            break;\n          case 'End':\n            position = length - 1;\n            break;\n        }\n        if (this.keyboard === 'changeWithArrows') {\n          this.select(enabledLinks[position].navItem.id);\n        }\n        enabledLinks[position].nativeElement.focus();\n        this._navigatingWithKeyboard = true;\n        event.preventDefault();\n      }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    select(id) {\n      this._updateActiveId(id, false);\n    }\n    ngAfterContentInit() {\n      if (!isDefined(this.activeId)) {\n        const nextId = this.items.first ? this.items.first.id : null;\n        if (isValidNavId(nextId)) {\n          this._updateActiveId(nextId, false);\n          this._cd.detectChanges();\n        }\n      }\n      this.items.changes.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => this._notifyItemChanged(this.activeId));\n    }\n    ngOnChanges({\n      activeId\n    }) {\n      if (activeId && !activeId.firstChange) {\n        this._notifyItemChanged(activeId.currentValue);\n      }\n    }\n    _updateActiveId(nextId, emitNavChange = true) {\n      if (this.activeId !== nextId) {\n        let defaultPrevented = false;\n        if (emitNavChange) {\n          this.navChange.emit({\n            activeId: this.activeId,\n            nextId,\n            preventDefault: () => {\n              defaultPrevented = true;\n            }\n          });\n        }\n        if (!defaultPrevented) {\n          this.activeId = nextId;\n          this.activeIdChange.emit(nextId);\n          this._notifyItemChanged(nextId);\n        }\n      }\n    }\n    _notifyItemChanged(nextItemId) {\n      this.navItemChange$.next(this._getItemById(nextItemId));\n    }\n    _getItemById(itemId) {\n      return this.items && this.items.find(item => item.id === itemId) || null;\n    }\n    static #_ = this.ɵfac = function NgbNav_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNav)(i0.ɵɵinjectAttribute('role'));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNav,\n      selectors: [[\"\", \"ngbNav\", \"\"]],\n      contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbNavItem, 4);\n          i0.ɵɵcontentQuery(dirIndex, NgbNavLinkBase, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n        }\n      },\n      hostAttrs: [1, \"nav\"],\n      hostVars: 4,\n      hostBindings: function NgbNav_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          })(\"focusout\", function NgbNav_focusout_HostBindingHandler($event) {\n            return ctx.onFocusout($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n          i0.ɵɵclassProp(\"flex-column\", ctx.orientation === \"vertical\");\n        }\n      },\n      inputs: {\n        activeId: \"activeId\",\n        animation: \"animation\",\n        destroyOnHide: \"destroyOnHide\",\n        orientation: \"orientation\",\n        roles: \"roles\",\n        keyboard: \"keyboard\"\n      },\n      outputs: {\n        activeIdChange: \"activeIdChange\",\n        shown: \"shown\",\n        hidden: \"hidden\",\n        navChange: \"navChange\"\n      },\n      exportAs: [\"ngbNav\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbNav;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbNavLinkBase = /*#__PURE__*/(() => {\n  class NgbNavLinkBase {\n    constructor(role) {\n      this.role = role;\n      this.navItem = inject(NgbNavItem);\n      this.nav = inject(NgbNav);\n      this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    get tabindex() {\n      if (this.nav.keyboard === false) {\n        return this.navItem.disabled ? -1 : undefined;\n      }\n      if (this.nav._navigatingWithKeyboard) {\n        return -1;\n      }\n      return this.navItem.disabled || !this.navItem.active ? -1 : undefined;\n    }\n    static #_ = this.ɵfac = function NgbNavLinkBase_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavLinkBase)(i0.ɵɵinjectAttribute('role'));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavLinkBase,\n      selectors: [[\"\", \"ngbNavLink\", \"\"]],\n      hostAttrs: [1, \"nav-link\"],\n      hostVars: 12,\n      hostBindings: function NgbNavLinkBase_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.navItem.domId);\n          i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.tabindex)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n          i0.ɵɵclassProp(\"nav-item\", ctx.navItem.isNgContainer())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n        }\n      }\n    });\n  }\n  return NgbNavLinkBase;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to mark the nav link when used on a button element.\n */\nlet NgbNavLinkButton = /*#__PURE__*/(() => {\n  class NgbNavLinkButton extends NgbNavLinkBase {\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbNavLinkButton_BaseFactory;\n      return function NgbNavLinkButton_Factory(__ngFactoryType__) {\n        return (ɵNgbNavLinkButton_BaseFactory || (ɵNgbNavLinkButton_BaseFactory = i0.ɵɵgetInheritedFactory(NgbNavLinkButton)))(__ngFactoryType__ || NgbNavLinkButton);\n      };\n    })();\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavLinkButton,\n      selectors: [[\"button\", \"ngbNavLink\", \"\"]],\n      hostAttrs: [\"type\", \"button\"],\n      hostVars: 1,\n      hostBindings: function NgbNavLinkButton_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgbNavLinkButton_click_HostBindingHandler() {\n            return ctx.nav.click(ctx.navItem);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"disabled\", ctx.navItem.disabled);\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgbNavLinkButton;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\nlet NgbNavLink = /*#__PURE__*/(() => {\n  class NgbNavLink extends NgbNavLinkBase {\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbNavLink_BaseFactory;\n      return function NgbNavLink_Factory(__ngFactoryType__) {\n        return (ɵNgbNavLink_BaseFactory || (ɵNgbNavLink_BaseFactory = i0.ɵɵgetInheritedFactory(NgbNavLink)))(__ngFactoryType__ || NgbNavLink);\n      };\n    })();\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavLink,\n      selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n      hostAttrs: [\"href\", \"\"],\n      hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n            ctx.nav.click(ctx.navItem);\n            return $event.preventDefault();\n          });\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgbNavLink;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ngbNavFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => classList.remove('active');\n};\nconst ngbNavFadeInTransition = (element, animation) => {\n  if (animation) {\n    reflow(element);\n  }\n  element.classList.add('show');\n};\nlet NgbNavPane = /*#__PURE__*/(() => {\n  class NgbNavPane {\n    constructor() {\n      this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static #_ = this.ɵfac = function NgbNavPane_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavPane)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbNavPane,\n      selectors: [[\"\", \"ngbNavPane\", \"\"]],\n      hostAttrs: [1, \"tab-pane\"],\n      hostVars: 5,\n      hostBindings: function NgbNavPane_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.item.panelDomId);\n          i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", ctx.item.domId);\n          i0.ɵɵclassProp(\"fade\", ctx.nav.animation);\n        }\n      },\n      inputs: {\n        item: \"item\",\n        nav: \"nav\",\n        role: \"role\"\n      }\n    });\n  }\n  return NgbNavPane;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nlet NgbNavOutlet = /*#__PURE__*/(() => {\n  class NgbNavOutlet {\n    constructor() {\n      this._cd = inject(ChangeDetectorRef);\n      this._ngZone = inject(NgZone);\n      this._activePane = null;\n    }\n    isPanelTransitioning(item) {\n      return this._activePane?.item === item;\n    }\n    ngAfterViewInit() {\n      // initial display\n      this._updateActivePane();\n      // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n      this.nav.navItemChange$.pipe(takeUntilDestroyed(this.nav.destroyRef), startWith(this._activePane?.item || null), distinctUntilChanged(), skip(1)).subscribe(nextItem => {\n        const options = {\n          animation: this.nav.animation,\n          runningTransition: 'stop'\n        };\n        // next panel we're switching to will only appear in DOM after the change detection is done\n        // and `this._panes` will be updated\n        this._cd.detectChanges();\n        // fading out\n        if (this._activePane) {\n          ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n            const activeItem = this._activePane?.item;\n            this._activePane = this._getPaneForItem(nextItem);\n            // mark for check when transition finishes as outlet or parent containers might be OnPush\n            // without this the panes that have \"faded out\" will stay in DOM\n            this._cd.markForCheck();\n            // fading in\n            if (this._activePane) {\n              // we have to add the '.active' class before running the transition,\n              // because it should be in place before `ngbRunTransition` does `reflow()`\n              this._activePane.nativeElement.classList.add('active');\n              ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n                if (nextItem) {\n                  nextItem.shown.emit();\n                  this.nav.shown.emit(nextItem.id);\n                }\n              });\n            }\n            if (activeItem) {\n              activeItem.hidden.emit();\n              this.nav.hidden.emit(activeItem.id);\n            }\n          });\n        } else {\n          this._updateActivePane();\n        }\n      });\n    }\n    _updateActivePane() {\n      this._activePane = this._getActivePane();\n      this._activePane?.nativeElement.classList.add('show', 'active');\n    }\n    _getPaneForItem(item) {\n      return this._panes && this._panes.find(pane => pane.item === item) || null;\n    }\n    _getActivePane() {\n      return this._panes && this._panes.find(pane => pane.item.active) || null;\n    }\n    static #_ = this.ɵfac = function NgbNavOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavOutlet)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbNavOutlet,\n      selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n      viewQuery: function NgbNavOutlet_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NgbNavPane, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._panes = _t);\n        }\n      },\n      hostAttrs: [1, \"tab-content\"],\n      inputs: {\n        paneRole: \"paneRole\",\n        nav: [0, \"ngbNavOutlet\", \"nav\"]\n      },\n      attrs: _c10,\n      decls: 2,\n      vars: 0,\n      consts: [[\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgbNavOutlet_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵrepeaterCreate(0, NgbNavOutlet_For_1_Template, 1, 1, null, null, i0.ɵɵrepeaterTrackByIdentity);\n        }\n        if (rf & 2) {\n          i0.ɵɵrepeater(ctx.nav.items);\n        }\n      },\n      dependencies: [NgbNavPane, NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbNavOutlet;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkButton, NgbNavLinkBase, NgbNavOutlet, NgbNavPane];\nlet NgbNavModule = /*#__PURE__*/(() => {\n  class NgbNavModule {\n    static #_ = this.ɵfac = function NgbNavModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbNavModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbNavModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbNavModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nlet NgbPaginationConfig = /*#__PURE__*/(() => {\n  class NgbPaginationConfig {\n    constructor() {\n      this.disabled = false;\n      this.boundaryLinks = false;\n      this.directionLinks = true;\n      this.ellipses = true;\n      this.maxSize = 0;\n      this.pageSize = 10;\n      this.rotate = false;\n    }\n    static #_ = this.ɵfac = function NgbPaginationConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbPaginationConfig,\n      factory: NgbPaginationConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbPaginationConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationEllipsis = /*#__PURE__*/(() => {\n  class NgbPaginationEllipsis {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationEllipsis_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationEllipsis)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationEllipsis,\n      selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n    });\n  }\n  return NgbPaginationEllipsis;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationFirst = /*#__PURE__*/(() => {\n  class NgbPaginationFirst {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationFirst_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationFirst)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationFirst,\n      selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n    });\n  }\n  return NgbPaginationFirst;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationLast = /*#__PURE__*/(() => {\n  class NgbPaginationLast {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationLast_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationLast)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationLast,\n      selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n    });\n  }\n  return NgbPaginationLast;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationNext = /*#__PURE__*/(() => {\n  class NgbPaginationNext {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationNext_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationNext)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationNext,\n      selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n    });\n  }\n  return NgbPaginationNext;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationNumber = /*#__PURE__*/(() => {\n  class NgbPaginationNumber {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationNumber_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationNumber)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationNumber,\n      selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n    });\n  }\n  return NgbPaginationNumber;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nlet NgbPaginationPrevious = /*#__PURE__*/(() => {\n  class NgbPaginationPrevious {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationPrevious_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationPrevious)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationPrevious,\n      selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n    });\n  }\n  return NgbPaginationPrevious;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\nlet NgbPaginationPages = /*#__PURE__*/(() => {\n  class NgbPaginationPages {\n    constructor() {\n      this.templateRef = inject(TemplateRef);\n    }\n    static #_ = this.ɵfac = function NgbPaginationPages_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationPages)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPaginationPages,\n      selectors: [[\"ng-template\", \"ngbPaginationPages\", \"\"]]\n    });\n  }\n  return NgbPaginationPages;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nlet NgbPagination = /*#__PURE__*/(() => {\n  class NgbPagination {\n    constructor() {\n      this._config = inject(NgbPaginationConfig);\n      this.pageCount = 0;\n      this.pages = [];\n      /**\n       * If `true`, pagination links will be disabled.\n       */\n      this.disabled = this._config.disabled;\n      /**\n       * If `true`, the \"First\" and \"Last\" page links are shown.\n       */\n      this.boundaryLinks = this._config.boundaryLinks;\n      /**\n       * If `true`, the \"Next\" and \"Previous\" page links are shown.\n       */\n      this.directionLinks = this._config.directionLinks;\n      /**\n       * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n       */\n      this.ellipses = this._config.ellipses;\n      /**\n       * Whether to rotate pages when `maxSize` > number of pages.\n       *\n       * The current page always stays in the middle if `true`.\n       */\n      this.rotate = this._config.rotate;\n      /**\n       *  The maximum number of pages to display.\n       */\n      this.maxSize = this._config.maxSize;\n      /**\n       *  The current page.\n       *\n       *  Page numbers start with `1`.\n       */\n      this.page = 1;\n      /**\n       *  The number of items per page.\n       */\n      this.pageSize = this._config.pageSize;\n      /**\n       *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n       *\n       *  Event payload is the number of the newly selected page.\n       *\n       *  Page numbers start with `1`.\n       */\n      this.pageChange = new EventEmitter(true);\n      /**\n       * The pagination display size.\n       *\n       * Bootstrap currently supports small and large sizes.\n       *\n       * If the passed value is a string (ex. 'custom'), it will just add the `pagination-custom` css class\n       */\n      this.size = this._config.size;\n    }\n    hasPrevious() {\n      return this.page > 1;\n    }\n    hasNext() {\n      return this.page < this.pageCount;\n    }\n    nextDisabled() {\n      return !this.hasNext() || this.disabled;\n    }\n    previousDisabled() {\n      return !this.hasPrevious() || this.disabled;\n    }\n    selectPage(pageNumber) {\n      this._updatePages(pageNumber);\n    }\n    ngOnChanges(changes) {\n      this._updatePages(this.page);\n    }\n    isEllipsis(pageNumber) {\n      return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    _applyEllipses(start, end) {\n      if (this.ellipses) {\n        if (start > 0) {\n          // The first page will always be included. If the displayed range\n          // starts after the third page, then add ellipsis. But if the range\n          // starts on the third page, then add the second page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (start > 2) {\n            this.pages.unshift(-1);\n          } else if (start === 2) {\n            this.pages.unshift(2);\n          }\n          this.pages.unshift(1);\n        }\n        if (end < this.pageCount) {\n          // The last page will always be included. If the displayed range\n          // ends before the third-last page, then add ellipsis. But if the range\n          // ends on third-last page, then add the second-last page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (end < this.pageCount - 2) {\n            this.pages.push(-1);\n          } else if (end === this.pageCount - 2) {\n            this.pages.push(this.pageCount - 1);\n          }\n          this.pages.push(this.pageCount);\n        }\n      }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    _applyRotation() {\n      let start = 0;\n      let end = this.pageCount;\n      let leftOffset = Math.floor(this.maxSize / 2);\n      let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n      if (this.page <= leftOffset) {\n        // very beginning, no rotation -> [0..maxSize]\n        end = this.maxSize;\n      } else if (this.pageCount - this.page < leftOffset) {\n        // very end, no rotation -> [len-maxSize..len]\n        start = this.pageCount - this.maxSize;\n      } else {\n        // rotate\n        start = this.page - leftOffset - 1;\n        end = this.page + rightOffset;\n      }\n      return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    _applyPagination() {\n      let page = Math.ceil(this.page / this.maxSize) - 1;\n      let start = page * this.maxSize;\n      let end = start + this.maxSize;\n      return [start, end];\n    }\n    _setPageInRange(newPageNo) {\n      const prevPageNo = this.page;\n      this.page = getValueInRange(newPageNo, this.pageCount, 1);\n      if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n        this.pageChange.emit(this.page);\n      }\n    }\n    _updatePages(newPage) {\n      this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n      if (!isNumber(this.pageCount)) {\n        this.pageCount = 0;\n      }\n      // fill-in model needed to render pages\n      this.pages.length = 0;\n      for (let i = 1; i <= this.pageCount; i++) {\n        this.pages.push(i);\n      }\n      // set page within 1..max range\n      this._setPageInRange(newPage);\n      // apply maxSize if necessary\n      if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n        let start = 0;\n        let end = this.pageCount;\n        // either paginating or rotating page numbers\n        if (this.rotate) {\n          [start, end] = this._applyRotation();\n        } else {\n          [start, end] = this._applyPagination();\n        }\n        this.pages = this.pages.slice(start, end);\n        // adding ellipses\n        this._applyEllipses(start, end);\n      }\n    }\n    static #_ = this.ɵfac = function NgbPagination_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPagination)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbPagination,\n      selectors: [[\"ngb-pagination\"]],\n      contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgbPaginationPages, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPages = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"navigation\"],\n      inputs: {\n        disabled: \"disabled\",\n        boundaryLinks: \"boundaryLinks\",\n        directionLinks: \"directionLinks\",\n        ellipses: \"ellipses\",\n        rotate: \"rotate\",\n        collectionSize: \"collectionSize\",\n        maxSize: \"maxSize\",\n        page: \"page\",\n        pageSize: \"pageSize\",\n        size: \"size\"\n      },\n      outputs: {\n        pageChange: \"pageChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 20,\n      vars: 12,\n      consts: () => {\n        let i18n_12;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_12 = goog.getMsg(\"\\xAB\\xAB\");\n          i18n_12 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_12;\n        } else {\n          i18n_12 = $localize`:@@ngb.pagination.first:««`;\n        }\n        let i18n_13;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_13 = goog.getMsg(\"\\xAB\");\n          i18n_13 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_13;\n        } else {\n          i18n_13 = $localize`:@@ngb.pagination.previous:«`;\n        }\n        let i18n_14;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_14 = goog.getMsg(\"\\xBB\");\n          i18n_14 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_14;\n        } else {\n          i18n_14 = $localize`:@@ngb.pagination.next:»`;\n        }\n        let i18n_15;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_15 = goog.getMsg(\"\\xBB\\xBB\");\n          i18n_15 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_15;\n        } else {\n          i18n_15 = $localize`:@@ngb.pagination.last:»»`;\n        }\n        let i18n_16;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_16 = goog.getMsg(\"First\");\n          i18n_16 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_16;\n        } else {\n          i18n_16 = $localize`:@@ngb.pagination.first-aria:First`;\n        }\n        let i18n_17;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_17 = goog.getMsg(\"Previous\");\n          i18n_17 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_17;\n        } else {\n          i18n_17 = $localize`:@@ngb.pagination.previous-aria:Previous`;\n        }\n        let i18n_18;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_18 = goog.getMsg(\"Next\");\n          i18n_18 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_18;\n        } else {\n          i18n_18 = $localize`:@@ngb.pagination.next-aria:Next`;\n        }\n        let i18n_19;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_19 = goog.getMsg(\"Last\");\n          i18n_19 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_19;\n        } else {\n          i18n_19 = $localize`:@@ngb.pagination.last-aria:Last`;\n        }\n        return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"defaultPages\", \"\"], i18n_12, i18n_13, i18n_14, i18n_15, [1, \"page-item\", 3, \"disabled\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\"], [1, \"page-item\", 3, \"active\", \"disabled\"], [1, \"page-item\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_16, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_17, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_18, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_19, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n      },\n      template: function NgbPagination_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor)(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor)(10, NgbPagination_ng_template_10_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor)(12, NgbPagination_ng_template_12_Template, 2, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(14, \"ul\");\n          i0.ɵɵconditionalCreate(15, NgbPagination_Conditional_15_Template, 3, 9, \"li\", 11);\n          i0.ɵɵconditionalCreate(16, NgbPagination_Conditional_16_Template, 3, 8, \"li\", 11);\n          i0.ɵɵtemplate(17, NgbPagination_ng_template_17_Template, 0, 0, \"ng-template\", 12);\n          i0.ɵɵconditionalCreate(18, NgbPagination_Conditional_18_Template, 3, 9, \"li\", 11);\n          i0.ɵɵconditionalCreate(19, NgbPagination_Conditional_19_Template, 3, 9, \"li\", 11);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const defaultPages_r19 = i0.ɵɵreference(13);\n          i0.ɵɵadvance(14);\n          i0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.boundaryLinks ? 15 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.directionLinks ? 16 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.tplPages == null ? null : ctx.tplPages.templateRef) || defaultPages_r19)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(8, _c11, ctx.page, ctx.pages, ctx.disabled));\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.directionLinks ? 18 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.boundaryLinks ? 19 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbPagination;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_PAGINATION_DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\nlet NgbPaginationModule = /*#__PURE__*/(() => {\n  class NgbPaginationModule {\n    static #_ = this.ɵfac = function NgbPaginationModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPaginationModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbPaginationModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbPaginationModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ALIASES = {\n  hover: ['mouseenter', 'mouseleave'],\n  focus: ['focusin', 'focusout']\n};\nfunction parseTriggers(triggers) {\n  const trimmedTriggers = (triggers || '').trim();\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map(triggerPair => ALIASES[triggerPair[0]] || triggerPair);\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.includes('manual'));\n  if (manualTriggers.length > 1) {\n    throw `Triggers parse error: only one manual trigger is allowed`;\n  }\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw `Triggers parse error: manual trigger can't be mixed with other triggers`;\n  }\n  return manualTriggers.length ? [] : parsedTriggers;\n}\nfunction listenToTriggers(element, triggers, isOpenedFn, openFn, closeFn, openDelayMs = 0, closeDelayMs = 0, enterContent = EMPTY, leaveContent = EMPTY) {\n  const parsedTriggers = parseTriggers(triggers);\n  if (parsedTriggers.length === 0) {\n    return () => {};\n  }\n  const activeOpenTriggers = new Set();\n  const cleanupFns = [];\n  let timeout;\n  function addEventListener(name, listener) {\n    element.addEventListener(name, listener);\n    cleanupFns.push(() => element.removeEventListener(name, listener));\n  }\n  function withDelay(fn, delayMs) {\n    clearTimeout(timeout);\n    if (delayMs > 0) {\n      timeout = setTimeout(fn, delayMs);\n    } else {\n      fn();\n    }\n  }\n  for (const [openTrigger, closeTrigger] of parsedTriggers) {\n    if (!closeTrigger) {\n      addEventListener(openTrigger, () => isOpenedFn() ? withDelay(closeFn, closeDelayMs) : withDelay(openFn, openDelayMs));\n    } else {\n      addEventListener(openTrigger, () => {\n        activeOpenTriggers.add(openTrigger);\n        withDelay(() => activeOpenTriggers.size > 0 && openFn(), openDelayMs);\n      });\n      addEventListener(closeTrigger, () => {\n        activeOpenTriggers.delete(openTrigger);\n        withDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n      });\n    }\n    if (openTrigger === 'mouseenter' && closeTrigger === 'mouseleave' && closeDelayMs > 0) {\n      const enterContentSub = enterContent.subscribe(() => {\n        activeOpenTriggers.delete(openTrigger);\n        clearTimeout(timeout);\n      });\n      const leaveContentSub = leaveContent.subscribe(() => {\n        activeOpenTriggers.delete(openTrigger);\n        withDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n      });\n      cleanupFns.push(() => enterContentSub.unsubscribe(), () => leaveContentSub.unsubscribe());\n    }\n  }\n  cleanupFns.push(() => clearTimeout(timeout));\n  return () => cleanupFns.forEach(cleanupFn => cleanupFn());\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nlet NgbPopoverConfig = /*#__PURE__*/(() => {\n  class NgbPopoverConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.autoClose = true;\n      this.placement = 'auto';\n      this.popperOptions = options => options;\n      this.triggers = 'click';\n      this.disablePopover = false;\n      this.openDelay = 0;\n      this.closeDelay = 0;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbPopoverConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPopoverConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbPopoverConfig,\n      factory: NgbPopoverConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbPopoverConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextId$1 = 0;\nlet NgbPopoverWindow = /*#__PURE__*/(() => {\n  class NgbPopoverWindow {\n    isTitleTemplate() {\n      return this.title instanceof TemplateRef;\n    }\n    static #_ = this.ɵfac = function NgbPopoverWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPopoverWindow)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbPopoverWindow,\n      selectors: [[\"ngb-popover-window\"]],\n      hostAttrs: [\"role\", \"tooltip\", 2, \"position\", \"absolute\"],\n      hostVars: 5,\n      hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function NgbPopoverWindow_mouseenter_HostBindingHandler() {\n            return ctx.onMouseEnter();\n          })(\"mouseleave\", function NgbPopoverWindow_mouseleave_HostBindingHandler() {\n            return ctx.onMouseLeave();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.id);\n          i0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n          i0.ɵɵclassProp(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        title: \"title\",\n        id: \"id\",\n        popoverClass: \"popoverClass\",\n        context: \"context\",\n        onMouseEnter: \"onMouseEnter\",\n        onMouseLeave: \"onMouseLeave\"\n      },\n      ngContentSelectors: _c2,\n      decls: 4,\n      vars: 1,\n      consts: [[\"simpleTitle\", \"\"], [\"data-popper-arrow\", \"\", 1, \"popover-arrow\"], [1, \"popover-header\"], [1, \"popover-body\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgbPopoverWindow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"div\", 1);\n          i0.ɵɵconditionalCreate(1, NgbPopoverWindow_Conditional_1_Template, 4, 2, \"h3\", 2);\n          i0.ɵɵelementStart(2, \"div\", 3);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.title ? 1 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbPopoverWindow;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nlet NgbPopover = /*#__PURE__*/(() => {\n  class NgbPopover {\n    constructor() {\n      this._config = inject(NgbPopoverConfig);\n      /**\n       * If `true`, popover opening and closing will be animated.\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n       *\n       * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n       * * `false` - disables the autoClose feature (NB: triggers still apply)\n       * * `\"inside\"` - closes on inside clicks as well as Escape presses\n       * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n       * as well as `Escape` presses\n       *\n       * @since 3.0.0\n       */\n      this.autoClose = this._config.autoClose;\n      /**\n       * The preferred placement of the popover, among the [possible values](#/guides/positioning#api).\n       *\n       * The default order of preference is `\"auto\"`.\n       *\n       * Please see the [positioning overview](#/positioning) for more details.\n       */\n      this.placement = this._config.placement;\n      /**\n       * Allows to change default Popper options when positioning the popover.\n       * Receives current popper options and returns modified ones.\n       *\n       * @since 13.1.0\n       */\n      this.popperOptions = this._config.popperOptions;\n      /**\n       * Specifies events that should trigger the tooltip.\n       *\n       * Supports a space separated list of event names.\n       * For more details see the [triggers demo](#/components/popover/examples#triggers).\n       */\n      this.triggers = this._config.triggers;\n      /**\n       * A selector specifying the element the popover should be appended to.\n       *\n       * Currently only supports `body`.\n       */\n      this.container = this._config.container;\n      /**\n       * If `true`, popover is disabled and won't be displayed.\n       *\n       * @since 1.1.0\n       */\n      this.disablePopover = this._config.disablePopover;\n      /**\n       * An optional class applied to the popover window element.\n       *\n       * @since 2.2.0\n       */\n      this.popoverClass = this._config.popoverClass;\n      /**\n       * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n       *\n       * @since 4.1.0\n       */\n      this.openDelay = this._config.openDelay;\n      /**\n       * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n       *\n       * @since 4.1.0\n       */\n      this.closeDelay = this._config.closeDelay;\n      /**\n       * An event emitted when the popover opening animation has finished. Contains no payload.\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event emitted when the popover closing animation has finished. Contains no payload.\n       *\n       * At this point popover is not in the DOM anymore.\n       */\n      this.hidden = new EventEmitter();\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._ngZone = inject(NgZone);\n      this._document = inject(DOCUMENT);\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._injector = inject(Injector);\n      this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n      this._popupService = new PopupService(NgbPopoverWindow);\n      this._windowRef = null;\n      this._positioning = ngbPositioning();\n      this._mouseEnterPopover = new Subject();\n      this._mouseLeavePopover = new Subject();\n      this._opening = true;\n      this._transitioning = false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    open(context) {\n      if (!this._opening && this._transitioning) {\n        this._transitioning = false;\n        ngbCompleteTransition(this._windowRef.location.nativeElement);\n      }\n      if (!this._windowRef && !this._isDisabled()) {\n        // this type assertion is safe because otherwise _isDisabled would return true\n        const {\n          windowRef,\n          transition$\n        } = this._popupService.open(this.ngbPopover, context ?? this.popoverContext, this.animation);\n        this._opening = true;\n        this._transitioning = true;\n        this._windowRef = windowRef;\n        this._windowRef.setInput('animation', this.animation);\n        this._windowRef.setInput('title', this.popoverTitle);\n        this._windowRef.setInput('context', context ?? this.popoverContext);\n        this._windowRef.setInput('popoverClass', this.popoverClass);\n        this._windowRef.setInput('id', this._ngbPopoverWindowId);\n        this._windowRef.setInput('onMouseEnter', () => this._mouseEnterPopover.next());\n        this._windowRef.setInput('onMouseLeave', () => this._mouseLeavePopover.next());\n        this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbPopoverWindowId);\n        if (this.container === 'body') {\n          this._document.body.appendChild(this._windowRef.location.nativeElement);\n        }\n        // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening popover from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n        this._windowRef.changeDetectorRef.detectChanges();\n        // We need to mark for check, because popover won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the popover from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n        this._windowRef.changeDetectorRef.markForCheck();\n        // Setting up popper and scheduling updates when zone is stable\n        this._ngZone.runOutsideAngular(() => {\n          this._positioning.createPopper({\n            hostElement: this._getPositionTargetElement(),\n            targetElement: this._windowRef.location.nativeElement,\n            placement: this.placement,\n            baseClass: 'bs-popover',\n            updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 8])(options))\n          });\n          Promise.resolve().then(() => {\n            // This update is required for correct arrow placement\n            this._positioning.update();\n          });\n          this._afterRenderRef = afterEveryRender({\n            mixedReadWrite: () => {\n              this._positioning.update();\n            }\n          }, {\n            injector: this._injector\n          });\n        });\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n        transition$.subscribe(() => {\n          if (this._transitioning) {\n            this._transitioning = false;\n            this.shown.emit();\n          }\n        });\n      }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    close(animation = this.animation) {\n      if (this._opening && this._transitioning) {\n        this._transitioning = false;\n        ngbCompleteTransition(this._windowRef.location.nativeElement);\n      }\n      if (this._windowRef) {\n        this._getPositionTargetElement().removeAttribute('aria-describedby');\n        this._opening = false;\n        this._transitioning = true;\n        this._popupService.close(animation).subscribe(() => {\n          this._windowRef = null;\n          this._positioning.destroy();\n          this._afterRenderRef?.destroy();\n          if (this._transitioning) {\n            this._transitioning = false;\n            this.hidden.emit();\n          }\n          this._changeDetector.markForCheck();\n        });\n      }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n      return this._windowRef != null;\n    }\n    ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay, this._mouseEnterPopover, this._mouseLeavePopover);\n    }\n    ngOnChanges({\n      ngbPopover,\n      popoverTitle,\n      disablePopover,\n      popoverClass\n    }) {\n      if (popoverClass && this.isOpen()) {\n        this._windowRef.setInput('popoverClass', popoverClass.currentValue);\n      }\n      // close popover if title and content become empty, or disablePopover set to true\n      if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n        this.close();\n      }\n    }\n    ngOnDestroy() {\n      this.close(false);\n      // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n      this._unregisterListenersFn?.();\n    }\n    _isDisabled() {\n      return this.disablePopover ? true : !this.ngbPopover && !this.popoverTitle;\n    }\n    _getPositionTargetElement() {\n      return (isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) || this._nativeElement;\n    }\n    static #_ = this.ɵfac = function NgbPopover_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPopover)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbPopover,\n      selectors: [[\"\", \"ngbPopover\", \"\"]],\n      inputs: {\n        animation: \"animation\",\n        autoClose: \"autoClose\",\n        ngbPopover: \"ngbPopover\",\n        popoverTitle: \"popoverTitle\",\n        placement: \"placement\",\n        popperOptions: \"popperOptions\",\n        triggers: \"triggers\",\n        positionTarget: \"positionTarget\",\n        container: \"container\",\n        disablePopover: \"disablePopover\",\n        popoverClass: \"popoverClass\",\n        popoverContext: \"popoverContext\",\n        openDelay: \"openDelay\",\n        closeDelay: \"closeDelay\"\n      },\n      outputs: {\n        shown: \"shown\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbPopover\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbPopover;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbPopoverModule = /*#__PURE__*/(() => {\n  class NgbPopoverModule {\n    static #_ = this.ɵfac = function NgbPopoverModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbPopoverModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbPopoverModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbPopoverModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nlet NgbProgressbarConfig = /*#__PURE__*/(() => {\n  class NgbProgressbarConfig {\n    constructor() {\n      this.max = 100;\n      this.animated = false;\n      this.ariaLabel = 'progress bar';\n      this.striped = false;\n      this.showValue = false;\n    }\n    static #_ = this.ɵfac = function NgbProgressbarConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbProgressbarConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbProgressbarConfig,\n      factory: NgbProgressbarConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbProgressbarConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nlet NgbProgressbar = /*#__PURE__*/(() => {\n  class NgbProgressbar {\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max) {\n      this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n    get max() {\n      return this._max;\n    }\n    constructor() {\n      this._config = inject(NgbProgressbarConfig);\n      this.stacked = inject(NgbProgressbarStacked, {\n        optional: true\n      });\n      /**\n       * If `true`, the stripes on the progress bar are animated.\n       *\n       * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n       */\n      this.animated = this._config.animated;\n      /**\n       * The accessible progress bar name.\n       *\n       * @since 13.1.0\n       */\n      this.ariaLabel = this._config.ariaLabel;\n      /**\n       * If `true`, the progress bars will be displayed as striped.\n       */\n      this.striped = this._config.striped;\n      /**\n       * If `true`, the current percentage will be shown in the `xx%` format.\n       */\n      this.showValue = this._config.showValue;\n      /**\n       * Optional text variant type of the progress bar.\n       *\n       * Supports types based on Bootstrap background color variants, like:\n       *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n       *\n       * @since 5.2.0\n       */\n      this.textType = this._config.textType;\n      /**\n       * The type of the progress bar.\n       *\n       * Supports types based on Bootstrap background color variants, like:\n       *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n       */\n      this.type = this._config.type;\n      /**\n       * The current value for the progress bar.\n       *\n       * Should be in the `[0, max]` range.\n       */\n      this.value = 0;\n      /**\n       * The height of the progress bar.\n       *\n       * Accepts any valid CSS height values, ex. `\"2rem\"`\n       */\n      this.height = this._config.height;\n      this.max = this._config.max;\n    }\n    getValue() {\n      return getValueInRange(this.value, this.max);\n    }\n    getPercentValue() {\n      return 100 * this.getValue() / this.max;\n    }\n    static #_ = this.ɵfac = function NgbProgressbar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbProgressbar)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbProgressbar,\n      selectors: [[\"ngb-progressbar\"]],\n      hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", 1, \"progress\"],\n      hostVars: 7,\n      hostBindings: function NgbProgressbar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max)(\"aria-label\", ctx.ariaLabel);\n          i0.ɵɵstyleProp(\"width\", ctx.stacked ? ctx.getPercentValue() : null, \"%\")(\"height\", ctx.height);\n        }\n      },\n      inputs: {\n        max: \"max\",\n        animated: \"animated\",\n        ariaLabel: \"ariaLabel\",\n        striped: \"striped\",\n        showValue: \"showValue\",\n        textType: \"textType\",\n        type: \"type\",\n        value: \"value\",\n        height: \"height\"\n      },\n      ngContentSelectors: _c2,\n      decls: 3,\n      vars: 11,\n      consts: () => {\n        let i18n_20;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_20 = goog.getMsg(\"{$interpolation}\", {\n            \"interpolation\": \"\\uFFFD0\\uFFFD\"\n          }, {\n            original_code: {\n              \"interpolation\": \"{{ getValue() / max | percent }}\"\n            }\n          });\n          i18n_20 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_20;\n        } else {\n          i18n_20 = $localize`:@@ngb.progressbar.value:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n        }\n        return [i18n_20];\n      },\n      template: function NgbProgressbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵconditionalCreate(1, NgbProgressbar_Conditional_1_Template, 3, 3, \"span\");\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(i0.ɵɵinterpolate2(\"progress-bar\", ctx.type ? ctx.textType ? \" bg-\" + ctx.type : \" text-bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\"));\n          i0.ɵɵstyleProp(\"width\", !ctx.stacked ? ctx.getPercentValue() : null, \"%\");\n          i0.ɵɵclassProp(\"progress-bar-animated\", ctx.animated)(\"progress-bar-striped\", ctx.striped);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.showValue ? 1 : -1);\n        }\n      },\n      dependencies: [PercentPipe],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbProgressbar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that allow to stack progress bars.\n *\n * @since 16.0.0\n */\nlet NgbProgressbarStacked = /*#__PURE__*/(() => {\n  class NgbProgressbarStacked {\n    static #_ = this.ɵfac = function NgbProgressbarStacked_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbProgressbarStacked)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbProgressbarStacked,\n      selectors: [[\"ngb-progressbar-stacked\"]],\n      hostAttrs: [1, \"progress-stacked\"],\n      ngContentSelectors: _c2,\n      decls: 1,\n      vars: 0,\n      template: function NgbProgressbarStacked_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbProgressbarStacked;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbProgressbarModule = /*#__PURE__*/(() => {\n  class NgbProgressbarModule {\n    static #_ = this.ɵfac = function NgbProgressbarModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbProgressbarModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbProgressbarModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbProgressbarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nlet NgbRatingConfig = /*#__PURE__*/(() => {\n  class NgbRatingConfig {\n    constructor() {\n      this.max = 10;\n      this.readonly = false;\n      this.resettable = false;\n      this.tabindex = 0;\n    }\n    static #_ = this.ɵfac = function NgbRatingConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbRatingConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbRatingConfig,\n      factory: NgbRatingConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbRatingConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nlet NgbRating = /*#__PURE__*/(() => {\n  class NgbRating {\n    constructor() {\n      this.contexts = [];\n      this._config = inject(NgbRatingConfig);\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      /**\n       * If `true`, the rating can't be changed or focused.\n       */\n      this.disabled = false;\n      /**\n       * The maximal rating that can be given.\n       */\n      this.max = this._config.max;\n      /**\n       * If `true`, the rating can't be changed.\n       */\n      this.readonly = this._config.readonly;\n      /**\n       * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n       */\n      this.resettable = this._config.resettable;\n      /**\n       * Allows setting a custom rating tabindex.\n       * If the component is disabled, `tabindex` will still be set to `-1`.\n       *\n       * @since 13.1.0\n       */\n      this.tabindex = this._config.tabindex;\n      /**\n       * An event emitted when the user is hovering over a given rating.\n       *\n       * Event payload equals to the rating being hovered over.\n       */\n      this.hover = new EventEmitter();\n      /**\n       * An event emitted when the user stops hovering over a given rating.\n       *\n       * Event payload equals to the rating of the last item being hovered over.\n       */\n      this.leave = new EventEmitter();\n      /**\n       * An event emitted when the rating is changed.\n       *\n       * Event payload equals to the newly selected rating.\n       */\n      this.rateChange = new EventEmitter(true);\n      this.onChange = _ => {};\n      this.onTouched = () => {};\n    }\n    /**\n     * Allows to provide a function to set a custom aria-valuetext\n     *\n     * @since 14.1.0\n     */\n    ariaValueText(current, max) {\n      return `${current} out of ${max}`;\n    }\n    isInteractive() {\n      return !this.readonly && !this.disabled;\n    }\n    enter(value) {\n      if (this.isInteractive()) {\n        this._updateState(value);\n      }\n      this.hover.emit(value);\n    }\n    handleBlur() {\n      this.onTouched();\n    }\n    handleClick(value) {\n      if (this.isInteractive()) {\n        this.update(this.resettable && this.rate === value ? 0 : value);\n      }\n    }\n    handleKeyDown(event) {\n      switch (event.key) {\n        case 'ArrowDown':\n        case 'ArrowLeft':\n          this.update(this.rate - 1);\n          break;\n        case 'ArrowUp':\n        case 'ArrowRight':\n          this.update(this.rate + 1);\n          break;\n        case 'Home':\n          this.update(0);\n          break;\n        case 'End':\n          this.update(this.max);\n          break;\n        default:\n          return;\n      }\n      // note 'return' in default case\n      event.preventDefault();\n    }\n    ngOnChanges(changes) {\n      if (changes['rate']) {\n        this.update(this.rate);\n      }\n      if (changes['max']) {\n        this._updateMax();\n      }\n    }\n    ngOnInit() {\n      this._setupContexts();\n      this._updateState(this.rate);\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    reset() {\n      this.leave.emit(this.nextRate);\n      this._updateState(this.rate);\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    update(value, internalChange = true) {\n      const newRate = getValueInRange(value, this.max, 0);\n      if (this.isInteractive() && this.rate !== newRate) {\n        this.rate = newRate;\n        this.rateChange.emit(this.rate);\n      }\n      if (internalChange) {\n        this.onChange(this.rate);\n        this.onTouched();\n      }\n      this._updateState(this.rate);\n    }\n    writeValue(value) {\n      this.update(value, false);\n      this._changeDetectorRef.markForCheck();\n    }\n    _updateState(nextValue) {\n      this.nextRate = nextValue;\n      this.contexts.forEach((context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n    }\n    _updateMax() {\n      if (this.max > 0) {\n        this._setupContexts();\n        this.update(this.rate);\n      }\n    }\n    _setupContexts() {\n      this.contexts = Array.from({\n        length: this.max\n      }, (v, k) => ({\n        fill: 0,\n        index: k\n      }));\n    }\n    static #_ = this.ɵfac = function NgbRating_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbRating)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbRating,\n      selectors: [[\"ngb-rating\"]],\n      contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n      hostVars: 6,\n      hostBindings: function NgbRating_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n            return ctx.handleBlur();\n          })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n            return ctx.handleKeyDown($event);\n          })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n            return ctx.reset();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"tabindex\", ctx.disabled ? -1 : ctx.tabindex);\n          i0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText(ctx.nextRate, ctx.max))(\"aria-readonly\", ctx.readonly && !ctx.disabled ? true : null)(\"aria-disabled\", ctx.disabled ? true : null);\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        max: \"max\",\n        rate: \"rate\",\n        readonly: \"readonly\",\n        resettable: \"resettable\",\n        starTemplate: \"starTemplate\",\n        tabindex: \"tabindex\",\n        ariaValueText: \"ariaValueText\"\n      },\n      outputs: {\n        hover: \"hover\",\n        leave: \"leave\",\n        rateChange: \"rateChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbRating),\n        multi: true\n      }]), i0.ɵɵNgOnChangesFeature],\n      decls: 4,\n      vars: 0,\n      consts: [[\"t\", \"\"], [1, \"visually-hidden\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgbRating_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵrepeaterCreate(2, NgbRating_For_3_Template, 4, 5, null, null, i0.ɵɵrepeaterTrackByIdentity);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.contexts);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbRating;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbRatingModule = /*#__PURE__*/(() => {\n  class NgbRatingModule {\n    static #_ = this.ɵfac = function NgbRatingModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbRatingModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbRatingModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbRatingModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction toFragmentElement(container, id) {\n  if (!container || id == null) {\n    return null;\n  }\n  return isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\nfunction getOrderedFragments(container, fragments) {\n  const selector = [...fragments].map(({\n    id\n  }) => `#${CSS.escape(id)}`).join(',');\n  return Array.from(container.querySelectorAll(selector));\n}\nconst defaultProcessChanges = (state, changeActive, ctx) => {\n  const {\n    rootElement,\n    fragments,\n    scrollSpy,\n    options,\n    entries\n  } = state;\n  const orderedFragments = getOrderedFragments(rootElement, fragments);\n  if (!ctx.initialized) {\n    ctx.initialized = true;\n    ctx.gapFragment = null;\n    ctx.visibleFragments = new Set();\n    // special case when one of the fragments was pre-selected\n    const preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n    if (preSelectedFragment) {\n      scrollSpy.scrollTo(preSelectedFragment);\n      return;\n    }\n  }\n  for (const entry of entries) {\n    const {\n      isIntersecting,\n      target: fragment\n    } = entry;\n    // 1. an entry became visible\n    if (isIntersecting) {\n      // if we were in-between two elements, we have to clear it up\n      if (ctx.gapFragment) {\n        ctx.visibleFragments.delete(ctx.gapFragment);\n        ctx.gapFragment = null;\n      }\n      ctx.visibleFragments.add(fragment);\n    }\n    // 2. an entry became invisible\n    else {\n      ctx.visibleFragments.delete(fragment);\n      // nothing is visible anymore, but something just was actually\n      if (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n        // 2.1 scrolling down - keeping the same element\n        if (entry.boundingClientRect.top < entry.rootBounds.top) {\n          ctx.gapFragment = fragment;\n          ctx.visibleFragments.add(ctx.gapFragment);\n        }\n        // 2.2 scrolling up - getting the previous element\n        else {\n          // scrolling up and no more fragments above\n          if (fragment === orderedFragments[0]) {\n            ctx.gapFragment = null;\n            ctx.visibleFragments.clear();\n            changeActive('');\n            return;\n          }\n          // getting previous fragment\n          else {\n            const fragmentIndex = orderedFragments.indexOf(fragment);\n            ctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n            if (ctx.gapFragment) {\n              ctx.visibleFragments.add(ctx.gapFragment);\n            }\n          }\n        }\n      }\n    }\n  }\n  // getting the first visible element in the DOM order of the fragments\n  for (const fragment of orderedFragments) {\n    if (ctx.visibleFragments.has(fragment)) {\n      changeActive(fragment.id);\n      break;\n    }\n  }\n};\n\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\nlet NgbScrollSpyConfig = /*#__PURE__*/(() => {\n  class NgbScrollSpyConfig {\n    constructor() {\n      this.scrollBehavior = 'smooth';\n      this.processChanges = defaultProcessChanges;\n    }\n    static #_ = this.ɵfac = function NgbScrollSpyConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbScrollSpyConfig,\n      factory: NgbScrollSpyConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbScrollSpyConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MATCH_THRESHOLD = 3;\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\nlet NgbScrollSpyService = /*#__PURE__*/(() => {\n  class NgbScrollSpyService {\n    constructor() {\n      this._observer = null;\n      this._containerElement = null;\n      this._fragments = new Set();\n      this._preRegisteredFragments = new Set();\n      this._active$ = new Subject();\n      this._distinctActive$ = this._active$.pipe(distinctUntilChanged());\n      this._active = '';\n      this._config = inject(NgbScrollSpyConfig);\n      this._document = inject(DOCUMENT);\n      this._platformId = inject(PLATFORM_ID);\n      this._scrollBehavior = this._config.scrollBehavior;\n      this._diChangeDetectorRef = inject(ChangeDetectorRef, {\n        optional: true\n      });\n      this._changeDetectorRef = this._diChangeDetectorRef;\n      this._zone = inject(NgZone);\n      this._distinctActive$.pipe(takeUntilDestroyed()).subscribe(active => {\n        this._active = active;\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    /**\n     * Getter for the currently active fragment id. Returns empty string if none.\n     */\n    get active() {\n      return this._active;\n    }\n    /**\n     * An observable emitting the currently active fragment. Emits empty string if none.\n     */\n    get active$() {\n      return this._distinctActive$;\n    }\n    /**\n     * Starts the scrollspy service and observes specified fragments.\n     *\n     * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n     * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n     */\n    start(options) {\n      if (isPlatformBrowser(this._platformId)) {\n        this._cleanup();\n        const {\n          root,\n          rootMargin,\n          scrollBehavior,\n          threshold,\n          fragments,\n          changeDetectorRef,\n          processChanges\n        } = {\n          ...options\n        };\n        this._containerElement = root ?? this._document.documentElement;\n        this._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n        this._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n        const processChangesFn = processChanges ?? this._config.processChanges;\n        const context = {};\n        this._observer = new IntersectionObserver(entries => processChangesFn({\n          entries,\n          rootElement: this._containerElement,\n          fragments: this._fragments,\n          scrollSpy: this,\n          options: {\n            ...options\n          }\n        }, active => this._active$.next(active), context), {\n          root: root ?? this._document,\n          ...(rootMargin && {\n            rootMargin\n          }),\n          ...(threshold && {\n            threshold\n          })\n        });\n        // merging fragments added before starting and the ones passed as options\n        for (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n          this.observe(element);\n        }\n        this._preRegisteredFragments.clear();\n      }\n    }\n    /**\n     * Stops the service and unobserves all fragments.\n     */\n    stop() {\n      this._cleanup();\n      this._active$.next('');\n    }\n    /**\n     * Scrolls to a fragment, it must be known to the service and contained in the root element.\n     * An id or an element reference can be passed.\n     *\n     * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n     */\n    scrollTo(fragment, options) {\n      const {\n        behavior\n      } = {\n        behavior: this._scrollBehavior,\n        ...options\n      };\n      if (this._containerElement) {\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement) {\n          const heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n          this._containerElement.scrollTo({\n            top: heightPx,\n            behavior\n          });\n          let lastOffset = this._containerElement.scrollTop;\n          let matchCounter = 0;\n          // we should update the active section only after scrolling is finished\n          // and there is no clean way to do it at the moment\n          const containerElement = this._containerElement;\n          this._zone.runOutsideAngular(() => {\n            const updateActiveWhenScrollingIsFinished = () => {\n              const sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n              if (sameOffsetAsLastTime) {\n                matchCounter++;\n              } else {\n                matchCounter = 0;\n              }\n              if (!sameOffsetAsLastTime || sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD) {\n                lastOffset = containerElement.scrollTop;\n                requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n              } else {\n                this._zone.run(() => this._active$.next(fragmentElement.id));\n              }\n            };\n            requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n          });\n        }\n      }\n    }\n    /**\n     * Adds a fragment to observe. It must be contained in the root element.\n     * An id or an element reference can be passed.\n     */\n    observe(fragment) {\n      if (!this._observer) {\n        this._preRegisteredFragments.add(fragment);\n        return;\n      }\n      const fragmentElement = toFragmentElement(this._containerElement, fragment);\n      if (fragmentElement && !this._fragments.has(fragmentElement)) {\n        this._fragments.add(fragmentElement);\n        this._observer.observe(fragmentElement);\n      }\n    }\n    /**\n     * Unobserves a fragment.\n     * An id or an element reference can be passed.\n     */\n    unobserve(fragment) {\n      if (!this._observer) {\n        this._preRegisteredFragments.delete(fragment);\n        return;\n      }\n      const fragmentElement = toFragmentElement(this._containerElement, fragment);\n      if (fragmentElement) {\n        this._fragments.delete(fragmentElement);\n        // we're removing and re-adding all current fragments to recompute active one\n        this._observer.disconnect();\n        for (const fragment of this._fragments) {\n          this._observer.observe(fragment);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._cleanup();\n    }\n    _cleanup() {\n      this._fragments.clear();\n      this._observer?.disconnect();\n      this._changeDetectorRef = this._diChangeDetectorRef;\n      this._scrollBehavior = this._config.scrollBehavior;\n      this._observer = null;\n      this._containerElement = null;\n    }\n    static #_ = this.ɵfac = function NgbScrollSpyService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbScrollSpyService,\n      factory: NgbScrollSpyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbScrollSpyService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\nlet NgbScrollSpyItem = /*#__PURE__*/(() => {\n  class NgbScrollSpyItem {\n    constructor() {\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._scrollSpyMenu = inject(NgbScrollSpyMenu, {\n        optional: true\n      });\n      this._scrollSpyAPI = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n      this._destroyRef = inject(DestroyRef);\n      this._isActive = false;\n    }\n    /**\n     * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n     *\n     * Can be used like:\n     *  - `ngbScrollSpyItem=\"fragmentId\"`\n     *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n     *\n     *  As well as together with `[fragment]` and `[parent]` inputs.\n     */\n    set data(data) {\n      if (Array.isArray(data)) {\n        this._scrollSpyAPI = data[0];\n        this.fragment = data[1];\n        this.parent ??= data[2];\n      } else if (data instanceof NgbScrollSpy) {\n        this._scrollSpyAPI = data;\n      } else if (isString(data)) {\n        this.fragment = data;\n      }\n    }\n    ngOnInit() {\n      // if it is not a part of a bigger menu, it should handle activation itself\n      if (!this._scrollSpyMenu) {\n        this._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(active => {\n          if (active === this.fragment) {\n            this._activate();\n          } else {\n            this._deactivate();\n          }\n          this._changeDetector.markForCheck();\n        });\n      }\n    }\n    /**\n     * @internal\n     */\n    _activate() {\n      this._isActive = true;\n      if (this._scrollSpyMenu) {\n        this._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n      }\n    }\n    /**\n     * @internal\n     */\n    _deactivate() {\n      this._isActive = false;\n      if (this._scrollSpyMenu) {\n        this._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n      }\n    }\n    /**\n     * Returns `true`, if the associated fragment is active.\n     */\n    isActive() {\n      return this._isActive;\n    }\n    /**\n     * Scrolls to the associated fragment.\n     */\n    scrollTo(options) {\n      this._scrollSpyAPI.scrollTo(this.fragment, options);\n    }\n    static #_ = this.ɵfac = function NgbScrollSpyItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyItem)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbScrollSpyItem,\n      selectors: [[\"\", \"ngbScrollSpyItem\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NgbScrollSpyItem_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgbScrollSpyItem_click_HostBindingHandler() {\n            return ctx.scrollTo();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"active\", ctx.isActive());\n        }\n      },\n      inputs: {\n        data: [0, \"ngbScrollSpyItem\", \"data\"],\n        fragment: \"fragment\",\n        parent: \"parent\"\n      },\n      exportAs: [\"ngbScrollSpyItem\"]\n    });\n  }\n  return NgbScrollSpyItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\nlet NgbScrollSpyMenu = /*#__PURE__*/(() => {\n  class NgbScrollSpyMenu {\n    constructor() {\n      this._scrollSpyRef = inject(NgbScrollSpyService);\n      this._destroyRef = inject(DestroyRef);\n      this._map = new Map();\n      this._lastActiveItem = null;\n    }\n    set scrollSpy(scrollSpy) {\n      this._scrollSpyRef = scrollSpy;\n    }\n    get active() {\n      return this._scrollSpyRef.active;\n    }\n    get active$() {\n      return this._scrollSpyRef.active$;\n    }\n    scrollTo(fragment, options) {\n      this._scrollSpyRef.scrollTo(fragment, options);\n    }\n    getItem(id) {\n      return this._map.get(id);\n    }\n    ngAfterViewInit() {\n      this._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n      this._rebuildMap();\n      this._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(activeId => {\n        this._lastActiveItem?._deactivate();\n        const item = this._map.get(activeId);\n        if (item) {\n          item._activate();\n          this._lastActiveItem = item;\n        }\n      });\n    }\n    _rebuildMap() {\n      this._map.clear();\n      for (let item of this._items) {\n        this._map.set(item.fragment, item);\n      }\n    }\n    static #_ = this.ɵfac = function NgbScrollSpyMenu_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyMenu)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbScrollSpyMenu,\n      selectors: [[\"\", \"ngbScrollSpyMenu\", \"\"]],\n      contentQueries: function NgbScrollSpyMenu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbScrollSpyItem, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      inputs: {\n        scrollSpy: [0, \"ngbScrollSpyMenu\", \"scrollSpy\"]\n      }\n    });\n  }\n  return NgbScrollSpyMenu;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\nlet NgbScrollSpy = /*#__PURE__*/(() => {\n  class NgbScrollSpy {\n    constructor() {\n      this._initialFragment = null;\n      this._service = inject(NgbScrollSpyService);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      /**\n       * An event raised when the active section changes.\n       *\n       * Payload is the id of the new active section, empty string if none.\n       */\n      this.activeChange = this._service.active$;\n    }\n    set active(fragment) {\n      this._initialFragment = fragment;\n      this.scrollTo(fragment);\n    }\n    /**\n     * Getter/setter for the currently active fragment id.\n     */\n    get active() {\n      return this._service.active;\n    }\n    /**\n     * Returns an observable that emits currently active section id.\n     */\n    get active$() {\n      return this._service.active$;\n    }\n    ngAfterViewInit() {\n      this._service.start({\n        processChanges: this.processChanges,\n        root: this._nativeElement,\n        rootMargin: this.rootMargin,\n        threshold: this.threshold,\n        ...(this._initialFragment && {\n          initialFragment: this._initialFragment\n        })\n      });\n    }\n    /**\n     * @internal\n     */\n    _registerFragment(fragment) {\n      this._service.observe(fragment.id);\n    }\n    /**\n     * @internal\n     */\n    _unregisterFragment(fragment) {\n      this._service.unobserve(fragment.id);\n    }\n    /**\n     * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n     * An id or an element reference can be passed.\n     */\n    scrollTo(fragment, options) {\n      this._service.scrollTo(fragment, {\n        ...(this.scrollBehavior && {\n          behavior: this.scrollBehavior\n        }),\n        ...options\n      });\n    }\n    static #_ = this.ɵfac = function NgbScrollSpy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpy)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbScrollSpy,\n      selectors: [[\"\", \"ngbScrollSpy\", \"\"]],\n      hostAttrs: [\"tabindex\", \"0\", 2, \"overflow-y\", \"auto\"],\n      inputs: {\n        processChanges: \"processChanges\",\n        rootMargin: \"rootMargin\",\n        scrollBehavior: \"scrollBehavior\",\n        threshold: \"threshold\",\n        active: \"active\"\n      },\n      outputs: {\n        activeChange: \"activeChange\"\n      },\n      exportAs: [\"ngbScrollSpy\"],\n      features: [i0.ɵɵProvidersFeature([NgbScrollSpyService])]\n    });\n  }\n  return NgbScrollSpy;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\nlet NgbScrollSpyFragment = /*#__PURE__*/(() => {\n  class NgbScrollSpyFragment {\n    constructor() {\n      this._destroyRef = inject(DestroyRef);\n      this._scrollSpy = inject(NgbScrollSpy);\n    }\n    ngAfterViewInit() {\n      this._scrollSpy._registerFragment(this);\n      this._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n    }\n    static #_ = this.ɵfac = function NgbScrollSpyFragment_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyFragment)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbScrollSpyFragment,\n      selectors: [[\"\", \"ngbScrollSpyFragment\", \"\"]],\n      hostVars: 1,\n      hostBindings: function NgbScrollSpyFragment_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: [0, \"ngbScrollSpyFragment\", \"id\"]\n      }\n    });\n  }\n  return NgbScrollSpyFragment;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbScrollSpyModule = /*#__PURE__*/(() => {\n  class NgbScrollSpyModule {\n    static #_ = this.ɵfac = function NgbScrollSpyModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbScrollSpyModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbScrollSpyModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbScrollSpyModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass NgbTime {\n  constructor(hour, minute, second) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n  changeHour(step = 1) {\n    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n  }\n  updateHour(hour) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n  changeMinute(step = 1) {\n    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n  }\n  updateMinute(minute) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n  changeSecond(step = 1) {\n    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n  }\n  updateSecond(second) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n  toString() {\n    return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n  }\n}\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nlet NgbTimepickerConfig = /*#__PURE__*/(() => {\n  class NgbTimepickerConfig {\n    constructor() {\n      this.meridian = false;\n      this.spinners = true;\n      this.seconds = false;\n      this.hourStep = 1;\n      this.minuteStep = 1;\n      this.secondStep = 1;\n      this.disabled = false;\n      this.readonlyInputs = false;\n      this.size = 'medium';\n    }\n    static #_ = this.ɵfac = function NgbTimepickerConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTimepickerConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTimepickerConfig,\n      factory: NgbTimepickerConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbTimepickerConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nlet NgbTimeAdapter = /*#__PURE__*/(() => {\n  class NgbTimeAdapter {\n    static #_ = this.ɵfac = function NgbTimeAdapter_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTimeAdapter)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTimeAdapter,\n      factory: () => NGB_DATEPICKER_TIME_ADAPTER_FACTORY(),\n      providedIn: 'root'\n    });\n  }\n  return NgbTimeAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTimeStructAdapter = /*#__PURE__*/(() => {\n  class NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbTimeStructAdapter_BaseFactory;\n      return function NgbTimeStructAdapter_Factory(__ngFactoryType__) {\n        return (ɵNgbTimeStructAdapter_BaseFactory || (ɵNgbTimeStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbTimeStructAdapter)))(__ngFactoryType__ || NgbTimeStructAdapter);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTimeStructAdapter,\n      factory: NgbTimeStructAdapter.ɵfac\n    });\n  }\n  return NgbTimeStructAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nlet NgbTimepickerI18n = /*#__PURE__*/(() => {\n  class NgbTimepickerI18n {\n    static #_ = this.ɵfac = function NgbTimepickerI18n_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTimepickerI18n)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTimepickerI18n,\n      factory: () => (() => new NgbTimepickerI18nDefault())(),\n      providedIn: 'root'\n    });\n  }\n  return NgbTimepickerI18n;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTimepickerI18nDefault = /*#__PURE__*/(() => {\n  class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    constructor() {\n      super(...arguments);\n      this._locale = inject(LOCALE_ID);\n      this._periods = [formatDate(new Date(3600000), 'a', this._locale, 'UTC'), formatDate(new Date(3600000 * 13), 'a', this._locale, 'UTC')];\n    }\n    getMorningPeriod() {\n      return this._periods[0];\n    }\n    getAfternoonPeriod() {\n      return this._periods[1];\n    }\n    static #_ = this.ɵfac = /* @__PURE__ */(() => {\n      let ɵNgbTimepickerI18nDefault_BaseFactory;\n      return function NgbTimepickerI18nDefault_Factory(__ngFactoryType__) {\n        return (ɵNgbTimepickerI18nDefault_BaseFactory || (ɵNgbTimepickerI18nDefault_BaseFactory = i0.ɵɵgetInheritedFactory(NgbTimepickerI18nDefault)))(__ngFactoryType__ || NgbTimepickerI18nDefault);\n      };\n    })();\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTimepickerI18nDefault,\n      factory: NgbTimepickerI18nDefault.ɵfac\n    });\n  }\n  return NgbTimepickerI18nDefault;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nlet NgbTimepicker = /*#__PURE__*/(() => {\n  class NgbTimepicker {\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step) {\n      this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    get hourStep() {\n      return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step) {\n      this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    get minuteStep() {\n      return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step) {\n      this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    get secondStep() {\n      return this._secondStep;\n    }\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n      this._config = _config;\n      this._ngbTimeAdapter = _ngbTimeAdapter;\n      this._cd = _cd;\n      this.i18n = i18n;\n      this.onChange = _ => {};\n      this.onTouched = () => {};\n      this.meridian = _config.meridian;\n      this.spinners = _config.spinners;\n      this.seconds = _config.seconds;\n      this.hourStep = _config.hourStep;\n      this.minuteStep = _config.minuteStep;\n      this.secondStep = _config.secondStep;\n      this.disabled = _config.disabled;\n      this.readonlyInputs = _config.readonlyInputs;\n      this.size = _config.size;\n    }\n    writeValue(value) {\n      const structValue = this._ngbTimeAdapter.fromModel(value);\n      this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n      if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n        this.model.second = 0;\n      }\n      this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * Increments the hours by the given step.\n     */\n    changeHour(step) {\n      this.model?.changeHour(step);\n      this.propagateModelChange();\n    }\n    /**\n     * Increments the minutes by the given step.\n     */\n    changeMinute(step) {\n      this.model?.changeMinute(step);\n      this.propagateModelChange();\n    }\n    /**\n     * Increments the seconds by the given step.\n     */\n    changeSecond(step) {\n      this.model?.changeSecond(step);\n      this.propagateModelChange();\n    }\n    /**\n     * Update hours with the new value.\n     */\n    updateHour(newVal) {\n      const isPM = this.model ? this.model.hour >= 12 : false;\n      const enteredHour = toInteger(newVal);\n      if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n        this.model?.updateHour(enteredHour + 12);\n      } else {\n        this.model?.updateHour(enteredHour);\n      }\n      this.propagateModelChange();\n    }\n    /**\n     * Update minutes with the new value.\n     */\n    updateMinute(newVal) {\n      this.model?.updateMinute(toInteger(newVal));\n      this.propagateModelChange();\n    }\n    /**\n     * Update seconds with the new value.\n     */\n    updateSecond(newVal) {\n      this.model?.updateSecond(toInteger(newVal));\n      this.propagateModelChange();\n    }\n    toggleMeridian() {\n      if (this.model && isNumber(this.model.hour) && this.meridian) {\n        this.changeHour(12);\n      }\n    }\n    formatInput(input) {\n      input.value = input.value.replace(FILTER_REGEX, '');\n    }\n    formatHour(value) {\n      if (isNumber(value)) {\n        if (this.meridian) {\n          return padNumber(value % 12 === 0 ? 12 : value % 12);\n        } else {\n          return padNumber(value % 24);\n        }\n      } else {\n        return padNumber(NaN);\n      }\n    }\n    formatMinSec(value) {\n      return padNumber(isNumber(value) ? value : NaN);\n    }\n    handleBlur() {\n      this.onTouched();\n    }\n    get isSmallSize() {\n      return this.size === 'small';\n    }\n    get isLargeSize() {\n      return this.size === 'large';\n    }\n    ngOnChanges(changes) {\n      if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n        this.model.second = 0;\n        this.propagateModelChange(false);\n      }\n    }\n    propagateModelChange(touched = true) {\n      if (touched) {\n        this.onTouched();\n      }\n      if (this.model?.isValid(this.seconds)) {\n        this.onChange(this._ngbTimeAdapter.toModel({\n          hour: this.model.hour,\n          minute: this.model.minute,\n          second: this.model.second\n        }));\n      } else {\n        this.onChange(this._ngbTimeAdapter.toModel(null));\n      }\n    }\n    static #_ = this.ɵfac = function NgbTimepicker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTimepicker)(i0.ɵɵdirectiveInject(NgbTimepickerConfig), i0.ɵɵdirectiveInject(NgbTimeAdapter), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbTimepickerI18n));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbTimepicker,\n      selectors: [[\"ngb-timepicker\"]],\n      inputs: {\n        meridian: \"meridian\",\n        spinners: \"spinners\",\n        seconds: \"seconds\",\n        hourStep: \"hourStep\",\n        minuteStep: \"minuteStep\",\n        secondStep: \"secondStep\",\n        readonlyInputs: \"readonlyInputs\",\n        size: \"size\"\n      },\n      exportAs: [\"ngbTimepicker\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTimepicker),\n        multi: true\n      }]), i0.ɵɵNgOnChangesFeature],\n      decls: 14,\n      vars: 23,\n      consts: () => {\n        let i18n_21;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_21 = goog.getMsg(\"HH\");\n          i18n_21 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_21;\n        } else {\n          i18n_21 = $localize`:@@ngb.timepicker.HH:HH`;\n        }\n        let i18n_22;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_22 = goog.getMsg(\"Hours\");\n          i18n_22 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_22;\n        } else {\n          i18n_22 = $localize`:@@ngb.timepicker.hours:Hours`;\n        }\n        let i18n_23;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_23 = goog.getMsg(\"MM\");\n          i18n_23 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_23;\n        } else {\n          i18n_23 = $localize`:@@ngb.timepicker.MM:MM`;\n        }\n        let i18n_24;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_24 = goog.getMsg(\"Minutes\");\n          i18n_24 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_24;\n        } else {\n          i18n_24 = $localize`:@@ngb.timepicker.minutes:Minutes`;\n        }\n        let i18n_25;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_25 = goog.getMsg(\"Increment hours\");\n          i18n_25 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_25;\n        } else {\n          i18n_25 = $localize`:@@ngb.timepicker.increment-hours:Increment hours`;\n        }\n        let i18n_26;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_26 = goog.getMsg(\"Decrement hours\");\n          i18n_26 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_26;\n        } else {\n          i18n_26 = $localize`:@@ngb.timepicker.decrement-hours:Decrement hours`;\n        }\n        let i18n_27;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_27 = goog.getMsg(\"Increment minutes\");\n          i18n_27 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_27;\n        } else {\n          i18n_27 = $localize`:@@ngb.timepicker.increment-minutes:Increment minutes`;\n        }\n        let i18n_28;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_28 = goog.getMsg(\"Decrement minutes\");\n          i18n_28 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_28;\n        } else {\n          i18n_28 = $localize`:@@ngb.timepicker.decrement-minutes:Decrement minutes`;\n        }\n        let i18n_29;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_29 = goog.getMsg(\"SS\");\n          i18n_29 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_29;\n        } else {\n          i18n_29 = $localize`:@@ngb.timepicker.SS:SS`;\n        }\n        let i18n_30;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_30 = goog.getMsg(\"Seconds\");\n          i18n_30 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_30;\n        } else {\n          i18n_30 = $localize`:@@ngb.timepicker.seconds:Seconds`;\n        }\n        let i18n_31;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_31 = goog.getMsg(\"Increment seconds\");\n          i18n_31 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_31;\n        } else {\n          i18n_31 = $localize`:@@ngb.timepicker.increment-seconds:Increment seconds`;\n        }\n        let i18n_32;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_32 = goog.getMsg(\"Decrement seconds\");\n          i18n_32 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_32;\n        } else {\n          i18n_32 = $localize`:@@ngb.timepicker.decrement-seconds:Decrement seconds`;\n        }\n        let i18n_33;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_33 = goog.getMsg(\"{$interpolation}\", {\n            \"interpolation\": \"\\uFFFD0\\uFFFD\"\n          }, {\n            original_code: {\n              \"interpolation\": \"{{ i18n.getAfternoonPeriod() }}\"\n            }\n          });\n          i18n_33 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_33;\n        } else {\n          i18n_33 = $localize`:@@ngb.timepicker.PM:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n        }\n        return [i18n_25, i18n_26, i18n_27, i18n_28, i18n_31, i18n_32, i18n_33, [3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_21, \"aria-label\", i18n_22, 1, \"ngb-tp-input\", \"form-control\", 3, \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"value\", \"readOnly\", \"disabled\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_23, \"aria-label\", i18n_24, 1, \"ngb-tp-input\", \"form-control\", 3, \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"value\", \"readOnly\", \"disabled\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"click\", \"disabled\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"visually-hidden\"], [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_29, \"aria-label\", i18n_30, 1, \"ngb-tp-input\", \"form-control\", 3, \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"value\", \"readOnly\", \"disabled\"], [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\", \"disabled\"]];\n      },\n      template: function NgbTimepicker_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"fieldset\", 7)(1, \"div\", 8)(2, \"div\", 9);\n          i0.ɵɵconditionalCreate(3, NgbTimepicker_Conditional_3_Template, 4, 7, \"button\", 10);\n          i0.ɵɵelementStart(4, \"input\", 11);\n          i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n            return ctx.updateHour($event.target.value);\n          })(\"blur\", function NgbTimepicker_Template_input_blur_4_listener() {\n            return ctx.handleBlur();\n          })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n            return ctx.formatInput($event.target);\n          })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n            ctx.changeHour(ctx.hourStep);\n            return $event.preventDefault();\n          })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n            ctx.changeHour(-ctx.hourStep);\n            return $event.preventDefault();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(5, NgbTimepicker_Conditional_5_Template, 4, 7, \"button\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 12);\n          i0.ɵɵtext(7, \":\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 13);\n          i0.ɵɵconditionalCreate(9, NgbTimepicker_Conditional_9_Template, 4, 7, \"button\", 10);\n          i0.ɵɵelementStart(10, \"input\", 14);\n          i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n            return ctx.updateMinute($event.target.value);\n          })(\"blur\", function NgbTimepicker_Template_input_blur_10_listener() {\n            return ctx.handleBlur();\n          })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n            return ctx.formatInput($event.target);\n          })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n            ctx.changeMinute(ctx.minuteStep);\n            return $event.preventDefault();\n          })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n            ctx.changeMinute(-ctx.minuteStep);\n            return $event.preventDefault();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(11, NgbTimepicker_Conditional_11_Template, 4, 7, \"button\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(12, NgbTimepicker_Conditional_12_Template, 6, 9);\n          i0.ɵɵconditionalCreate(13, NgbTimepicker_Conditional_13_Template, 5, 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n          i0.ɵɵproperty(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(ctx.spinners ? 3 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n          i0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.spinners ? 5 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(ctx.spinners ? 9 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n          i0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.spinners ? 11 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.seconds ? 12 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.meridian ? 13 : -1);\n        }\n      },\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return NgbTimepicker;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTimepickerModule = /*#__PURE__*/(() => {\n  class NgbTimepickerModule {\n    static #_ = this.ɵfac = function NgbTimepickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTimepickerModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbTimepickerModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbTimepickerModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nlet NgbToastConfig = /*#__PURE__*/(() => {\n  class NgbToastConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.autohide = true;\n      this.delay = 5000;\n      this.ariaLive = 'polite';\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbToastConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbToastConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbToastConfig,\n      factory: NgbToastConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbToastConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ngbToastFadeInTransition = (element, animation) => {\n  const {\n    classList\n  } = element;\n  if (animation) {\n    classList.add('fade');\n  } else {\n    classList.add('show');\n    return;\n  }\n  reflow(element);\n  classList.add('show', 'showing');\n  return () => {\n    classList.remove('showing');\n  };\n};\nconst ngbToastFadeOutTransition = ({\n  classList\n}) => {\n  classList.add('showing');\n  return () => {\n    classList.remove('show', 'showing');\n  };\n};\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nlet NgbToastHeader = /*#__PURE__*/(() => {\n  class NgbToastHeader {\n    static #_ = this.ɵfac = function NgbToastHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbToastHeader)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbToastHeader,\n      selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n    });\n  }\n  return NgbToastHeader;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nlet NgbToast = /*#__PURE__*/(() => {\n  class NgbToast {\n    constructor(ariaLive) {\n      this.ariaLive = ariaLive;\n      this._config = inject(NgbToastConfig);\n      this._zone = inject(NgZone);\n      this._injector = inject(Injector);\n      this._element = inject(ElementRef);\n      /**\n       * If `true`, toast opening and closing will be animated.\n       *\n       * Animation is triggered only when the `.hide()` or `.show()` functions are called\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * Delay after which the toast will hide (ms).\n       * default: `500` (ms) (inherited from NgbToastConfig)\n       */\n      this.delay = this._config.delay;\n      /**\n       * Auto hide the toast after a delay in ms.\n       * default: `true` (inherited from NgbToastConfig)\n       */\n      this.autohide = this._config.autohide;\n      /**\n       * A template like `<ng-template ngbToastHeader></ng-template>` can be\n       * used in the projected content to allow markup usage.\n       */\n      this.contentHeaderTpl = null;\n      /**\n       * An event fired after the animation triggered by calling `.show()` method has finished.\n       *\n       * @since 8.0.0\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event fired after the animation triggered by calling `.hide()` method has finished.\n       *\n       * It can only occur in 2 different scenarios:\n       * - `autohide` timeout fires\n       * - user clicks on a closing cross\n       *\n       * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n       * to the user to take care of that.\n       *\n       * @since 8.0.0\n       */\n      this.hidden = new EventEmitter();\n      this.ariaLive ??= this._config.ariaLive;\n    }\n    ngAfterContentInit() {\n      afterNextRender({\n        mixedReadWrite: () => {\n          this._init();\n          this.show();\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnChanges(changes) {\n      if ('autohide' in changes) {\n        this._clearTimeout();\n        this._init();\n      }\n    }\n    /**\n     * Triggers toast closing programmatically.\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(hidden)` output\n     *\n     * @since 8.0.0\n     */\n    hide() {\n      this._clearTimeout();\n      const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n        animation: this.animation,\n        runningTransition: 'stop'\n      });\n      transition.subscribe(() => {\n        this.hidden.emit();\n      });\n      return transition;\n    }\n    /**\n     * Triggers toast opening programmatically.\n     *\n     * The returned observable will emit and be completed once the opening transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(shown)` output\n     *\n     * @since 8.0.0\n     */\n    show() {\n      const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n      transition.subscribe(() => {\n        this.shown.emit();\n      });\n      return transition;\n    }\n    _init() {\n      if (this.autohide && !this._timeoutID) {\n        this._timeoutID = setTimeout(() => this.hide(), this.delay);\n      }\n    }\n    _clearTimeout() {\n      if (this._timeoutID) {\n        clearTimeout(this._timeoutID);\n        this._timeoutID = null;\n      }\n    }\n    static #_ = this.ɵfac = function NgbToast_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbToast)(i0.ɵɵinjectAttribute('aria-live'));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbToast,\n      selectors: [[\"ngb-toast\"]],\n      contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgbToastHeader, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\", 1, \"toast\"],\n      hostVars: 3,\n      hostBindings: function NgbToast_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n          i0.ɵɵclassProp(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        delay: \"delay\",\n        autohide: \"autohide\",\n        header: \"header\"\n      },\n      outputs: {\n        shown: \"shown\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbToast\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c2,\n      decls: 5,\n      vars: 1,\n      consts: () => {\n        let i18n_34;\n        if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n          /**\n           * @suppress {msgDescriptions}\n           */\n          const MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_34 = goog.getMsg(\"Close\");\n          i18n_34 = MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_34;\n        } else {\n          i18n_34 = $localize`:@@ngb.toast.close-aria:Close`;\n        }\n        return [[\"headerTpl\", \"\"], [1, \"toast-header\"], [1, \"toast-body\"], [1, \"me-auto\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_34, 1, \"btn-close\", 3, \"click\"]];\n      },\n      template: function NgbToast_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵconditionalCreate(2, NgbToast_Conditional_2_Template, 3, 1, \"div\", 1);\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.contentHeaderTpl || ctx.header ? 2 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return NgbToast;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbToastModule = /*#__PURE__*/(() => {\n  class NgbToastModule {\n    static #_ = this.ɵfac = function NgbToastModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbToastModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbToastModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbToastModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nlet NgbTooltipConfig = /*#__PURE__*/(() => {\n  class NgbTooltipConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.autoClose = true;\n      this.placement = 'auto';\n      this.popperOptions = options => options;\n      this.triggers = 'hover focus';\n      this.disableTooltip = false;\n      this.openDelay = 0;\n      this.closeDelay = 0;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbTooltipConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTooltipConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTooltipConfig,\n      factory: NgbTooltipConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbTooltipConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextId = 0;\nlet NgbTooltipWindow = /*#__PURE__*/(() => {\n  class NgbTooltipWindow {\n    static #_ = this.ɵfac = function NgbTooltipWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTooltipWindow)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbTooltipWindow,\n      selectors: [[\"ngb-tooltip-window\"]],\n      hostAttrs: [\"role\", \"tooltip\"],\n      hostVars: 5,\n      hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function NgbTooltipWindow_mouseenter_HostBindingHandler() {\n            return ctx.onMouseEnter();\n          })(\"mouseleave\", function NgbTooltipWindow_mouseleave_HostBindingHandler() {\n            return ctx.onMouseLeave();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.id);\n          i0.ɵɵclassMap(\"tooltip\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n          i0.ɵɵclassProp(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        id: \"id\",\n        tooltipClass: \"tooltipClass\",\n        onMouseEnter: \"onMouseEnter\",\n        onMouseLeave: \"onMouseLeave\"\n      },\n      ngContentSelectors: _c2,\n      decls: 3,\n      vars: 0,\n      consts: [[\"data-popper-arrow\", \"\", 1, \"tooltip-arrow\"], [1, \"tooltip-inner\"]],\n      template: function NgbTooltipWindow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"ngb-tooltip-window{pointer-events:none;position:absolute}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-top,ngb-tooltip-window.bs-tooltip-bottom{padding-left:0;padding-right:0}ngb-tooltip-window.bs-tooltip-start,ngb-tooltip-window.bs-tooltip-end{padding-top:0;padding-bottom:0}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbTooltipWindow;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nlet NgbTooltip = /*#__PURE__*/(() => {\n  class NgbTooltip {\n    constructor() {\n      this._config = inject(NgbTooltipConfig);\n      /**\n       * If `true`, tooltip opening and closing will be animated.\n       *\n       * @since 8.0.0\n       */\n      this.animation = this._config.animation;\n      /**\n       * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n       *\n       * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n       * * `false` - disables the autoClose feature (NB: triggers still apply)\n       * * `\"inside\"` - closes on inside clicks as well as Escape presses\n       * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n       * as well as `Escape` presses\n       *\n       * @since 3.0.0\n       */\n      this.autoClose = this._config.autoClose;\n      /**\n       * The preferred placement of the tooltip, among the [possible values](#/guides/positioning#api).\n       *\n       * The default order of preference is `\"auto\"`.\n       *\n       * Please see the [positioning overview](#/positioning) for more details.\n       */\n      this.placement = this._config.placement;\n      /**\n       * Allows to change default Popper options when positioning the tooltip.\n       * Receives current popper options and returns modified ones.\n       *\n       * @since 13.1.0\n       */\n      this.popperOptions = this._config.popperOptions;\n      /**\n       * Specifies events that should trigger the tooltip.\n       *\n       * Supports a space separated list of event names.\n       * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n       */\n      this.triggers = this._config.triggers;\n      /**\n       * A selector specifying the element the tooltip should be appended to.\n       *\n       * Currently only supports `\"body\"`.\n       */\n      this.container = this._config.container;\n      /**\n       * If `true`, tooltip is disabled and won't be displayed.\n       *\n       * @since 1.1.0\n       */\n      this.disableTooltip = this._config.disableTooltip;\n      /**\n       * An optional class applied to the tooltip window element.\n       *\n       * @since 3.2.0\n       */\n      this.tooltipClass = this._config.tooltipClass;\n      /**\n       * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n       *\n       * @since 4.1.0\n       */\n      this.openDelay = this._config.openDelay;\n      /**\n       * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n       *\n       * @since 4.1.0\n       */\n      this.closeDelay = this._config.closeDelay;\n      /**\n       * An event emitted when the tooltip opening animation has finished. Contains no payload.\n       */\n      this.shown = new EventEmitter();\n      /**\n       * An event emitted when the tooltip closing animation has finished. Contains no payload.\n       */\n      this.hidden = new EventEmitter();\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._ngZone = inject(NgZone);\n      this._document = inject(DOCUMENT);\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._injector = inject(Injector);\n      this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n      this._popupService = new PopupService(NgbTooltipWindow);\n      this._windowRef = null;\n      this._positioning = ngbPositioning();\n      this._mouseEnterTooltip = new Subject();\n      this._mouseLeaveTooltip = new Subject();\n      this._opening = true;\n      this._transitioning = false;\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     */\n    set ngbTooltip(value) {\n      this._ngbTooltip = value;\n      if (!value && this._windowRef) {\n        this.close();\n      }\n    }\n    get ngbTooltip() {\n      return this._ngbTooltip;\n    }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context) {\n      if (!this._opening && this._transitioning) {\n        this._transitioning = false;\n        ngbCompleteTransition(this._windowRef.location.nativeElement);\n      }\n      if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n        const {\n          windowRef,\n          transition$\n        } = this._popupService.open(this._ngbTooltip, context ?? this.tooltipContext, this.animation);\n        this._opening = true;\n        this._transitioning = true;\n        this._windowRef = windowRef;\n        this._windowRef.setInput('animation', this.animation);\n        this._windowRef.setInput('tooltipClass', this.tooltipClass);\n        this._windowRef.setInput('id', this._ngbTooltipWindowId);\n        this._windowRef.setInput('onMouseEnter', () => this._mouseEnterTooltip.next());\n        this._windowRef.setInput('onMouseLeave', () => this._mouseLeaveTooltip.next());\n        this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbTooltipWindowId);\n        if (this.container === 'body') {\n          this._document.body.appendChild(this._windowRef.location.nativeElement);\n        }\n        // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n        this._windowRef.changeDetectorRef.detectChanges();\n        // We need to mark for check, because tooltip won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the tooltip from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n        this._windowRef.changeDetectorRef.markForCheck();\n        // Setting up popper and scheduling updates when zone is stable\n        this._ngZone.runOutsideAngular(() => {\n          this._positioning.createPopper({\n            hostElement: this._getPositionTargetElement(),\n            targetElement: this._windowRef.location.nativeElement,\n            placement: this.placement,\n            baseClass: 'bs-tooltip',\n            updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 6])(options))\n          });\n          Promise.resolve().then(() => {\n            // This update is required for correct arrow placement\n            this._positioning.update();\n          });\n          this._afterRenderRef = afterEveryRender({\n            mixedReadWrite: () => {\n              this._positioning.update();\n            }\n          }, {\n            injector: this._injector\n          });\n        });\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement], [this._nativeElement]);\n        transition$.subscribe(() => {\n          if (this._transitioning) {\n            this._transitioning = false;\n            this.shown.emit();\n          }\n        });\n      }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    close(animation = this.animation) {\n      if (this._opening && this._transitioning) {\n        this._transitioning = false;\n        ngbCompleteTransition(this._windowRef.location.nativeElement);\n      }\n      if (this._windowRef != null) {\n        this._getPositionTargetElement().removeAttribute('aria-describedby');\n        this._opening = false;\n        this._transitioning = true;\n        this._popupService.close(animation).subscribe(() => {\n          this._windowRef = null;\n          this._positioning.destroy();\n          this._afterRenderRef?.destroy();\n          if (this._transitioning) {\n            this._transitioning = false;\n            this.hidden.emit();\n          }\n          this._changeDetector.markForCheck();\n        });\n      }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the tooltip is currently shown.\n     */\n    isOpen() {\n      return this._windowRef != null;\n    }\n    ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay, this._mouseEnterTooltip, this._mouseLeaveTooltip);\n    }\n    ngOnChanges({\n      tooltipClass\n    }) {\n      if (tooltipClass && this.isOpen()) {\n        this._windowRef.setInput('tooltipClass', tooltipClass.currentValue);\n      }\n    }\n    ngOnDestroy() {\n      this.close(false);\n      // This check is necessary because it's possible that ngOnDestroy could be invoked before ngOnInit.\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n      this._unregisterListenersFn?.();\n    }\n    _getPositionTargetElement() {\n      return (isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) || this._nativeElement;\n    }\n    static #_ = this.ɵfac = function NgbTooltip_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTooltip)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbTooltip,\n      selectors: [[\"\", \"ngbTooltip\", \"\"]],\n      inputs: {\n        animation: \"animation\",\n        autoClose: \"autoClose\",\n        placement: \"placement\",\n        popperOptions: \"popperOptions\",\n        triggers: \"triggers\",\n        positionTarget: \"positionTarget\",\n        container: \"container\",\n        disableTooltip: \"disableTooltip\",\n        tooltipClass: \"tooltipClass\",\n        tooltipContext: \"tooltipContext\",\n        openDelay: \"openDelay\",\n        closeDelay: \"closeDelay\",\n        ngbTooltip: \"ngbTooltip\"\n      },\n      outputs: {\n        shown: \"shown\",\n        hidden: \"hidden\"\n      },\n      exportAs: [\"ngbTooltip\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbTooltip;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTooltipModule = /*#__PURE__*/(() => {\n  class NgbTooltipModule {\n    static #_ = this.ɵfac = function NgbTooltipModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTooltipModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbTooltipModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbTooltipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nlet NgbHighlight = /*#__PURE__*/(() => {\n  class NgbHighlight {\n    constructor() {\n      /**\n       * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n       */\n      this.highlightClass = 'ngb-highlight';\n      /**\n       * Boolean option to determine if the highlighting should be sensitive to accents or not.\n       *\n       * This feature is only available for browsers that implement the `String.normalize` function\n       * (typically not Internet Explorer).\n       * If you want to use this feature in a browser that does not implement `String.normalize`,\n       * you will have to include a polyfill in your application (`unorm` for example).\n       *\n       * @since 9.1.0\n       */\n      this.accentSensitive = true;\n    }\n    ngOnChanges(changes) {\n      if (!this.accentSensitive && !String.prototype.normalize) {\n        console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' + 'that does not implement the `String.normalize` function. ' + 'You will have to include a polyfill in your application to use this feature in the current browser.');\n        this.accentSensitive = true;\n      }\n      const result = toString(this.result);\n      const terms = Array.isArray(this.term) ? this.term : [this.term];\n      const prepareTerm = term => this.accentSensitive ? term : removeAccents(term);\n      const escapedTerms = terms.map(term => regExpEscape(prepareTerm(toString(term)))).filter(term => term);\n      const toSplit = this.accentSensitive ? result : removeAccents(result);\n      const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n      if (this.accentSensitive) {\n        this.parts = parts;\n      } else {\n        let offset = 0;\n        this.parts = parts.map(part => result.substring(offset, offset += part.length));\n      }\n    }\n    static #_ = this.ɵfac = function NgbHighlight_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbHighlight)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbHighlight,\n      selectors: [[\"ngb-highlight\"]],\n      inputs: {\n        highlightClass: \"highlightClass\",\n        result: \"result\",\n        term: \"term\",\n        accentSensitive: \"accentSensitive\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 0,\n      consts: [[3, \"class\"]],\n      template: function NgbHighlight_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵrepeaterCreate(0, NgbHighlight_For_1_Template, 2, 1, null, null, i0.ɵɵrepeaterTrackByIndex);\n        }\n        if (rf & 2) {\n          i0.ɵɵrepeater(ctx.parts);\n        }\n      },\n      styles: [\".ngb-highlight{font-weight:700}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NgbHighlight;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: () => 100\n});\nfunction getLiveElement(document, lazyCreate = false) {\n  let element = document.body.querySelector('#ngb-live');\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('visually-hidden');\n    document.body.appendChild(element);\n  }\n  return element;\n}\nlet Live = /*#__PURE__*/(() => {\n  class Live {\n    constructor() {\n      this._document = inject(DOCUMENT);\n      this._delay = inject(ARIA_LIVE_DELAY);\n    }\n    ngOnDestroy() {\n      const element = getLiveElement(this._document);\n      if (element) {\n        // if exists, it will always be attached to the <body>\n        element.parentElement.removeChild(element);\n      }\n    }\n    say(message) {\n      const element = getLiveElement(this._document, true);\n      const delay = this._delay;\n      if (element != null) {\n        element.textContent = '';\n        const setText = () => element.textContent = message;\n        if (delay === null) {\n          setText();\n        } else {\n          setTimeout(setText, delay);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function Live_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Live)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Live,\n      factory: Live.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Live;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nlet NgbTypeaheadConfig = /*#__PURE__*/(() => {\n  class NgbTypeaheadConfig {\n    constructor() {\n      this.editable = true;\n      this.focusFirst = true;\n      this.selectOnExact = false;\n      this.showHint = false;\n      this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n      this.popperOptions = options => options;\n    }\n    static #_ = this.ɵfac = function NgbTypeaheadConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTypeaheadConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbTypeaheadConfig,\n      factory: NgbTypeaheadConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbTypeaheadConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTypeaheadWindow = /*#__PURE__*/(() => {\n  class NgbTypeaheadWindow {\n    constructor() {\n      this.activeIdx = 0;\n      /**\n       * Flag indicating if the first row should be active initially\n       */\n      this.focusFirst = true;\n      /**\n       * A function used to format a given result before display. This function should return a formatted string without any\n       * HTML markup\n       */\n      this.formatter = toString;\n      /**\n       * Event raised when user selects a particular result row\n       */\n      this.selectEvent = new EventEmitter();\n      this.activeChangeEvent = new EventEmitter();\n    }\n    hasActive() {\n      return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n    getActive() {\n      return this.results[this.activeIdx];\n    }\n    markActive(activeIdx) {\n      this.activeIdx = activeIdx;\n      this._activeChanged();\n    }\n    next() {\n      if (this.activeIdx === this.results.length - 1) {\n        this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n      } else {\n        this.activeIdx++;\n      }\n      this._activeChanged();\n    }\n    prev() {\n      if (this.activeIdx < 0) {\n        this.activeIdx = this.results.length - 1;\n      } else if (this.activeIdx === 0) {\n        this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n      } else {\n        this.activeIdx--;\n      }\n      this._activeChanged();\n    }\n    resetActive() {\n      this.activeIdx = this.focusFirst ? 0 : -1;\n      this._activeChanged();\n    }\n    select(item) {\n      this.selectEvent.emit(item);\n    }\n    ngOnInit() {\n      this.resetActive();\n    }\n    _activeChanged() {\n      this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n    static #_ = this.ɵfac = function NgbTypeaheadWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTypeaheadWindow)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbTypeaheadWindow,\n      selectors: [[\"ngb-typeahead-window\"]],\n      hostAttrs: [\"role\", \"listbox\"],\n      hostVars: 3,\n      hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n            return $event.preventDefault();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"id\", ctx.id);\n          i0.ɵɵclassMap(\"dropdown-menu show\" + (ctx.popupClass ? \" \" + ctx.popupClass : \"\"));\n        }\n      },\n      inputs: {\n        id: \"id\",\n        focusFirst: \"focusFirst\",\n        results: \"results\",\n        term: \"term\",\n        formatter: \"formatter\",\n        resultTemplate: \"resultTemplate\",\n        popupClass: \"popupClass\"\n      },\n      outputs: {\n        selectEvent: \"select\",\n        activeChangeEvent: \"activeChange\"\n      },\n      exportAs: [\"ngbTypeaheadWindow\"],\n      decls: 4,\n      vars: 0,\n      consts: [[\"rt\", \"\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"active\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"mouseenter\", \"click\", \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgbTypeaheadWindow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵrepeaterCreate(2, NgbTypeaheadWindow_For_3_Template, 2, 9, \"button\", 1, i0.ɵɵrepeaterTrackByIndex);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.results);\n        }\n      },\n      dependencies: [NgbHighlight, NgTemplateOutlet],\n      encapsulation: 2\n    });\n  }\n  return NgbTypeaheadWindow;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nlet NgbTypeahead = /*#__PURE__*/(() => {\n  class NgbTypeahead {\n    constructor() {\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._config = inject(NgbTypeaheadConfig);\n      this._live = inject(Live);\n      this._document = inject(DOCUMENT);\n      this._ngZone = inject(NgZone);\n      this._changeDetector = inject(ChangeDetectorRef);\n      this._injector = inject(Injector);\n      this._popupService = new PopupService(NgbTypeaheadWindow);\n      this._positioning = ngbPositioning();\n      this._subscription = null;\n      this._closed$ = new Subject();\n      this._inputValueBackup = null;\n      this._inputValueForSelectOnExact = null;\n      this._valueChanges$ = fromEvent(this._nativeElement, 'input').pipe(map($event => $event.target.value));\n      this._resubscribeTypeahead$ = new BehaviorSubject(null);\n      this._windowRef = null;\n      /**\n       * The value for the `autocomplete` attribute for the `<input>` element.\n       *\n       * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n       *\n       * @since 2.1.0\n       */\n      this.autocomplete = 'off';\n      /**\n       * A selector specifying the element the typeahead popup will be appended to.\n       *\n       * Currently only supports `\"body\"`.\n       */\n      this.container = this._config.container;\n      /**\n       * If `true`, model values will not be restricted only to items selected from the popup.\n       */\n      this.editable = this._config.editable;\n      /**\n       * If `true`, the first item in the result list will always stay focused while typing.\n       */\n      this.focusFirst = this._config.focusFirst;\n      /**\n       * If `true`, automatically selects the item when it is the only one that exactly matches the user input\n       *\n       * @since 14.2.0\n       */\n      this.selectOnExact = this._config.selectOnExact;\n      /**\n       * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n       */\n      this.showHint = this._config.showHint;\n      /**\n       * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n       *\n       * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n       *\n       * Please see the [positioning overview](#/positioning) for more details.\n       */\n      this.placement = this._config.placement;\n      /**\n       * Allows to change default Popper options when positioning the typeahead.\n       * Receives current popper options and returns modified ones.\n       *\n       * @since 13.1.0\n       */\n      this.popperOptions = this._config.popperOptions;\n      /**\n       * An event emitted right before an item is selected from the result list.\n       *\n       * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n       */\n      this.selectItem = new EventEmitter();\n      this.activeDescendant = null;\n      this.popupId = `ngb-typeahead-${nextWindowId++}`;\n      this._onTouched = () => {};\n      this._onChange = _ => {};\n    }\n    ngOnInit() {\n      this._subscribeToUserInput();\n    }\n    ngOnChanges({\n      ngbTypeahead\n    }) {\n      if (ngbTypeahead && !ngbTypeahead.firstChange) {\n        this._unsubscribeFromUserInput();\n        this._subscribeToUserInput();\n      }\n    }\n    ngOnDestroy() {\n      this._closePopup();\n      this._unsubscribeFromUserInput();\n    }\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    writeValue(value) {\n      this._writeInputValue(this._formatItemForInput(value));\n      if (this.showHint) {\n        this._inputValueBackup = value;\n      }\n    }\n    setDisabledState(isDisabled) {\n      this._nativeElement.disabled = isDisabled;\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n    dismissPopup() {\n      if (this.isPopupOpen()) {\n        this._resubscribeTypeahead$.next(null);\n        this._closePopup();\n        if (this.showHint && this._inputValueBackup !== null) {\n          this._writeInputValue(this._inputValueBackup);\n        }\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    isPopupOpen() {\n      return this._windowRef != null;\n    }\n    handleBlur() {\n      this._resubscribeTypeahead$.next(null);\n      this._onTouched();\n    }\n    handleKeyDown(event) {\n      if (!this.isPopupOpen()) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowDown':\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case 'ArrowUp':\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case 'Enter':\n        case 'Tab':\n          {\n            const result = this._windowRef.instance.getActive();\n            if (isDefined(result)) {\n              event.preventDefault();\n              event.stopPropagation();\n              this._selectResult(result);\n            }\n            this._closePopup();\n            break;\n          }\n      }\n    }\n    _openPopup() {\n      if (!this.isPopupOpen()) {\n        this._inputValueBackup = this._nativeElement.value;\n        const {\n          windowRef\n        } = this._popupService.open();\n        this._windowRef = windowRef;\n        this._windowRef.setInput('id', this.popupId);\n        this._windowRef.setInput('popupClass', this.popupClass);\n        this._windowRef.instance.selectEvent.subscribe(result => this._selectResultClosePopup(result));\n        this._windowRef.instance.activeChangeEvent.subscribe(activeId => this.activeDescendant = activeId);\n        if (this.container === 'body') {\n          this._windowRef.location.nativeElement.style.zIndex = '1055';\n          this._document.body.appendChild(this._windowRef.location.nativeElement);\n        }\n        this._changeDetector.markForCheck();\n        // Setting up popper and scheduling updates when zone is stable\n        this._ngZone.runOutsideAngular(() => {\n          if (this._windowRef) {\n            this._positioning.createPopper({\n              hostElement: this._nativeElement,\n              targetElement: this._windowRef.location.nativeElement,\n              placement: this.placement,\n              updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n            });\n            this._afterRenderRef = afterEveryRender({\n              mixedReadWrite: () => {\n                this._positioning.update();\n              }\n            }, {\n              injector: this._injector\n            });\n          }\n        });\n        ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._nativeElement, this._windowRef.location.nativeElement]);\n      }\n    }\n    _closePopup() {\n      this._popupService.close().subscribe(() => {\n        this._positioning.destroy();\n        this._afterRenderRef?.destroy();\n        this._closed$.next();\n        this._windowRef = null;\n        this.activeDescendant = null;\n      });\n    }\n    _selectResult(result) {\n      let defaultPrevented = false;\n      this.selectItem.emit({\n        item: result,\n        preventDefault: () => {\n          defaultPrevented = true;\n        }\n      });\n      this._resubscribeTypeahead$.next(null);\n      if (!defaultPrevented) {\n        this.writeValue(result);\n        this._onChange(result);\n      }\n    }\n    _selectResultClosePopup(result) {\n      this._selectResult(result);\n      this._closePopup();\n    }\n    _showHint() {\n      if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n        const userInputLowerCase = this._inputValueBackup.toLowerCase();\n        const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n        if (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n          this._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n          this._nativeElement['setSelectionRange'].apply(this._nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n        } else {\n          this._writeInputValue(formattedVal);\n        }\n      }\n    }\n    _formatItemForInput(item) {\n      return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    _writeInputValue(value) {\n      this._nativeElement.value = toString(value);\n    }\n    _subscribeToUserInput() {\n      const results$ = this._valueChanges$.pipe(tap(value => {\n        this._inputValueBackup = this.showHint ? value : null;\n        this._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n        this._onChange(this.editable ? value : null);\n      }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n      this._subscription = this._resubscribeTypeahead$.pipe(switchMap(() => results$)).subscribe(results => {\n        if (!results || results.length === 0) {\n          this._closePopup();\n        } else {\n          // when there is only one result and this matches the input value\n          if (this.selectOnExact && results.length === 1 && this._formatItemForInput(results[0]) === this._inputValueForSelectOnExact) {\n            this._selectResult(results[0]);\n            this._closePopup();\n          } else {\n            this._openPopup();\n            this._windowRef.setInput('focusFirst', this.focusFirst);\n            this._windowRef.setInput('results', results);\n            this._windowRef.setInput('term', this._nativeElement.value);\n            if (this.resultFormatter) {\n              this._windowRef.setInput('formatter', this.resultFormatter);\n            }\n            if (this.resultTemplate) {\n              this._windowRef.setInput('resultTemplate', this.resultTemplate);\n            }\n            this._windowRef.instance.resetActive();\n            // The observable stream we are subscribing to might have async steps\n            // and if a component containing typeahead is using the OnPush strategy\n            // the change detection turn wouldn't be invoked automatically.\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._showHint();\n          }\n        }\n        // live announcer\n        const count = results ? results.length : 0;\n        this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n      });\n    }\n    _unsubscribeFromUserInput() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n      this._subscription = null;\n    }\n    static #_ = this.ɵfac = function NgbTypeahead_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTypeahead)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgbTypeahead,\n      selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n      hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\"],\n      hostVars: 7,\n      hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n            return ctx.handleBlur();\n          })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n            return ctx.handleKeyDown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵdomProperty(\"autocomplete\", ctx.autocomplete);\n          i0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-controls\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n          i0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n        }\n      },\n      inputs: {\n        autocomplete: \"autocomplete\",\n        container: \"container\",\n        editable: \"editable\",\n        focusFirst: \"focusFirst\",\n        inputFormatter: \"inputFormatter\",\n        ngbTypeahead: \"ngbTypeahead\",\n        resultFormatter: \"resultFormatter\",\n        resultTemplate: \"resultTemplate\",\n        selectOnExact: \"selectOnExact\",\n        showHint: \"showHint\",\n        placement: \"placement\",\n        popperOptions: \"popperOptions\",\n        popupClass: \"popupClass\"\n      },\n      outputs: {\n        selectItem: \"selectItem\"\n      },\n      exportAs: [\"ngbTypeahead\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTypeahead),\n        multi: true\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgbTypeahead;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbTypeaheadModule = /*#__PURE__*/(() => {\n  class NgbTypeaheadModule {\n    static #_ = this.ɵfac = function NgbTypeaheadModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbTypeaheadModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbTypeaheadModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbTypeaheadModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\nlet NgbOffcanvasConfig = /*#__PURE__*/(() => {\n  class NgbOffcanvasConfig {\n    constructor() {\n      this._ngbConfig = inject(NgbConfig);\n      this.backdrop = true;\n      this.keyboard = true;\n      this.position = 'start';\n      this.scroll = false;\n    }\n    get animation() {\n      return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n      this._animation = animation;\n    }\n    static #_ = this.ɵfac = function NgbOffcanvasConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvasConfig)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbOffcanvasConfig,\n      factory: NgbOffcanvasConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbOffcanvasConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nclass NgbActiveOffcanvas {\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason) {}\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasRef {\n  /**\n   * The instance of a component used for the offcanvas content.\n   *\n   * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n   */\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the offcanvas is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   */\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   */\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n   * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   */\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when offcanvas is fully visible and animation was finished.\n   * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if offcanvas is closed before open animation is finished.\n   */\n  get shown() {\n    return this._panelCmptRef.instance.shown.asObservable();\n  }\n  constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._panelCmptRef = _panelCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n    _panelCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n    if (_backdropCmptRef) {\n      _backdropCmptRef.instance.dismissEvent.subscribe(reason => {\n        this.dismiss(reason);\n      });\n    }\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {\n    if (this._panelCmptRef) {\n      this._closed.next(result);\n      this._resolve(result);\n      this._removeOffcanvasElements();\n    }\n  }\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n    this._reject(reason);\n    this._removeOffcanvasElements();\n  }\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason) {\n    if (this._panelCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n  _removeOffcanvasElements() {\n    const panelTransition$ = this._panelCmptRef.instance.hide();\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n    // hiding panel\n    panelTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._panelCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n      this._panelCmptRef.destroy();\n      this._contentRef?.viewRef?.destroy();\n      this._panelCmptRef = null;\n      this._contentRef = null;\n    });\n    // hiding backdrop\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n        this._backdropCmptRef.destroy();\n        this._backdropCmptRef = null;\n      }\n    });\n    // all done\n    zip(panelTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n      this._hidden.complete();\n    });\n  }\n}\nvar OffcanvasDismissReasons = /*#__PURE__*/function (OffcanvasDismissReasons) {\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n  return OffcanvasDismissReasons;\n}(OffcanvasDismissReasons || {});\nlet NgbOffcanvasBackdrop = /*#__PURE__*/(() => {\n  class NgbOffcanvasBackdrop {\n    constructor() {\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._zone = inject(NgZone);\n      this._injector = inject(Injector);\n      this.dismissEvent = new EventEmitter();\n    }\n    ngOnInit() {\n      afterNextRender({\n        mixedReadWrite: () => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n          if (animation) {\n            reflow(element);\n          }\n          element.classList.add('show');\n        }, {\n          animation: this.animation,\n          runningTransition: 'continue'\n        })\n      }, {\n        injector: this._injector\n      });\n    }\n    hide() {\n      return ngbRunTransition(this._zone, this._nativeElement, ({\n        classList\n      }) => classList.remove('show'), {\n        animation: this.animation,\n        runningTransition: 'stop'\n      });\n    }\n    dismiss() {\n      if (!this.static) {\n        this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n      }\n    }\n    static #_ = this.ɵfac = function NgbOffcanvasBackdrop_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvasBackdrop)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbOffcanvasBackdrop,\n      selectors: [[\"ngb-offcanvas-backdrop\"]],\n      hostVars: 6,\n      hostBindings: function NgbOffcanvasBackdrop_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function NgbOffcanvasBackdrop_mousedown_HostBindingHandler() {\n            return ctx.dismiss();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"offcanvas-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n          i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        backdropClass: \"backdropClass\",\n        static: \"static\"\n      },\n      outputs: {\n        dismissEvent: \"dismiss\"\n      },\n      decls: 0,\n      vars: 0,\n      template: function NgbOffcanvasBackdrop_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return NgbOffcanvasBackdrop;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbOffcanvasPanel = /*#__PURE__*/(() => {\n  class NgbOffcanvasPanel {\n    constructor() {\n      this._document = inject(DOCUMENT);\n      this._elRef = inject(ElementRef);\n      this._zone = inject(NgZone);\n      this._injector = inject(Injector);\n      this._closed$ = new Subject();\n      this._elWithFocus = null; // element that is focused prior to offcanvas opening\n      this.keyboard = true;\n      this.position = 'start';\n      this.dismissEvent = new EventEmitter();\n      this.shown = new Subject();\n      this.hidden = new Subject();\n    }\n    dismiss(reason) {\n      this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n      this._elWithFocus = this._document.activeElement;\n      afterNextRender({\n        mixedReadWrite: () => this._show()\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnDestroy() {\n      this._disableEventHandling();\n    }\n    hide() {\n      const context = {\n        animation: this.animation,\n        runningTransition: 'stop'\n      };\n      const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, element => {\n        element.classList.remove('showing');\n        element.classList.add('hiding');\n        return () => element.classList.remove('show', 'hiding');\n      }, context);\n      offcanvasTransition$.subscribe(() => {\n        this.hidden.next();\n        this.hidden.complete();\n      });\n      this._disableEventHandling();\n      this._restoreFocus();\n      return offcanvasTransition$;\n    }\n    _show() {\n      const context = {\n        animation: this.animation,\n        runningTransition: 'continue'\n      };\n      const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n        element.classList.add('show', 'showing');\n        return () => element.classList.remove('showing');\n      }, context);\n      offcanvasTransition$.subscribe(() => {\n        this.shown.next();\n        this.shown.complete();\n      });\n      this._enableEventHandling();\n      this._setFocus();\n    }\n    _enableEventHandling() {\n      const {\n        nativeElement\n      } = this._elRef;\n      this._zone.runOutsideAngular(() => {\n        fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$), filter(e => e.key === 'Escape')).subscribe(event => {\n          if (this.keyboard) {\n            requestAnimationFrame(() => {\n              if (!event.defaultPrevented) {\n                this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n              }\n            });\n          }\n        });\n      });\n    }\n    _disableEventHandling() {\n      this._closed$.next();\n    }\n    _setFocus() {\n      const {\n        nativeElement\n      } = this._elRef;\n      if (!nativeElement.contains(document.activeElement)) {\n        const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n        const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n        const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n        elementToFocus.focus();\n      }\n    }\n    _restoreFocus() {\n      const body = this._document.body;\n      const elWithFocus = this._elWithFocus;\n      let elementToFocus;\n      if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n        elementToFocus = elWithFocus;\n      } else {\n        elementToFocus = body;\n      }\n      this._zone.runOutsideAngular(() => {\n        setTimeout(() => elementToFocus.focus());\n        this._elWithFocus = null;\n      });\n    }\n    static #_ = this.ɵfac = function NgbOffcanvasPanel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvasPanel)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgbOffcanvasPanel,\n      selectors: [[\"ngb-offcanvas-panel\"]],\n      hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n      hostVars: 5,\n      hostBindings: function NgbOffcanvasPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n          i0.ɵɵclassMap(\"offcanvas offcanvas-\" + ctx.position + (ctx.panelClass ? \" \" + ctx.panelClass : \"\"));\n        }\n      },\n      inputs: {\n        animation: \"animation\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        ariaDescribedBy: \"ariaDescribedBy\",\n        keyboard: \"keyboard\",\n        panelClass: \"panelClass\",\n        position: \"position\"\n      },\n      outputs: {\n        dismissEvent: \"dismiss\"\n      },\n      ngContentSelectors: _c2,\n      decls: 1,\n      vars: 0,\n      template: function NgbOffcanvasPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return NgbOffcanvasPanel;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbOffcanvasStack = /*#__PURE__*/(() => {\n  class NgbOffcanvasStack {\n    constructor() {\n      this._applicationRef = inject(ApplicationRef);\n      this._injector = inject(Injector);\n      this._document = inject(DOCUMENT);\n      this._scrollBar = inject(ScrollBar);\n      this._activePanelCmptHasChanged = new Subject();\n      this._scrollBarRestoreFn = null;\n      this._backdropAttributes = ['animation', 'backdropClass'];\n      this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n      this._activeInstance = new EventEmitter();\n      const ngZone = inject(NgZone);\n      // Trap focus on active PanelCmpt\n      this._activePanelCmptHasChanged.subscribe(() => {\n        if (this._panelCmpt) {\n          ngbFocusTrap(ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n        }\n      });\n    }\n    _restoreScrollBar() {\n      const scrollBarRestoreFn = this._scrollBarRestoreFn;\n      if (scrollBarRestoreFn) {\n        this._scrollBarRestoreFn = null;\n        scrollBarRestoreFn();\n      }\n    }\n    _hideScrollBar() {\n      if (!this._scrollBarRestoreFn) {\n        this._scrollBarRestoreFn = this._scrollBar.hide();\n      }\n    }\n    open(contentInjector, content, options) {\n      const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n      if (!containerEl) {\n        throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n      }\n      if (!options.scroll) {\n        this._hideScrollBar();\n      }\n      const activeOffcanvas = new NgbActiveOffcanvas();\n      const contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n      let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n      let panelCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n      let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n      this._registerOffcanvasRef(ngbOffcanvasRef);\n      this._registerPanelCmpt(panelCmptRef);\n      ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n      activeOffcanvas.close = result => {\n        ngbOffcanvasRef.close(result);\n      };\n      activeOffcanvas.dismiss = reason => {\n        ngbOffcanvasRef.dismiss(reason);\n      };\n      this._applyPanelOptions(panelCmptRef.instance, options);\n      if (backdropCmptRef && backdropCmptRef.instance) {\n        this._applyBackdropOptions(backdropCmptRef.instance, options);\n        backdropCmptRef.changeDetectorRef.detectChanges();\n      }\n      panelCmptRef.changeDetectorRef.detectChanges();\n      return ngbOffcanvasRef;\n    }\n    get activeInstance() {\n      return this._activeInstance;\n    }\n    dismiss(reason) {\n      this._offcanvasRef?.dismiss(reason);\n    }\n    hasOpenOffcanvas() {\n      return !!this._offcanvasRef;\n    }\n    _attachBackdrop(containerEl) {\n      let backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n        environmentInjector: this._applicationRef.injector,\n        elementInjector: this._injector\n      });\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n      return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n      let panelCmptRef = createComponent(NgbOffcanvasPanel, {\n        environmentInjector: this._applicationRef.injector,\n        elementInjector: this._injector,\n        projectableNodes\n      });\n      this._applicationRef.attachView(panelCmptRef.hostView);\n      containerEl.appendChild(panelCmptRef.location.nativeElement);\n      return panelCmptRef;\n    }\n    _applyPanelOptions(windowInstance, options) {\n      this._panelAttributes.forEach(optionName => {\n        if (isDefined(options[optionName])) {\n          windowInstance[optionName] = options[optionName];\n        }\n      });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n      this._backdropAttributes.forEach(optionName => {\n        if (isDefined(options[optionName])) {\n          backdropInstance[optionName] = options[optionName];\n        }\n      });\n      backdropInstance.static = options.backdrop === 'static';\n    }\n    _getContentRef(contentInjector, content, activeOffcanvas) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        return this._createFromTemplateRef(content, activeOffcanvas);\n      } else if (isString(content)) {\n        return this._createFromString(content);\n      } else {\n        return this._createFromComponent(contentInjector, content, activeOffcanvas);\n      }\n    }\n    _createFromTemplateRef(templateRef, activeOffcanvas) {\n      const context = {\n        $implicit: activeOffcanvas,\n        close(result) {\n          activeOffcanvas.close(result);\n        },\n        dismiss(reason) {\n          activeOffcanvas.dismiss(reason);\n        }\n      };\n      const viewRef = templateRef.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n      const component = this._document.createTextNode(`${content}`);\n      return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, componentType, context) {\n      const elementInjector = Injector.create({\n        providers: [{\n          provide: NgbActiveOffcanvas,\n          useValue: context\n        }],\n        parent: contentInjector\n      });\n      const componentRef = createComponent(componentType, {\n        environmentInjector: this._applicationRef.injector,\n        elementInjector\n      });\n      const componentNativeEl = componentRef.location.nativeElement;\n      this._applicationRef.attachView(componentRef.hostView);\n      return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _registerOffcanvasRef(ngbOffcanvasRef) {\n      const unregisterOffcanvasRef = () => {\n        this._offcanvasRef = undefined;\n        this._activeInstance.emit(this._offcanvasRef);\n      };\n      this._offcanvasRef = ngbOffcanvasRef;\n      this._activeInstance.emit(this._offcanvasRef);\n      ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n    }\n    _registerPanelCmpt(ngbPanelCmpt) {\n      this._panelCmpt = ngbPanelCmpt;\n      this._activePanelCmptHasChanged.next();\n      ngbPanelCmpt.onDestroy(() => {\n        this._panelCmpt = undefined;\n        this._activePanelCmptHasChanged.next();\n      });\n    }\n    static #_ = this.ɵfac = function NgbOffcanvasStack_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvasStack)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbOffcanvasStack,\n      factory: NgbOffcanvasStack.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbOffcanvasStack;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\nlet NgbOffcanvas = /*#__PURE__*/(() => {\n  class NgbOffcanvas {\n    constructor() {\n      this._injector = inject(Injector);\n      this._offcanvasStack = inject(NgbOffcanvasStack);\n      this._config = inject(NgbOffcanvasConfig);\n    }\n    /**\n     * Opens a new offcanvas panel with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n     * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n     *\n     * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n     * options.\n     */\n    open(content, options = {}) {\n      const combinedOptions = {\n        ...this._config,\n        animation: this._config.animation,\n        ...options\n      };\n      return this._offcanvasStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active offcanvas instance.\n     */\n    get activeInstance() {\n      return this._offcanvasStack.activeInstance;\n    }\n    /**\n     * Dismisses the currently displayed offcanvas with the supplied reason.\n     */\n    dismiss(reason) {\n      this._offcanvasStack.dismiss(reason);\n    }\n    /**\n     * Indicates if there is currently an open offcanvas in the application.\n     */\n    hasOpenOffcanvas() {\n      return this._offcanvasStack.hasOpenOffcanvas();\n    }\n    static #_ = this.ɵfac = function NgbOffcanvas_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvas)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgbOffcanvas,\n      factory: NgbOffcanvas.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgbOffcanvas;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgbOffcanvasModule = /*#__PURE__*/(() => {\n  class NgbOffcanvasModule {\n    static #_ = this.ɵfac = function NgbOffcanvasModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbOffcanvasModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbOffcanvasModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NgbOffcanvasModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbScrollSpyModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule];\nlet NgbModule = /*#__PURE__*/(() => {\n  class NgbModule {\n    static #_ = this.ɵfac = function NgbModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgbModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgbModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbScrollSpyModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n    });\n  }\n  return NgbModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordionBody, NgbAccordionButton, NgbAccordionCollapse, NgbAccordionConfig, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem, NgbAccordionModule, NgbAccordionToggle, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarEthiopian, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDateStructAdapter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nAmharic, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownButtonItem, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkBase, NgbNavLinkButton, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbProgressbarStacked, NgbRating, NgbRatingConfig, NgbRatingModule, NgbScrollSpy, NgbScrollSpyConfig, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu, NgbScrollSpyModule, NgbScrollSpyService, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };","map":{"version":3,"names":["i0","Injectable","inject","ElementRef","NgZone","EventEmitter","Directive","Input","Output","TemplateRef","ViewContainerRef","Component","ViewChild","ContentChild","ChangeDetectorRef","DestroyRef","ContentChildren","NgModule","ChangeDetectionStrategy","ViewEncapsulation","PLATFORM_ID","Injector","afterNextRender","LOCALE_ID","forwardRef","DOCUMENT","afterEveryRender","ApplicationRef","EnvironmentInjector","createComponent","Attribute","ViewChildren","InjectionToken","takeUntilDestroyed","Observable","EMPTY","of","Subject","fromEvent","timer","race","BehaviorSubject","combineLatest","NEVER","zip","merge","endWith","takeUntil","filter","map","startWith","distinctUntilChanged","switchMap","take","tap","withLatestFrom","delay","mergeMap","skip","finalize","isPlatformBrowser","NgTemplateOutlet","formatDate","PercentPipe","NG_VALUE_ACCESSOR","NG_VALIDATORS","flip","preventOverflow","arrow","createPopperLite","offset","_c0","_c1","_c2","NgbAlert_Conditional_1_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NgbAlert_Conditional_1_Template_button_click_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","close","ɵɵelementEnd","NgbCarousel_For_2_Template","NgbCarousel_For_2_Template_button_click_0_listener","slide_r2","$implicit","ctx_r2","focus","select","id","NgbSlideEventSource","INDICATOR","ɵɵclassProp","activeId","ɵɵattribute","NgbCarousel_For_5_ng_template_3_Template","NgbCarousel_For_5_Template","ɵɵi18n","ɵɵtemplate","slide_r4","ɵ$index_8_r5","$index","ɵ$count_8_r6","$count","ɵɵproperty","ɵɵadvance","ɵɵi18nExp","ɵɵi18nApply","templateRef","NgbCarousel_Conditional_6_Template","_r7","NgbCarousel_Conditional_6_Template_button_click_0_listener","arrowLeft","ɵɵelement","NgbCarousel_Conditional_6_Template_button_click_4_listener","arrowRight","_c3","_c4","_c5","NgbDatepickerNavigationSelect_For_3_Template","ɵɵtext","m_r2","i18n","getMonthFullName","date","year","ɵɵtextInterpolate","getMonthShortName","NgbDatepickerNavigationSelect_For_7_Template","y_r4","getYearNumerals","_forTrack0","$item","this","idMonth","NgbDatepickerNavigation_Conditional_3_Template","NgbDatepickerNavigation_Conditional_3_Template_ngb_datepicker_navigation_select_select_0_listener","$event","emit","disabled","selectBoxes","months","years","NgbDatepickerNavigation_Conditional_4_For_1_Conditional_0_Template","NgbDatepickerNavigation_Conditional_4_For_1_Conditional_3_Template","NgbDatepickerNavigation_Conditional_4_For_1_Template","ɵɵconditionalCreate","month_r3","ɵ$index_11_r4","ɵɵconditional","ɵɵtextInterpolate1","getMonthLabel","firstDate","length","NgbDatepickerNavigation_Conditional_4_Template","ɵɵrepeaterCreate","ɵɵrepeater","NgbDatepickerNavigation_For_7_Template","month_r5","NgbDatepickerMonth_Conditional_0_Conditional_1_Template","ctx_r0","getWeekLabel","NgbDatepickerMonth_Conditional_0_For_3_Template","weekday_r2","NgbDatepickerMonth_Conditional_0_Template","ɵɵrepeaterTrackByIndex","datepicker","showWeekNumbers","viewModel","weekdays","NgbDatepickerMonth_For_2_Conditional_0_Conditional_1_Template","week_r3","getWeekNumerals","number","NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_ng_template_0_Template","NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_Template","day_r5","dayTemplate","context","NgbDatepickerMonth_For_2_Conditional_0_For_3_Template","_r4","NgbDatepickerMonth_For_2_Conditional_0_For_3_Template_div_click_0_listener","doSelect","preventDefault","hidden","today","tabindex","ariaLabel","selected","NgbDatepickerMonth_For_2_Conditional_0_Template","ɵɵrepeaterTrackByIdentity","days","NgbDatepickerMonth_For_2_Template","collapsed","_c6","_c7","_c8","a0","NgbDatepicker_ng_template_0_Template","date_r1","currentMonth_r2","currentMonth","selected_r3","disabled_r4","focused_r5","focused","NgbDatepicker_ng_template_2_For_1_Conditional_1_Template","month_r6","ctx_r6","NgbDatepicker_ng_template_2_For_1_Template","navigation","displayMonths","NgbDatepicker_ng_template_2_Template","model","NgbDatepicker_Conditional_5_Template","_r8","NgbDatepicker_Conditional_5_Template_ngb_datepicker_navigation_navigate_0_listener","onNavigateEvent","NgbDatepicker_Conditional_5_Template_ngb_datepicker_navigation_select_0_listener","onNavigateDateSelect","prevDisabled","nextDisabled","NgbDatepicker_ng_template_8_Template","NgbDatepicker_ng_template_9_Template","_c9","_c10","NgbNavOutlet_For_1_Conditional_0_ng_template_1_Template","NgbNavOutlet_For_1_Conditional_0_Template","item_r1","nav","paneRole","contentTpl","ɵɵpureFunction1","active","isPanelTransitioning","NgbNavOutlet_For_1_Template","isPanelInDom","_c11","a1","a2","pages","_c12","currentPage","_c13","_c14","_c15","NgbPagination_ng_template_0_Template","NgbPagination_ng_template_2_Template","NgbPagination_ng_template_4_Template","NgbPagination_ng_template_6_Template","NgbPagination_ng_template_8_Template","NgbPagination_ng_template_10_Template","page_r1","NgbPagination_ng_template_12_For_1_Conditional_1_ng_template_1_Template","NgbPagination_ng_template_12_For_1_Conditional_1_Template","page_r2","ellipsis_r4","ɵɵreference","tplEllipsis","NgbPagination_ng_template_12_For_1_Conditional_2_ng_template_1_Template","NgbPagination_ng_template_12_For_1_Conditional_2_Template","_r5","NgbPagination_ng_template_12_For_1_Conditional_2_Template_a_click_0_listener","pageNumber_r6","selectPage","disabled_r8","defaultNumber_r9","tplNumber","ɵɵpureFunction3","NgbPagination_ng_template_12_For_1_Template","isEllipsis","NgbPagination_ng_template_12_Template","pages_r10","NgbPagination_Conditional_15_ng_template_2_Template","NgbPagination_Conditional_15_Template","_r11","NgbPagination_Conditional_15_Template_a_click_1_listener","first_r12","previousDisabled","tplFirst","ɵɵpureFunction2","page","NgbPagination_Conditional_16_ng_template_2_Template","NgbPagination_Conditional_16_Template","_r13","NgbPagination_Conditional_16_Template_a_click_1_listener","previous_r14","tplPrevious","NgbPagination_ng_template_17_Template","NgbPagination_Conditional_18_ng_template_2_Template","NgbPagination_Conditional_18_Template","_r15","NgbPagination_Conditional_18_Template_a_click_1_listener","next_r16","tplNext","NgbPagination_Conditional_19_ng_template_2_Template","NgbPagination_Conditional_19_Template","_r17","NgbPagination_Conditional_19_Template_a_click_1_listener","pageCount","last_r18","tplLast","NgbPopoverWindow_Conditional_1_ng_template_1_Template","title","NgbPopoverWindow_Conditional_1_ng_template_3_Template","NgbPopoverWindow_Conditional_1_Template","ɵɵtemplateRefExtractor","simpleTitle_r2","isTitleTemplate","NgbProgressbar_Conditional_1_Template","ɵɵpipe","ɵɵpipeBind1","getValue","max","NgbRating_ng_template_0_Template","fill_r1","fill","NgbRating_For_3_ng_template_3_Template","NgbRating_For_3_Template","_r2","NgbRating_For_3_Template_span_mouseenter_2_listener","ɵ$index_4_r3","ctx_r3","enter","NgbRating_For_3_Template_span_click_2_listener","handleClick","t_r5","nextRate","ɵɵstyleProp","isInteractive","starTemplate","starTemplateFromContent","contexts","NgbTimepicker_Conditional_3_Template","NgbTimepicker_Conditional_3_Template_button_click_0_listener","changeHour","hourStep","isSmallSize","isLargeSize","NgbTimepicker_Conditional_5_Template","_r3","NgbTimepicker_Conditional_5_Template_button_click_0_listener","NgbTimepicker_Conditional_9_Template","NgbTimepicker_Conditional_9_Template_button_click_0_listener","changeMinute","minuteStep","NgbTimepicker_Conditional_11_Template","NgbTimepicker_Conditional_11_Template_button_click_0_listener","NgbTimepicker_Conditional_12_Conditional_3_Template","NgbTimepicker_Conditional_12_Conditional_3_Template_button_click_0_listener","changeSecond","secondStep","NgbTimepicker_Conditional_12_Conditional_5_Template","NgbTimepicker_Conditional_12_Conditional_5_Template_button_click_0_listener","NgbTimepicker_Conditional_12_Template","_r6","NgbTimepicker_Conditional_12_Template_input_change_4_listener","updateSecond","target","value","NgbTimepicker_Conditional_12_Template_input_blur_4_listener","handleBlur","NgbTimepicker_Conditional_12_Template_input_input_4_listener","formatInput","NgbTimepicker_Conditional_12_Template_input_keydown_ArrowUp_4_listener","NgbTimepicker_Conditional_12_Template_input_keydown_ArrowDown_4_listener","spinners","formatMinSec","second","readonlyInputs","NgbTimepicker_Conditional_13_Conditional_3_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","getAfternoonPeriod","NgbTimepicker_Conditional_13_Conditional_4_Template","getMorningPeriod","NgbTimepicker_Conditional_13_Template","_r9","NgbTimepicker_Conditional_13_Template_button_click_2_listener","toggleMeridian","hour","NgbToast_ng_template_0_Template","header","NgbToast_Conditional_2_ng_template_1_Template","NgbToast_Conditional_2_Template","NgbToast_Conditional_2_Template_button_click_2_listener","hide","headerTpl_r3","contentHeaderTpl","NgbHighlight_For_1_Conditional_0_Template","part_r1","ɵɵclassMap","highlightClass","NgbHighlight_For_1_Conditional_1_Template","NgbHighlight_For_1_Template","ɵ$index_1_r3","_c16","result","term","formatter","NgbTypeaheadWindow_ng_template_0_Template","result_r1","term_r2","formatter_r3","NgbTypeaheadWindow_For_3_ng_template_1_Template","NgbTypeaheadWindow_For_3_Template","NgbTypeaheadWindow_For_3_Template_button_mouseenter_0_listener","$index_r5","ctx_r5","markActive","NgbTypeaheadWindow_For_3_Template_button_click_0_listener","result_r7","rt_r8","activeIdx","resultTemplate","environment","animation","transitionTimerDelayMs","NgbConfig","constructor","_","ɵfac","NgbConfig_Factory","__ngFactoryType__","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","NgbAccordionConfig","_ngbConfig","closeOthers","destroyOnHide","_animation","NgbAccordionConfig_Factory","getTransitionDurationMs","element","transitionDelay","transitionDuration","window","getComputedStyle","transitionDelaySec","parseFloat","transitionDurationSec","toInteger","parseInt","toString","undefined","getValueInRange","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","isPromise","v","then","padNumber","slice","regExpEscape","text","replace","closest","selector","reflow","document","body","getBoundingClientRect","runInZone","zone","source","observer","next","run","error","e","complete","subscribe","removeAccents","str","normalize","getActiveElement","root","activeEl","activeElement","shadowRoot","noopFn","runningTransitions","Map","ngbRunTransition","startFn","options","running","get","runningTransition","transition$","Object","assign","delete","endFn","transitionProperty","pipe","finishTransition$","stop$","set","transitionDurationMs","runOutsideAngular","transitionEnd$","timer$","asObservable","ngbCompleteTransition","measureCollapsingElementDimensionPx","dimension","navigator","classList","hasShownClass","contains","add","style","dimensionSize","remove","ngbCollapsingTransition","direction","maxSize","setInitialClasses","NgbCollapseConfig","horizontal","NgbCollapseConfig_Factory","NgbCollapse","_config","_element","_zone","_afterInit","_isCollapsed","ngbCollapseChange","shown","isCollapsed","_runTransitionWithEvents","ngOnInit","_runTransition","toggle","open","nativeElement","NgbCollapse_Factory","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","NgbCollapse_HostBindings","inputs","outputs","exportAs","nextId$3","NgbAccordionBody","_item","NgbAccordionItem","_viewRef","elementRef","ngAfterContentChecked","_bodyTpl","_shouldBeInDOM","_createViewIfNotExists","_destroyViewIfExists","ngOnDestroy","destroy","_vcr","createEmbeddedView","detectChanges","NgbAccordionBody_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","NgbAccordionBody_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","NgbAccordionBody_Query","ɵɵviewQuery","hostAttrs","attrs","ngContentSelectors","decls","vars","consts","template","NgbAccordionBody_Template","ɵɵprojectionDef","ɵɵelementContainer","ɵɵprojection","encapsulation","NgbAccordionCollapse","item","ngbCollapse","NgbAccordionCollapse_Factory","NgbAccordionCollapse_HostBindings","ɵɵdomProperty","collapseId","toggleId","features","ɵɵHostDirectivesFeature","NgbAccordionToggle","accordion","NgbAccordionDirective","NgbAccordionToggle_Factory","NgbAccordionToggle_HostBindings","NgbAccordionToggle_click_HostBindingHandler","NgbAccordionButton","NgbAccordionButton_Factory","NgbAccordionButton_HostBindings","NgbAccordionHeader","NgbAccordionHeader_Factory","NgbAccordionHeader_HostBindings","_accordion","_cd","_destroyRef","_collapsed","_id","_collapseAnimationRunning","show","_destroyOnHide","collapse","expand","ngAfterContentInit","_collapse","markForCheck","_ensureCanExpand","NgbAccordionItem_Factory","NgbAccordionItem_ContentQueries","NgbAccordionItem_HostBindings","_anItemWasAlreadyExpandedDuringInitialisation","itemId","_getItem","expandAll","_items","find","forEach","collapseAll","isExpanded","toExpand","NgbAccordionDirective_Factory","NgbAccordionDirective_ContentQueries","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","NgbAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","NgbAlertConfig","dismissible","NgbAlertConfig_Factory","ngbAlertFadingTransition","NgbAlert","_elementRef","closed","transition","NgbAlert_Factory","NgbAlert_HostBindings","i18n_0","ngI18nClosureMode","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_0","goog.getMsg","$localize","NgbAlert_Template","styles","changeDetection","NgbAlertModule","NgbAlertModule_Factory","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","pauseOnFocus","showNavigationArrows","showNavigationIndicators","NgbCarouselConfig_Factory","NgbSlideEventDirection","isBeingAnimated","removeDirectionClasses","removeClasses","ngbCarouselTransitionIn","START","ngbCarouselTransitionOut","nextId$2","carouselId","NgbSlide","slid","NgbSlide_Factory","NgbCarousel","_platformId","_ngZone","_container","_injector","_interval$","_mouseHover$","_focused$","_pauseOnHover$","_pauseOnFocus$","_pause$","_wrap$","slide","_transitionIds","mouseHover","prev","ARROW_LEFT","ARROW_RIGHT","hasNextSlide$","slideEvent","current","slides","changes","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","pause","hasNextSlide","TIMER","_getSlideElement","mixedReadWrite","injector","activeSlide","_getSlideById","ngAfterViewInit","slideId","_cycleToSelected","_getSlideEventDirection","_getPrevSlide","END","_getNextSlide","cycle","slideIdx","transitionIds","selectedSlide","paused","transitions","activeSlideTransition","isShown","push","previousId","nextSlide","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","nextActiveSlideIdx","indexOf","isLastSlide","isFirstSlide","querySelector","NgbCarousel_Factory","NgbCarousel_ContentQueries","NgbCarousel_HostBindings","NgbCarousel_keydown_arrowLeft_HostBindingHandler","NgbCarousel_keydown_arrowRight_HostBindingHandler","NgbCarousel_mouseenter_HostBindingHandler","NgbCarousel_mouseleave_HostBindingHandler","NgbCarousel_focusin_HostBindingHandler","NgbCarousel_focusout_HostBindingHandler","i18n_1","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_1","original_code","i18n_2","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_2","i18n_3","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_3","NgbCarousel_Template","dependencies","NgbCarouselModule","NgbCarouselModule_Factory","NgbCollapseModule","NgbCollapseModule_Factory","NgbDate","from","month","day","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","NgbCalendar_Factory","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","checkMonth","expectedMonth","setMonth","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","thursdayIndex","time","round","getToday","isValid","ɵNgbCalendarGregorian_BaseFactory","NgbCalendarGregorian_Factory","ɵɵgetInheritedFactory","isChangedDate","dateComparator","isChangedMonth","checkMinBeforeMax","minDate","maxDate","Error","checkDateInRange","isDateSelectable","state","markDisabled","generateSelectBoxMonths","calendar","index","findIndex","generateSelectBoxYears","start","end","numbers","Array","i","nextMonthDisabled","nextDate","prevMonthDisabled","prevDate","buildMonths","force","monthsToReuse","splice","firstDates","reusedIndex","buildMonth","shift","dayTemplateData","outsideDays","weekdayWidth","weekdaysVisible","calendarToday","lastDate","weeks","getFirstViewDate","weekObject","getWeekdayLabel","newDate","getDayAriaLabel","contextUserData","dayObject","data","currentYear","daysPerWeek","firstMonthDate","dayOfWeek","NgbDatepickerI18n","getDayNumerals","weekNumber","NgbDatepickerI18n_Factory","NgbDatepickerI18nDefault","arguments","_locale","_monthsShort","keys","Intl","DateTimeFormat","timeZone","format","UTC","_monthsFull","weekday","width","ɵNgbDatepickerI18nDefault_BaseFactory","NgbDatepickerI18nDefault_Factory","NgbDatepickerService","_VALIDATORS","_state","focusVisible","toValidDate","_calendar","_i18n","_model$","_dateSelect$","focusDate","selectedDate","model$","dateSelect$","patch","key","reduce","obj","part","_nextState","focusedDate","focusSelect","emitEvent","defaultValue","ngbDate","struct","newState","_updateState","_patchContexts","startDate","forceRebuild","yearChanged","monthChanged","NgbDatepickerService_Factory","NavigationEvent","NgbDatepickerConfig","NgbDatepickerConfig_Factory","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","NgbDateAdapter_Factory","fromModel","toModel","ɵNgbDateStructAdapter_BaseFactory","NgbDateStructAdapter_Factory","NgbDatepickerKeyboardService","processKey","event","shiftKey","stopPropagation","NgbDatepickerKeyboardService_Factory","NgbDatepickerDayView","isMuted","NgbDatepickerDayView_Factory","NgbDatepickerDayView_HostBindings","NgbDatepickerDayView_Template","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","NgbDatepickerNavigationSelect_Factory","NgbDatepickerNavigationSelect_Query","i18n_4","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_4","i18n_5","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_5","i18n_6","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_6","i18n_7","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_7","NgbDatepickerNavigationSelect_Template","NgbDatepickerNavigationSelect_Template_select_change_0_listener","NgbDatepickerNavigationSelect_Template_select_change_4_listener","NgbDatepickerNavigation","navigate","onClickPrev","currentTarget","PREV","onClickNext","NEXT","NgbDatepickerNavigation_Factory","showSelect","i18n_8","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_8","i18n_9","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_9","i18n_10","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_10","i18n_11","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_11","NgbDatepickerNavigation_Template","NgbDatepickerNavigation_Template_button_click_1_listener","NgbDatepickerNavigation_Template_button_click_9_listener","NgbDatepickerContent","NgbDatepickerContent_Factory","NgbDatepickerMonth","_keyboardService","_service","NgbDatepicker","onKeyDown","onDateSelect","NgbDatepickerMonth_Factory","NgbDatepickerMonth_HostBindings","NgbDatepickerMonth_keydown_HostBindingHandler","NgbDatepickerMonth_Template","_nativeElement","_ngbDateAdapter","_controlValue","_publicState","_initialized","footerTemplate","dateSelect","onChange","onTouched","cd","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","read","navigateTo","focusIns$","_contentEl","focusOuts$","focusEvent","relatedTarget","name","_defaultDayTemplate","ngOnChanges","currentValue","previousValue","registerOnChange","fn","registerOnTouched","setDisabledState","writeValue","NgbDatepicker_Factory","NgbDatepicker_ContentQueries","contentTemplateFromContent","NgbDatepicker_Query","NgbDatepicker_HostBindings","contentTemplate","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","NgbDatepicker_Template","defaultContentTemplate_r9","isContainedIn","array","some","matchesSelectorIfAny","isMobile","isIOS","test","userAgent","maxTouchPoints","isAndroid","wrapAsyncForMobile","setTimeout","ngbAutoClose","closed$","insideElements","ignoreElements","insideSelector","shouldCloseOnClick","button","escapes$","mouseDowns$","closeableClicks$","shouldClose","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","el","tabIndex","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","last","arr","lastFocusedElement","NgbRTL","documentElement","isRTL","getAttribute","toLowerCase","NgbRTL_Factory","placementSeparator","spacesRegExp","bootstrapPopperMatches","top","bottom","left","right","getPopperClassPlacement","placement","leftClass","rightClass","popperStartPrimaryPlacement","popperEndPrimaryPlacement","popperStartSecondaryPlacement","popperEndSecondaryPlacement","getBootstrapBaseClassPlacement","baseClass","primary","secondary","split","newPrimary","classnames","newSecondary","classname","getPopperOptions","rtl","placementVals","isArray","allowedPlacements","hasAuto","val","search","popperPlacements","_placement","mainPlacement","bsModifier","enabled","phase","bsClassRegExp","RegExp","popperElement","elements","popper","popperPlacement","className","trim","modifiers","fallbackPlacements","noop","arg","ngbPositioning","popperInstance","createPopper","positioningOption","updatePopperOptions","popperOptions","hostElement","targetElement","update","setOptions","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","NgbDateParserFormatter_Factory","parse","dateParts","ɵNgbDateISOParserFormatter_BaseFactory","NgbDateISOParserFormatter_Factory","NgbInputDatepickerConfig","autoClose","restoreFocus","ɵNgbInputDatepickerConfig_BaseFactory","NgbInputDatepickerConfig_Factory","addPopperOffset","offset$1","NgbInputDatepicker","_parserFormatter","_elRef","_vcRef","_dateAdapter","_document","_changeDetector","_cRef","_disabled","_elWithFocus","_model","_positioning","_destroyCloseHandlers$","container","positionTarget","_onChange","_onTouched","_validatorChange","isOpen","instance","registerOnValidatorChange","isDisabled","validate","c","_fromDateStruct","invalid","actual","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","appendChild","HTMLElement","_afterRenderRef","_setCloseHandlers","elementToFocus","onBlur","onFocus","setInput","_applyPopupClass","datepickerComponentRef","inputName","newClass","oldClass","popupEl","datepickerClass","datepickerInstance","navigateEvent","NgbInputDatepicker_Factory","NgbInputDatepicker_HostBindings","NgbInputDatepicker_input_HostBindingHandler","NgbInputDatepicker_change_HostBindingHandler","NgbInputDatepicker_focus_HostBindingHandler","NgbInputDatepicker_blur_HostBindingHandler","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","ɵNgbCalendarHijri_BaseFactory","NgbCalendarHijri_Factory","isIslamicLeapYear","hYear","isGregorianLeapYear$1","gDate","getIslamicMonthStart","hMonth","ceil","getIslamicYearStart","mod$1","a","b","GREGORIAN_EPOCH$1","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hDay","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","gYearStart","yearday","tjd","leapadj","tjd2","ɵNgbCalendarIslamicCivil_BaseFactory","NgbCalendarIslamicCivil_Factory","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","HIJRI_END","ONE_DAY","MONTH_LENGTH","getDaysDiff","date1","date2","time1","time2","diff","abs","NgbCalendarIslamicUmalqura","daysDiff","j","numOfDays","dayDiff","y","m","pos","ɵNgbCalendarIslamicUmalqura_BaseFactory","NgbCalendarIslamicUmalqura_Factory","toGregorian$3","jalaliDate","jdn","jalaliToJulian","julianToGregorian$1","setHours","fromGregorian$3","gdate","g2d","gregorianToJulian$1","julianToJalali","setJalaliYear","yearValue","setJalaliMonth","setJalaliDay","getDaysPerMonth$1","mod","div","trunc","jalCal","jalaliYear","breaks","breaksLength","leapJ","jp","jump","jm","n","leapG","march","leap","gy","julianDayNumber","gm","gd","d","r","gregorianDay","jalaliDay","jalaliMonth","numberOfDays","jYear","jMonth","jDay","NgbCalendarPersian","ɵNgbCalendarPersian_BaseFactory","NgbCalendarPersian_Factory","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","GREGORIAN_EPOCH","isGregorianLeapYear","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","leapYear","daysInMonth","getDayNumberInHebrewYear","numberOfDay","setHebrewMonth","setHebrewDay","fromGregorian$2","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$2","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","geresh","gershaim","mem","step","unshift","NgbCalendarHebrew","ɵNgbCalendarHebrew_BaseFactory","NgbCalendarHebrew_Factory","WEEKDAYS$1","MONTHS$1","MONTHS_LEAP","NgbDatepickerI18nHebrew","ɵNgbDatepickerI18nHebrew_BaseFactory","NgbDatepickerI18nHebrew_Factory","toGregorian$1","fromGregorian$1","NgbCalendarBuddhist","ɵNgbCalendarBuddhist_BaseFactory","NgbCalendarBuddhist_Factory","JD_EPOCH","DAYSPERMONTH","isEthiopianLeapYear","setEthiopianYear","setEthiopianMonth","setEthiopianDay","ethiopianDate","ethiopianToJulian","julianToGregorian","gregorianToJulian","juilianToEthiopia","jd","z","NgbCalendarEthiopian","dt","ɵNgbCalendarEthiopian_BaseFactory","NgbCalendarEthiopian_Factory","WEEKDAYS","MONTHS","NgbDatepickerI18nAmharic","ɵNgbDatepickerI18nAmharic_BaseFactory","NgbDatepickerI18nAmharic_Factory","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","ɵNgbDateNativeAdapter_BaseFactory","NgbDateNativeAdapter_Factory","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","ɵNgbDateNativeUTCAdapter_BaseFactory","NgbDateNativeUTCAdapter_Factory","NGB_DATEPICKER_DIRECTIVES","NgbDatepickerModule","NgbDatepickerModule_Factory","NgbDropdownConfig","NgbDropdownConfig_Factory","NgbDropdownItem","NgbDropdownItem_Factory","NgbDropdownItem_HostBindings","NgbDropdownButtonItem","NgbDropdownButtonItem_Factory","NgbDropdownButtonItem_HostBindings","NgbDropdownMenu","dropdown","NgbDropdown","NgbDropdownMenu_Factory","NgbDropdownMenu_ContentQueries","menuItems","NgbDropdownMenu_HostBindings","NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler","NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler","NgbDropdownMenu_keydown_Home_HostBindingHandler","NgbDropdownMenu_keydown_End_HostBindingHandler","NgbDropdownMenu_keydown_Enter_HostBindingHandler","NgbDropdownMenu_keydown_Space_HostBindingHandler","NgbDropdownMenu_keydown_Tab_HostBindingHandler","NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler","NgbDropdownAnchor","NgbDropdownAnchor_Factory","NgbDropdownAnchor_HostBindings","NgbDropdownToggle","ɵNgbDropdownToggle_BaseFactory","NgbDropdownToggle_Factory","NgbDropdownToggle_HostBindings","NgbDropdownToggle_click_HostBindingHandler","NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler","NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler","NgbDropdownToggle_keydown_Home_HostBindingHandler","NgbDropdownToggle_keydown_End_HostBindingHandler","NgbDropdownToggle_keydown_Tab_HostBindingHandler","NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler","ɵɵInheritDefinitionFeature","_bodyContainer","_open","openChange","display","write","_applyPlacementClasses","_applyContainer","firstChange","_anchor","_menu","dropdownClass","_applyCustomDropdownClass","_positionMenu","_resetContainer","itemElements","_getMenuElements","position","itemElement","isEventFromToggle","_isEventFromToggle","setAttribute","removeAttribute","focusableElements","_isDropup","menu","_getFirstPlacement","removeChild","dropdownMenuElement","bodyContainer","createElement","zIndex","NgbDropdown_Factory","NgbDropdown_ContentQueries","NgbDropdown_HostBindings","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbDropdownModule_Factory","NgbModalConfig","backdrop","fullscreen","role","NgbModalConfig_Factory","ContentRef","nodes","viewRef","componentRef","PopupService","_componentType","_windowRef","_contentRef","_applicationRef","_viewContainerRef","content","templateContext","_getContentRef","projectableNodes","nextRenderSubject","windowRef","attachView","rootNodes","createTextNode","ScrollBar","scrollbarWidth","innerWidth","clientWidth","bodyStyle","overflow","paddingRight","actualPadding","ScrollBar_Factory","BACKDROP_ATTRIBUTES","NgbModalBackdrop","_cdRef","updateOptions","optionName","NgbModalBackdrop_Factory","NgbModalBackdrop_HostBindings","backdropClass","NgbModalBackdrop_Template","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","componentInstance","_closed","_hidden","dismissed","_dismissed","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","_removeModalElements","_dismiss","windowTransition$","backdropTransition$","parentNode","ModalDismissReasons","WINDOW_ATTRIBUTES","NgbModalWindow","_closed$","fullscreenClass","_show","_disableEventHandling","dialogTransition$","_dialogEl","transitions$","_restoreFocus","_enableEventHandling","_setFocus","requestAnimationFrame","defaultPrevented","ESC","_bumpBackdrop","preventClose","BACKDROP_CLICK","autoFocusable","firstFocusable","elWithFocus","NgbModalWindow_Factory","NgbModalWindow_Query","NgbModalWindow_HostBindings","ariaLabelledBy","ariaDescribedBy","windowClass","centered","scrollable","size","modalDialogClass","NgbModalWindow_Template","NgbModalStack","_environmentInjector","_scrollBar","_activeWindowCmptHasChanged","_ariaHiddenValues","_scrollBarRestoreFn","_modalRefs","_windowCmpts","_activeInstances","ngZone","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","_restoreScrollBar","scrollBarRestoreFn","_hideScrollBar","contentInjector","containerEl","activeModal","environmentInjector","contentRef","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","activeInstances","dismissAll","hasOpenModals","elementInjector","hostView","_createFromTemplateRef","_createFromString","_createFromComponent","component","componentType","create","providers","useValue","parent","componentNativeEl","parentElement","children","sibling","nodeName","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","NgbModalStack_Factory","NgbModal","_modalStack","combinedOptions","NgbModal_Factory","NgbModalModule","NgbModalModule_Factory","NgbNavConfig","orientation","roles","NgbNavConfig_Factory","isValidNavId","navCounter","NgbNavContent","NgbNavContent_Factory","NgbNavItemRole","NgbNav","NgbNavItemRole_Factory","ɵɵinjectAttribute","NgbNavItemRole_HostBindings","NgbNavItem","_nav","domId","panelDomId","isNgContainer","nodeType","Node","COMMENT_NODE","NgbNavItem_Factory","NgbNavItem_ContentQueries","destroyRef","_navigatingWithKeyboard","activeIdChange","navItemChange$","navChange","click","_updateActiveId","onFocusout","enabledLinks","links","link","navItem","nextId","items","_notifyItemChanged","emitNavChange","nextItemId","_getItemById","NgbNav_Factory","NgbNav_ContentQueries","NgbNavLinkBase","NgbNav_HostBindings","NgbNav_keydown_arrowLeft_HostBindingHandler","NgbNav_keydown_arrowRight_HostBindingHandler","NgbNav_keydown_arrowDown_HostBindingHandler","NgbNav_keydown_arrowUp_HostBindingHandler","NgbNav_keydown_Home_HostBindingHandler","NgbNav_keydown_End_HostBindingHandler","NgbNav_focusout_HostBindingHandler","NgbNavLinkBase_Factory","NgbNavLinkBase_HostBindings","NgbNavLinkButton","ɵNgbNavLinkButton_BaseFactory","NgbNavLinkButton_Factory","NgbNavLinkButton_HostBindings","NgbNavLinkButton_click_HostBindingHandler","NgbNavLink","ɵNgbNavLink_BaseFactory","NgbNavLink_Factory","NgbNavLink_HostBindings","NgbNavLink_click_HostBindingHandler","ngbNavFadeOutTransition","ngbNavFadeInTransition","NgbNavPane","NgbNavPane_Factory","NgbNavPane_HostBindings","NgbNavOutlet","_activePane","_updateActivePane","nextItem","activeItem","_getPaneForItem","_getActivePane","_panes","pane","NgbNavOutlet_Factory","NgbNavOutlet_Query","NgbNavOutlet_Template","NGB_NAV_DIRECTIVES","NgbNavModule","NgbNavModule_Factory","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","pageSize","rotate","NgbPaginationConfig_Factory","NgbPaginationEllipsis","NgbPaginationEllipsis_Factory","NgbPaginationFirst","NgbPaginationFirst_Factory","NgbPaginationLast","NgbPaginationLast_Factory","NgbPaginationNext","NgbPaginationNext_Factory","NgbPaginationNumber","NgbPaginationNumber_Factory","NgbPaginationPrevious","NgbPaginationPrevious_Factory","NgbPaginationPages","NgbPaginationPages_Factory","NgbPagination","pageChange","hasPrevious","hasNext","pageNumber","_updatePages","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","NgbPagination_Factory","NgbPagination_ContentQueries","tplPages","i18n_12","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_12","i18n_13","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_13","i18n_14","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_14","i18n_15","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_15","i18n_16","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_16","i18n_17","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_17","i18n_18","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_18","i18n_19","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_19","NgbPagination_Template","defaultPages_r19","NGB_PAGINATION_DIRECTIVES","NgbPaginationModule","NgbPaginationModule_Factory","ALIASES","hover","parseTriggers","triggers","trimmedTriggers","parsedTriggers","trigger","triggerPair","manualTriggers","includes","listenToTriggers","isOpenedFn","openFn","closeFn","openDelayMs","closeDelayMs","enterContent","leaveContent","activeOpenTriggers","Set","cleanupFns","timeout","addEventListener","listener","removeEventListener","withDelay","delayMs","clearTimeout","openTrigger","closeTrigger","enterContentSub","leaveContentSub","unsubscribe","cleanupFn","NgbPopoverConfig","disablePopover","openDelay","closeDelay","NgbPopoverConfig_Factory","nextId$1","NgbPopoverWindow","NgbPopoverWindow_Factory","NgbPopoverWindow_HostBindings","NgbPopoverWindow_mouseenter_HostBindingHandler","onMouseEnter","NgbPopoverWindow_mouseleave_HostBindingHandler","onMouseLeave","popoverClass","NgbPopoverWindow_Template","NgbPopover","_ngbPopoverWindowId","_popupService","_mouseEnterPopover","_mouseLeavePopover","_opening","_transitioning","_isDisabled","ngbPopover","popoverContext","popoverTitle","_getPositionTargetElement","_unregisterListenersFn","bind","NgbPopover_Factory","NgbPopoverModule","NgbPopoverModule_Factory","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbarConfig_Factory","NgbProgressbar","_max","stacked","NgbProgressbarStacked","optional","textType","height","getPercentValue","NgbProgressbar_Factory","NgbProgressbar_HostBindings","i18n_20","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_20","NgbProgressbar_Template","ɵɵinterpolate2","NgbProgressbarStacked_Factory","NgbProgressbarStacked_Template","NgbProgressbarModule","NgbProgressbarModule_Factory","NgbRatingConfig","readonly","resettable","NgbRatingConfig_Factory","NgbRating","_changeDetectorRef","leave","rateChange","ariaValueText","rate","handleKeyDown","_updateMax","_setupContexts","reset","internalChange","newRate","nextValue","k","NgbRating_Factory","NgbRating_ContentQueries","NgbRating_HostBindings","NgbRating_blur_HostBindingHandler","NgbRating_keydown_HostBindingHandler","NgbRating_mouseleave_HostBindingHandler","NgbRating_Template","NgbRatingModule","NgbRatingModule_Factory","toFragmentElement","CSS","escape","getOrderedFragments","fragments","defaultProcessChanges","changeActive","rootElement","scrollSpy","entries","orderedFragments","initialized","gapFragment","visibleFragments","preSelectedFragment","initialFragment","scrollTo","entry","isIntersecting","fragment","boundingClientRect","rootBounds","fragmentIndex","has","NgbScrollSpyConfig","scrollBehavior","processChanges","NgbScrollSpyConfig_Factory","MATCH_THRESHOLD","NgbScrollSpyService","_observer","_containerElement","_fragments","_preRegisteredFragments","_active$","_distinctActive$","_active","_scrollBehavior","_diChangeDetectorRef","active$","_cleanup","rootMargin","threshold","processChangesFn","IntersectionObserver","observe","stop","behavior","fragmentElement","heightPx","offsetTop","lastOffset","scrollTop","matchCounter","containerElement","updateActiveWhenScrollingIsFinished","sameOffsetAsLastTime","unobserve","disconnect","NgbScrollSpyService_Factory","NgbScrollSpyItem","_scrollSpyMenu","NgbScrollSpyMenu","_scrollSpyAPI","_isActive","NgbScrollSpy","_activate","_deactivate","getItem","isActive","NgbScrollSpyItem_Factory","NgbScrollSpyItem_HostBindings","NgbScrollSpyItem_click_HostBindingHandler","_scrollSpyRef","_map","_lastActiveItem","_rebuildMap","NgbScrollSpyMenu_Factory","NgbScrollSpyMenu_ContentQueries","_initialFragment","activeChange","_registerFragment","_unregisterFragment","NgbScrollSpy_Factory","NgbScrollSpyFragment","_scrollSpy","NgbScrollSpyFragment_Factory","NgbScrollSpyFragment_HostBindings","NgbScrollSpyModule","NgbScrollSpyModule_Factory","NgbTime","minute","updateHour","NaN","updateMinute","checkSecs","NgbTimepickerConfig","meridian","seconds","NgbTimepickerConfig_Factory","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NgbTimeAdapter_Factory","ɵNgbTimeStructAdapter_BaseFactory","NgbTimeStructAdapter_Factory","NgbTimepickerI18n","NgbTimepickerI18n_Factory","NgbTimepickerI18nDefault","_periods","ɵNgbTimepickerI18nDefault_BaseFactory","NgbTimepickerI18nDefault_Factory","FILTER_REGEX","NgbTimepicker","_hourStep","_minuteStep","_secondStep","_ngbTimeAdapter","structValue","propagateModelChange","newVal","isPM","enteredHour","input","formatHour","touched","NgbTimepicker_Factory","ɵɵdirectiveInject","i18n_21","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_21","i18n_22","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_22","i18n_23","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_23","i18n_24","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_24","i18n_25","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_25","i18n_26","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_26","i18n_27","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_27","i18n_28","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_28","i18n_29","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_29","i18n_30","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_30","i18n_31","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_31","i18n_32","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_32","i18n_33","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_33","NgbTimepicker_Template","NgbTimepicker_Template_input_change_4_listener","NgbTimepicker_Template_input_blur_4_listener","NgbTimepicker_Template_input_input_4_listener","NgbTimepicker_Template_input_keydown_ArrowUp_4_listener","NgbTimepicker_Template_input_keydown_ArrowDown_4_listener","NgbTimepicker_Template_input_change_10_listener","NgbTimepicker_Template_input_blur_10_listener","NgbTimepicker_Template_input_input_10_listener","NgbTimepicker_Template_input_keydown_ArrowUp_10_listener","NgbTimepicker_Template_input_keydown_ArrowDown_10_listener","NgbTimepickerModule","NgbTimepickerModule_Factory","NgbToastConfig","autohide","ariaLive","NgbToastConfig_Factory","ngbToastFadeInTransition","ngbToastFadeOutTransition","NgbToastHeader","NgbToastHeader_Factory","NgbToast","_init","_clearTimeout","_timeoutID","NgbToast_Factory","NgbToast_ContentQueries","NgbToast_HostBindings","i18n_34","MSG_C__USERS_ABHIS_ONEDRIVE_DESKTOP_IGKNIGHTWEB_IGKNIGHTWEB_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_34","NgbToast_Template","NgbToastModule","NgbToastModule_Factory","NgbTooltipConfig","disableTooltip","NgbTooltipConfig_Factory","NgbTooltipWindow","NgbTooltipWindow_Factory","NgbTooltipWindow_HostBindings","NgbTooltipWindow_mouseenter_HostBindingHandler","NgbTooltipWindow_mouseleave_HostBindingHandler","tooltipClass","NgbTooltipWindow_Template","NgbTooltip","_ngbTooltipWindowId","_mouseEnterTooltip","_mouseLeaveTooltip","ngbTooltip","_ngbTooltip","tooltipContext","NgbTooltip_Factory","NgbTooltipModule","NgbTooltipModule_Factory","NgbHighlight","accentSensitive","String","prototype","console","warn","terms","prepareTerm","escapedTerms","toSplit","parts","substring","NgbHighlight_Factory","NgbHighlight_Template","ARIA_LIVE_DELAY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","Live_Factory","NgbTypeaheadConfig","editable","focusFirst","selectOnExact","showHint","NgbTypeaheadConfig_Factory","NgbTypeaheadWindow","selectEvent","activeChangeEvent","hasActive","results","getActive","_activeChanged","resetActive","NgbTypeaheadWindow_Factory","NgbTypeaheadWindow_HostBindings","NgbTypeaheadWindow_mousedown_HostBindingHandler","popupClass","NgbTypeaheadWindow_Template","nextWindowId","NgbTypeahead","_live","_subscription","_inputValueBackup","_inputValueForSelectOnExact","_valueChanges$","_resubscribeTypeahead$","autocomplete","selectItem","activeDescendant","popupId","_subscribeToUserInput","ngbTypeahead","_unsubscribeFromUserInput","_closePopup","_writeInputValue","_formatItemForInput","dismissPopup","isPopupOpen","_showHint","_selectResult","_openPopup","_selectResultClosePopup","userInputLowerCase","formattedVal","apply","inputFormatter","results$","resultFormatter","count","NgbTypeahead_Factory","NgbTypeahead_HostBindings","NgbTypeahead_blur_HostBindingHandler","NgbTypeahead_keydown_HostBindingHandler","NgbTypeaheadModule","NgbTypeaheadModule_Factory","NgbOffcanvasConfig","scroll","NgbOffcanvasConfig_Factory","NgbActiveOffcanvas","NgbOffcanvasRef","_panelCmptRef","_removeOffcanvasElements","panelTransition$","OffcanvasDismissReasons","NgbOffcanvasBackdrop","static","NgbOffcanvasBackdrop_Factory","NgbOffcanvasBackdrop_HostBindings","NgbOffcanvasBackdrop_mousedown_HostBindingHandler","NgbOffcanvasBackdrop_Template","NgbOffcanvasPanel","offcanvasTransition$","NgbOffcanvasPanel_Factory","NgbOffcanvasPanel_HostBindings","panelClass","NgbOffcanvasPanel_Template","NgbOffcanvasStack","_activePanelCmptHasChanged","_backdropAttributes","_panelAttributes","_activeInstance","_panelCmpt","activeOffcanvas","panelCmptRef","ngbOffcanvasRef","_registerOffcanvasRef","_registerPanelCmpt","_applyPanelOptions","_applyBackdropOptions","activeInstance","_offcanvasRef","hasOpenOffcanvas","windowInstance","backdropInstance","unregisterOffcanvasRef","ngbPanelCmpt","NgbOffcanvasStack_Factory","NgbOffcanvas","_offcanvasStack","NgbOffcanvas_Factory","NgbOffcanvasModule","NgbOffcanvasModule_Factory","NGB_MODULES","NgbModule","NgbModule_Factory","imports"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, inject, ElementRef, NgZone, EventEmitter, Directive, Input, Output, TemplateRef, ViewContainerRef, Component, ViewChild, ContentChild, ChangeDetectorRef, DestroyRef, ContentChildren, NgModule, ChangeDetectionStrategy, ViewEncapsulation, PLATFORM_ID, Injector, afterNextRender, LOCALE_ID, forwardRef, DOCUMENT, afterEveryRender, ApplicationRef, EnvironmentInjector, createComponent, Attribute, ViewChildren, InjectionToken } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, map, startWith, distinctUntilChanged, switchMap, take, tap, withLatestFrom, delay, mergeMap, skip, finalize } from 'rxjs/operators';\nimport { isPlatformBrowser, NgTemplateOutlet, formatDate, PercentPipe } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\n\nconst environment = {\n    animation: true,\n    transitionTimerDelayMs: 5,\n};\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\nclass NgbConfig {\n    constructor() {\n        this.animation = environment.animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.closeOthers = false;\n        this.destroyOnHide = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction getTransitionDurationMs(element) {\n    const { transitionDelay, transitionDuration } = window.getComputedStyle(element);\n    const transitionDelaySec = parseFloat(transitionDelay);\n    const transitionDurationSec = parseFloat(transitionDuration);\n    return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\nfunction toString(value) {\n    return value !== undefined && value !== null ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isPromise(v) {\n    return v && v.then;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    /*\n     * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n     * not support `Element.prototype.closest`. To emulate the correct behaviour\n     * we return null when the method is missing.\n     *\n     * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n     * will return the document element whilst in Edge null will be returned. This\n     * compromise was deemed good enough.\n     */\n    if (typeof element.closest === 'undefined') {\n        return null;\n    }\n    return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nfunction reflow(element) {\n    return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nfunction runInZone(zone) {\n    return (source) => {\n        return new Observable((observer) => {\n            const next = (value) => zone.run(() => observer.next(value));\n            const error = (e) => zone.run(() => observer.error(e));\n            const complete = () => zone.run(() => observer.complete());\n            return source.subscribe({ next, error, complete });\n        });\n    };\n}\nfunction removeAccents(str) {\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\nfunction getActiveElement(root = document) {\n    const activeEl = root?.activeElement;\n    if (!activeEl) {\n        return null;\n    }\n    return activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\n\nconst noopFn = () => { };\nconst { transitionTimerDelayMs } = environment;\nconst runningTransitions = new Map();\nconst ngbRunTransition = (zone, element, startFn, options) => {\n    // Getting initial context from options\n    let context = options.context || {};\n    // Checking if there are already running transitions on the given element.\n    const running = runningTransitions.get(element);\n    if (running) {\n        switch (options.runningTransition) {\n            // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n            // We're not emitting any values, but simply completing the observable (EMPTY).\n            case 'continue':\n                return EMPTY;\n            // If there is one running and we want for it to 'stop', we have to complete the running one.\n            // We're simply completing the running one and not emitting any values and merging newly provided context\n            // with the one coming from currently running transition.\n            case 'stop':\n                zone.run(() => running.transition$.complete());\n                context = Object.assign(running.context, context);\n                runningTransitions.delete(element);\n        }\n    }\n    // Running the start function\n    const endFn = startFn(element, options.animation, context) || noopFn;\n    // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n    // If animations are disabled, we have to emit a value and complete the observable\n    // In this case we have to call the end function, but can finish immediately by emitting a value,\n    // completing the observable and executing end functions synchronously.\n    if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n        zone.run(() => endFn());\n        return of(undefined).pipe(runInZone(zone));\n    }\n    // Starting a new transition\n    const transition$ = new Subject();\n    const finishTransition$ = new Subject();\n    const stop$ = transition$.pipe(endWith(true));\n    runningTransitions.set(element, {\n        transition$,\n        complete: () => {\n            finishTransition$.next();\n            finishTransition$.complete();\n        },\n        context,\n    });\n    const transitionDurationMs = getTransitionDurationMs(element);\n    // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n    // because 'transitionend' event might not be fired in some browsers, if the transitioning\n    // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n    // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n    // 2. We need to filter transition end events, because they might bubble from shorter transitions\n    // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n    zone.runOutsideAngular(() => {\n        const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({ target }) => target === element));\n        const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n        race(timer$, transitionEnd$, finishTransition$)\n            .pipe(takeUntil(stop$))\n            .subscribe(() => {\n            runningTransitions.delete(element);\n            zone.run(() => {\n                endFn();\n                transition$.next();\n                transition$.complete();\n            });\n        });\n    });\n    return transition$.asObservable();\n};\nconst ngbCompleteTransition = (element) => {\n    runningTransitions.get(element)?.complete();\n};\n\nfunction measureCollapsingElementDimensionPx(element, dimension) {\n    // SSR fix for without injecting the PlatformId\n    if (typeof navigator === 'undefined') {\n        return '0px';\n    }\n    const { classList } = element;\n    const hasShownClass = classList.contains('show');\n    if (!hasShownClass) {\n        classList.add('show');\n    }\n    element.style[dimension] = '';\n    const dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n    if (!hasShownClass) {\n        classList.remove('show');\n    }\n    return dimensionSize;\n}\nconst ngbCollapsingTransition = (element, animation, context) => {\n    let { direction, maxSize, dimension } = context;\n    const { classList } = element;\n    function setInitialClasses() {\n        classList.add('collapse');\n        if (direction === 'show') {\n            classList.add('show');\n        }\n        else {\n            classList.remove('show');\n        }\n    }\n    // without animations we just need to set initial classes\n    if (!animation) {\n        setInitialClasses();\n        return;\n    }\n    // No maxHeight -> running the transition for the first time\n    if (!maxSize) {\n        maxSize = measureCollapsingElementDimensionPx(element, dimension);\n        context.maxSize = maxSize;\n        // Fix the height before starting the animation\n        element.style[dimension] = direction !== 'show' ? maxSize : '0px';\n        classList.remove('collapse', 'collapsing', 'show');\n        reflow(element);\n        // Start the animation\n        classList.add('collapsing');\n    }\n    // Start or revert the animation\n    element.style[dimension] = direction === 'show' ? maxSize : '0px';\n    return () => {\n        setInitialClasses();\n        classList.remove('collapsing');\n        element.style[dimension] = '';\n    };\n};\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\nclass NgbCollapseConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.horizontal = false;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\nclass NgbCollapse {\n    constructor() {\n        this._config = inject(NgbCollapseConfig);\n        this._element = inject(ElementRef);\n        this._zone = inject(NgZone);\n        /**\n         * If `true`, collapse will be animated.\n         *\n         * Animation is triggered only when clicked on triggering element\n         * or via the `.toggle()` function\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Flag used to track if the collapse setter is invoked during initialization\n         * or not. This distinction is made in order to avoid running the transition during initialization.\n         */\n        this._afterInit = false;\n        this._isCollapsed = false;\n        this.ngbCollapseChange = new EventEmitter();\n        /**\n         * If `true`, will collapse horizontally.\n         *\n         * @since 13.1.0\n         */\n        this.horizontal = this._config.horizontal;\n        /**\n         * An event emitted when the collapse element is shown, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is hidden, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n    set collapsed(isCollapsed) {\n        if (this._isCollapsed !== isCollapsed) {\n            this._isCollapsed = isCollapsed;\n            if (this._afterInit) {\n                this._runTransitionWithEvents(isCollapsed, this.animation);\n            }\n        }\n    }\n    ngOnInit() {\n        this._runTransition(this._isCollapsed, false);\n        this._afterInit = true;\n    }\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open = this._isCollapsed) {\n        this.collapsed = !open;\n        this.ngbCollapseChange.next(this._isCollapsed);\n    }\n    _runTransition(collapsed, animation) {\n        return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n            animation,\n            runningTransition: 'stop',\n            context: { direction: collapsed ? 'hide' : 'show', dimension: this.horizontal ? 'width' : 'height' },\n        });\n    }\n    _runTransitionWithEvents(collapsed, animation) {\n        this._runTransition(collapsed, animation).subscribe(() => {\n            if (collapsed) {\n                this.hidden.emit();\n            }\n            else {\n                this.shown.emit();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapse, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbCollapse, isStandalone: true, selector: \"[ngbCollapse]\", inputs: { animation: \"animation\", collapsed: [\"ngbCollapse\", \"collapsed\"], horizontal: \"horizontal\" }, outputs: { ngbCollapseChange: \"ngbCollapseChange\", shown: \"shown\", hidden: \"hidden\" }, host: { properties: { \"class.collapse-horizontal\": \"horizontal\" } }, exportAs: [\"ngbCollapse\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    host: {\n                        '[class.collapse-horizontal]': 'horizontal',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], collapsed: [{\n                type: Input,\n                args: ['ngbCollapse']\n            }], ngbCollapseChange: [{\n                type: Output\n            }], horizontal: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nlet nextId$3 = 0;\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\nclass NgbAccordionBody {\n    constructor() {\n        this._item = inject(NgbAccordionItem);\n        this._viewRef = null;\n        /**\n         * the `ElementRef` of the component\n         *\n         * @since 18.0.0\n         */\n        this.elementRef = inject(ElementRef);\n    }\n    ngAfterContentChecked() {\n        if (this._bodyTpl) {\n            if (this._item._shouldBeInDOM) {\n                this._createViewIfNotExists();\n            }\n            else {\n                this._destroyViewIfExists();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyViewIfExists();\n    }\n    _destroyViewIfExists() {\n        this._viewRef?.destroy();\n        this._viewRef = null;\n    }\n    _createViewIfNotExists() {\n        if (!this._viewRef) {\n            this._viewRef = this._vcr.createEmbeddedView(this._bodyTpl);\n            this._viewRef.detectChanges();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionBody, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionBody, isStandalone: true, selector: \"[ngbAccordionBody]\", host: { classAttribute: \"accordion-body\" }, queries: [{ propertyName: \"_bodyTpl\", first: true, predicate: TemplateRef, descendants: true, static: true }], viewQueries: [{ propertyName: \"_vcr\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\n\t\t<ng-container #container />\n\t\t<ng-content />\n\t`, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngbAccordionBody]',\n                    template: `\n\t\t<ng-container #container />\n\t\t<ng-content />\n\t`,\n                    host: {\n                        class: 'accordion-body',\n                    },\n                }]\n        }], propDecorators: { _vcr: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], _bodyTpl: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\nclass NgbAccordionCollapse {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n        this.ngbCollapse = inject(NgbCollapse);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionCollapse, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionCollapse, isStandalone: true, selector: \"[ngbAccordionCollapse]\", host: { attributes: { \"role\": \"region\" }, properties: { \"id\": \"item.collapseId\", \"attr.aria-labelledby\": \"item.toggleId\" }, classAttribute: \"accordion-collapse\" }, exportAs: [\"ngbAccordionCollapse\"], hostDirectives: [{ directive: NgbCollapse }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'ngbAccordionCollapse',\n                    selector: '[ngbAccordionCollapse]',\n                    host: {\n                        role: 'region',\n                        class: 'accordion-collapse',\n                        '[id]': 'item.collapseId',\n                        '[attr.aria-labelledby]': 'item.toggleId',\n                    },\n                    hostDirectives: [NgbCollapse],\n                }]\n        }] });\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\nclass NgbAccordionToggle {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n        this.accordion = inject(NgbAccordionDirective);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionToggle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionToggle, isStandalone: true, selector: \"[ngbAccordionToggle]\", host: { listeners: { \"click\": \"!item.disabled && accordion.toggle(item.id)\" }, properties: { \"id\": \"item.toggleId\", \"class.collapsed\": \"item.collapsed\", \"attr.aria-controls\": \"item.collapseId\", \"attr.aria-expanded\": \"!item.collapsed\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionToggle]',\n                    host: {\n                        '[id]': 'item.toggleId',\n                        '[class.collapsed]': 'item.collapsed',\n                        '[attr.aria-controls]': 'item.collapseId',\n                        '[attr.aria-expanded]': '!item.collapsed',\n                        '(click)': '!item.disabled && accordion.toggle(item.id)',\n                    },\n                }]\n        }] });\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\nclass NgbAccordionButton {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionButton, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionButton, isStandalone: true, selector: \"button[ngbAccordionButton]\", host: { attributes: { \"type\": \"button\" }, properties: { \"disabled\": \"item.disabled\" }, classAttribute: \"accordion-button\" }, hostDirectives: [{ directive: NgbAccordionToggle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbAccordionButton]',\n                    host: {\n                        '[disabled]': 'item.disabled',\n                        class: 'accordion-button',\n                        type: 'button',\n                    },\n                    hostDirectives: [NgbAccordionToggle],\n                }]\n        }] });\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\nclass NgbAccordionHeader {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionHeader, isStandalone: true, selector: \"[ngbAccordionHeader]\", host: { attributes: { \"role\": \"heading\" }, properties: { \"class.collapsed\": \"item.collapsed\" }, classAttribute: \"accordion-header\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionHeader]',\n                    host: {\n                        role: 'heading',\n                        class: 'accordion-header',\n                        '[class.collapsed]': 'item.collapsed',\n                    },\n                }]\n        }] });\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\nclass NgbAccordionItem {\n    constructor() {\n        this._accordion = inject(NgbAccordionDirective);\n        this._cd = inject(ChangeDetectorRef);\n        this._destroyRef = inject(DestroyRef);\n        this._collapsed = true;\n        this._id = `ngb-accordion-item-${nextId$3++}`;\n        this._collapseAnimationRunning = false;\n        /**\n         * If `true`, the accordion item will be disabled.\n         * It won't react to user's clicks, but still will be toggelable programmatically.\n         */\n        this.disabled = false;\n        /**\n         * Event emitted before the expanding animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. It has no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * It has no payload.\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * Sets the custom ID of the accordion item. It must be unique for the document.\n     *\n     * @param id The ID of the accordion item, must be a non-empty string\n     */\n    set id(id) {\n        if (isString(id) && id !== '') {\n            this._id = id;\n        }\n    }\n    /**\n     * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n     *\n     * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n     */\n    set destroyOnHide(destroyOnHide) {\n        this._destroyOnHide = destroyOnHide;\n    }\n    get destroyOnHide() {\n        return this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide;\n    }\n    /**\n     *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n     *\n     * @param collapsed New state of the accordion item.\n     */\n    set collapsed(collapsed) {\n        if (collapsed) {\n            this.collapse();\n        }\n        else {\n            this.expand();\n        }\n    }\n    get collapsed() {\n        return this._collapsed;\n    }\n    get id() {\n        return `${this._id}`;\n    }\n    get toggleId() {\n        return `${this.id}-toggle`;\n    }\n    get collapseId() {\n        return `${this.id}-collapse`;\n    }\n    get _shouldBeInDOM() {\n        return !this.collapsed || this._collapseAnimationRunning || !this.destroyOnHide;\n    }\n    ngAfterContentInit() {\n        const { ngbCollapse } = this._collapse;\n        // we need to disable the animation for the first init\n        ngbCollapse.animation = false;\n        ngbCollapse.collapsed = this.collapsed;\n        // we set the animation to the default of the accordion\n        ngbCollapse.animation = this._accordion.animation;\n        // event forwarding from 'ngbCollapse' to 'ngbAccordion'\n        ngbCollapse.hidden.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            // when the animation finishes we can remove the template from DOM\n            this._collapseAnimationRunning = false;\n            this.hidden.emit();\n            this._accordion.hidden.emit(this.id);\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n        });\n        ngbCollapse.shown.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            this.shown.emit();\n            this._accordion.shown.emit(this.id);\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n        });\n    }\n    /**\n     * Toggles an accordion item.\n     */\n    toggle() {\n        this.collapsed = !this.collapsed;\n    }\n    /**\n     * Expands an accordion item.\n     */\n    expand() {\n        if (this.collapsed) {\n            // checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n            if (!this._accordion._ensureCanExpand(this)) {\n                return;\n            }\n            this._collapsed = false;\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n            // we need force CD to get template into DOM before starting animation to calculate its height correctly\n            // this will synchronously put the item body into DOM, because `this._collapsed` was flipped to `false`\n            this._cd.detectChanges();\n            // firing events before starting animations\n            this.show.emit();\n            this._accordion.show.emit(this.id);\n            // we also need to make sure 'animation' flag is up-to- date\n            this._collapse.ngbCollapse.animation = this._accordion.animation;\n            this._collapse.ngbCollapse.collapsed = false;\n        }\n    }\n    /**\n     * Collapses an accordion item.\n     */\n    collapse() {\n        if (!this.collapsed) {\n            this._collapsed = true;\n            this._collapseAnimationRunning = true;\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n            // firing events before starting animations\n            this.hide.emit();\n            this._accordion.hide.emit(this.id);\n            // we also need to make sure 'animation' flag is up-to- date\n            this._collapse.ngbCollapse.animation = this._accordion.animation;\n            this._collapse.ngbCollapse.collapsed = true;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionItem, isStandalone: true, selector: \"[ngbAccordionItem]\", inputs: { id: [\"ngbAccordionItem\", \"id\"], destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", collapsed: \"collapsed\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"accordion-item\" }, queries: [{ propertyName: \"_collapse\", first: true, predicate: NgbAccordionCollapse, descendants: true, static: true }], exportAs: [\"ngbAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionItem]',\n                    exportAs: 'ngbAccordionItem',\n                    host: {\n                        '[id]': 'id',\n                        class: 'accordion-item',\n                    },\n                }]\n        }], propDecorators: { _collapse: [{\n                type: ContentChild,\n                args: [NgbAccordionCollapse, { static: true }]\n            }], id: [{\n                type: Input,\n                args: ['ngbAccordionItem']\n            }], destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\nclass NgbAccordionDirective {\n    constructor() {\n        this._config = inject(NgbAccordionConfig);\n        this._anItemWasAlreadyExpandedDuringInitialisation = false;\n        /**\n         * If `true`, accordion will be animated.\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, only one item at the time can stay open.\n         */\n        this.closeOthers = this._config.closeOthers;\n        /**\n         * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n         *\n         * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n         */\n        this.destroyOnHide = this._config.destroyOnHide;\n        /**\n         * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * The payload is the id of hidden accordion item.\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * Toggles an item with the given id.\n     *\n     * It will toggle an item, even if it is disabled.\n     *\n     * @param itemId The id of the item to toggle.\n     */\n    toggle(itemId) {\n        this._getItem(itemId)?.toggle();\n    }\n    /**\n     * Expands an item with the given id.\n     *\n     * If `closeOthers` is `true`, it will collapse other panels.\n     *\n     * @param itemId The id of the item to expand.\n     */\n    expand(itemId) {\n        this._getItem(itemId)?.expand();\n    }\n    /**\n     * Expands all items.\n     *\n     * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n     */\n    expandAll() {\n        if (this._items) {\n            if (this.closeOthers) {\n                // we check if there is an item open and if it is not we can expand the first item\n                // (otherwise we toggle nothing)\n                if (!this._items.find((item) => !item.collapsed)) {\n                    this._items.first.expand();\n                }\n            }\n            else {\n                this._items.forEach((item) => item.expand());\n            }\n        }\n    }\n    /**\n     * Collapses an item with the given id.\n     *\n     * Has no effect if the `itemId` does not correspond to any item.\n     *\n     * @param itemId The id of the item to collapse.\n     */\n    collapse(itemId) {\n        this._getItem(itemId)?.collapse();\n    }\n    /**\n     * Collapses all items.\n     */\n    collapseAll() {\n        this._items?.forEach((item) => item.collapse());\n    }\n    /**\n     * Checks if an item with the given id is expanded.\n     *\n     * If the `itemId` does not correspond to any item, it returns `false`.\n     *\n     * @param itemId The id of the item to check.\n     */\n    isExpanded(itemId) {\n        const item = this._getItem(itemId);\n        return item ? !item.collapsed : false;\n    }\n    /**\n     * It checks, if the item can be expanded in the current state of the accordion.\n     * With `closeOthers` there can be only one expanded item at a time.\n     *\n     * @internal\n     */\n    _ensureCanExpand(toExpand) {\n        if (!this.closeOthers) {\n            return true;\n        }\n        // special case during the initialization of the [collapse]=\"false\" inputs\n        // `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n        if (!this._items) {\n            if (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n                this._anItemWasAlreadyExpandedDuringInitialisation = true;\n                return true;\n            }\n            return false;\n        }\n        // if there is an expanded item, we need to collapse it first\n        this._items.find((item) => !item.collapsed && toExpand !== item)?.collapse();\n        return true;\n    }\n    _getItem(itemId) {\n        return this._items?.find((item) => item.id === itemId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbAccordionDirective, isStandalone: true, selector: \"[ngbAccordion]\", inputs: { animation: \"animation\", closeOthers: \"closeOthers\", destroyOnHide: \"destroyOnHide\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { classAttribute: \"accordion\" }, queries: [{ propertyName: \"_items\", predicate: NgbAccordionItem }], exportAs: [\"ngbAccordion\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordion]',\n                    exportAs: 'ngbAccordion',\n                    host: {\n                        class: 'accordion',\n                    },\n                }]\n        }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbAccordionItem, { descendants: false }]\n            }], animation: [{\n                type: Input\n            }], closeOthers: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nconst NGB_ACCORDION_DIRECTIVES = [\n    NgbAccordionButton,\n    NgbAccordionDirective,\n    NgbAccordionItem,\n    NgbAccordionHeader,\n    NgbAccordionToggle,\n    NgbAccordionBody,\n    NgbAccordionCollapse,\n];\nclass NgbAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionModule, imports: [NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse], exports: [NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_ACCORDION_DIRECTIVES,\n                    exports: NGB_ACCORDION_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ngbAlertFadingTransition = ({ classList }) => {\n    classList.remove('show');\n};\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    constructor() {\n        this._config = inject(NgbAlertConfig);\n        this._elementRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        /**\n         * If `true`, alert closing will be animated.\n         *\n         * Animation is triggered only when clicked on the close button (×)\n         * or via the `.close()` function\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, alert can be dismissed by the user.\n         *\n         * The close button (×) will be displayed and you can be notified\n         * of the event with the `(closed)` output.\n         */\n        this.dismissible = this._config.dismissible;\n        /**\n         * Type of the alert.\n         *\n         * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n         * `'secondary'`, `'light'` and `'dark'`.\n         */\n        this.type = this._config.type;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         *\n         * @since 8.0.0\n         */\n        this.closed = new EventEmitter();\n    }\n    /**\n     * Triggers alert closing programmatically (same as clicking on the close button (×)).\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(closed)` output\n     *\n     * @since 8.0.0\n     */\n    close() {\n        const transition = ngbRunTransition(this._zone, this._elementRef.nativeElement, ngbAlertFadingTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => this.closed.emit());\n        return transition;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlert, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbAlert, isStandalone: true, selector: \"ngb-alert\", inputs: { animation: \"animation\", dismissible: \"dismissible\", type: \"type\" }, outputs: { closed: \"closed\" }, host: { attributes: { \"role\": \"alert\" }, properties: { \"class\": \"\\\"alert show\\\" + (type ? \\\" alert-\\\" + type : \\\"\\\")\", \"class.fade\": \"animation\", \"class.alert-dismissible\": \"dismissible\" } }, exportAs: [\"ngbAlert\"], ngImport: i0, template: `\n\t\t<ng-content />\n\t\t@if (dismissible) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t\t(click)=\"close()\"\n\t\t\t></button>\n\t\t}\n\t`, isInline: true, styles: [\"ngb-alert{display:block}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlert, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-alert', exportAs: 'ngbAlert', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        role: 'alert',\n                        '[class]': '\"alert show\" + (type ? \" alert-\" + type : \"\")',\n                        '[class.fade]': 'animation',\n                        '[class.alert-dismissible]': 'dismissible',\n                    }, template: `\n\t\t<ng-content />\n\t\t@if (dismissible) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t\t(click)=\"close()\"\n\t\t\t></button>\n\t\t}\n\t`, styles: [\"ngb-alert{display:block}\\n\"] }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }] } });\n\nclass NgbAlertModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertModule, imports: [NgbAlert], exports: [NgbAlert] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbAlertModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbAlert],\n                    exports: [NgbAlert],\n                }]\n        }] });\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.pauseOnFocus = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection;\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[\"START\"] = \"start\";\n    NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nconst isBeingAnimated = ({ classList }) => {\n    return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\nconst removeDirectionClasses = (classList) => {\n    classList.remove('carousel-item-start', 'carousel-item-end');\n};\nconst removeClasses = (classList) => {\n    removeDirectionClasses(classList);\n    classList.remove('carousel-item-prev', 'carousel-item-next');\n};\nconst ngbCarouselTransitionIn = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeClasses(classList);\n        classList.add('active');\n        return;\n    }\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n        reflow(element);\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.add('active');\n    };\n};\nconst ngbCarouselTransitionOut = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeClasses(classList);\n        classList.remove('active');\n        return;\n    }\n    //  direction is left or right, depending on the way the slide goes out.\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.remove('active');\n    };\n};\n\nlet nextId$2 = 0;\nlet carouselId = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n        /**\n         * An event emitted when the slide transition is finished\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbSlide, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbSlide, isStandalone: true, selector: \"ng-template[ngbSlide]\", inputs: { id: \"id\" }, outputs: { slid: \"slid\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbSlide, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbSlide]' }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], slid: [{\n                type: Output\n            }] } });\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    constructor() {\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._config = inject(NgbCarouselConfig);\n        this._platformId = inject(PLATFORM_ID);\n        this._ngZone = inject(NgZone);\n        this._cd = inject(ChangeDetectorRef);\n        this._container = inject(ElementRef);\n        this._destroyRef = inject(DestroyRef);\n        this._injector = inject(Injector);\n        this._interval$ = new BehaviorSubject(this._config.interval);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._focused$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(this._config.pauseOnHover);\n        this._pauseOnFocus$ = new BehaviorSubject(this._config.pauseOnFocus);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(this._config.wrap);\n        this.id = `ngb-carousel-${carouselId++}`;\n        /**\n         * A flag to enable/disable the animations.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n         */\n        this.keyboard = this._config.keyboard;\n        /**\n         * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n         *\n         * @since 2.2.0\n         */\n        this.showNavigationArrows = this._config.showNavigationArrows;\n        /**\n         * If `true`, navigation indicators at the bottom of the slide will be visible.\n         *\n         * @since 2.2.0\n         */\n        this.showNavigationIndicators = this._config.showNavigationIndicators;\n        /**\n         * An event emitted just before the slide transition starts.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n        /*\n         * Keep the ids of the panels currently transitionning\n         * in order to allow only the transition revertion\n         */\n        this._transitionIds = null;\n    }\n    /**\n     * Time in milliseconds before the next slide is shown.\n     */\n    set interval(value) {\n        this._interval$.next(value);\n    }\n    get interval() {\n        return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n    set wrap(value) {\n        this._wrap$.next(value);\n    }\n    get wrap() {\n        return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n    set pauseOnHover(value) {\n        this._pauseOnHover$.next(value);\n    }\n    get pauseOnHover() {\n        return this._pauseOnHover$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when the focus is inside the carousel.\n     */\n    set pauseOnFocus(value) {\n        this._pauseOnFocus$.next(value);\n    }\n    get pauseOnFocus() {\n        return this._pauseOnFocus$.value;\n    }\n    set mouseHover(value) {\n        this._mouseHover$.next(value);\n    }\n    get mouseHover() {\n        return this._mouseHover$.value;\n    }\n    set focused(value) {\n        this._focused$.next(value);\n    }\n    get focused() {\n        return this._focused$.value;\n    }\n    arrowLeft() {\n        this.focus();\n        this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n    arrowRight() {\n        this.focus();\n        this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular(() => {\n                const hasNextSlide$ = combineLatest([\n                    this.slide.pipe(map((slideEvent) => slideEvent.current), startWith(this.activeId)),\n                    this._wrap$,\n                    this.slides.changes.pipe(startWith(null)),\n                ]).pipe(map(([currentSlideId, wrap]) => {\n                    const slideArr = this.slides.toArray();\n                    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                }), distinctUntilChanged());\n                combineLatest([\n                    this._pause$,\n                    this._pauseOnHover$,\n                    this._mouseHover$,\n                    this._pauseOnFocus$,\n                    this._focused$,\n                    this._interval$,\n                    hasNextSlide$,\n                ])\n                    .pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap((interval) => (interval > 0 ? timer(interval, interval) : NEVER)), takeUntilDestroyed(this._destroyRef))\n                    .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n            });\n        }\n        this.slides.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            this._transitionIds?.forEach((id) => ngbCompleteTransition(this._getSlideElement(id)));\n            this._transitionIds = null;\n            this._cd.markForCheck();\n            // The following code need to be done asynchronously, after the dom becomes stable,\n            // otherwise all changes will be undone.\n            afterNextRender({\n                mixedReadWrite: () => {\n                    for (const { id } of this.slides) {\n                        const element = this._getSlideElement(id);\n                        if (id === this.activeId) {\n                            element.classList.add('active');\n                        }\n                        else {\n                            element.classList.remove('active');\n                        }\n                    }\n                },\n            }, { injector: this._injector });\n        });\n    }\n    ngAfterContentChecked() {\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n    }\n    ngAfterViewInit() {\n        // Initialize the 'active' class (not managed by the template)\n        if (this.activeId) {\n            const element = this._getSlideElement(this.activeId);\n            if (element) {\n                element.classList.add('active');\n            }\n        }\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    select(slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n    prev(source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n    next(source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n    pause() {\n        this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from start to end.\n     */\n    cycle() {\n        this._pause$.next(false);\n    }\n    /**\n     * Set the focus on the carousel.\n     */\n    focus() {\n        this._container.nativeElement.focus();\n    }\n    _cycleToSelected(slideIdx, direction, source) {\n        const transitionIds = this._transitionIds;\n        if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n            // Revert prevented\n            return;\n        }\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this._transitionIds = [this.activeId, slideIdx];\n            this.slide.emit({\n                prev: this.activeId,\n                current: selectedSlide.id,\n                direction: direction,\n                paused: this._pause$.value,\n                source,\n            });\n            const options = {\n                animation: this.animation,\n                runningTransition: 'stop',\n                context: { direction },\n            };\n            const transitions = [];\n            const activeSlide = this._getSlideById(this.activeId);\n            if (activeSlide) {\n                const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n                activeSlideTransition.subscribe(() => {\n                    activeSlide.slid.emit({ isShown: false, direction, source });\n                });\n                transitions.push(activeSlideTransition);\n            }\n            const previousId = this.activeId;\n            this.activeId = selectedSlide.id;\n            const nextSlide = this._getSlideById(this.activeId);\n            const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n            transition.subscribe(() => {\n                nextSlide?.slid.emit({ isShown: true, direction, source });\n            });\n            transitions.push(transition);\n            zip(...transitions)\n                .pipe(take(1))\n                .subscribe(() => {\n                this._transitionIds = null;\n                this.slid.emit({\n                    prev: previousId,\n                    current: selectedSlide.id,\n                    direction: direction,\n                    paused: this._pause$.value,\n                    source,\n                });\n            });\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n    }\n    _getSlideById(slideId) {\n        return this.slides.find((slide) => slide.id === slideId) || null;\n    }\n    _getSlideIdxById(slideId) {\n        const slide = this._getSlideById(slideId);\n        return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n    _getNextSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide\n            ? this.wrap\n                ? slideArr[0].id\n                : slideArr[slideArr.length - 1].id\n            : slideArr[currentSlideIdx + 1].id;\n    }\n    _getPrevSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide\n            ? this.wrap\n                ? slideArr[slideArr.length - 1].id\n                : slideArr[0].id\n            : slideArr[currentSlideIdx - 1].id;\n    }\n    _getSlideElement(slideId) {\n        return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarousel, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbCarousel, isStandalone: true, selector: \"ngb-carousel\", inputs: { animation: \"animation\", activeId: \"activeId\", interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", pauseOnFocus: \"pauseOnFocus\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\" }, outputs: { slide: \"slide\", slid: \"slid\" }, host: { attributes: { \"tabIndex\": \"0\" }, listeners: { \"keydown.arrowLeft\": \"keyboard && arrowLeft()\", \"keydown.arrowRight\": \"keyboard && arrowRight()\", \"mouseenter\": \"mouseHover = true\", \"mouseleave\": \"mouseHover = false\", \"focusin\": \"focused = true\", \"focusout\": \"focused = false\" }, properties: { \"style.display\": \"\\\"block\\\"\" }, classAttribute: \"carousel slide\" }, queries: [{ propertyName: \"slides\", predicate: NgbSlide }], exportAs: [\"ngbCarousel\"], ngImport: i0, template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t@for (slide of slides; track slide) {\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-bs-target\n\t\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t\t></button>\n\t\t\t}\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t@for (slide of slides; track slide; let i = $index; let c = $count) {\n\t\t\t\t<div class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.templateRef\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t@if (showNavigationArrows) {\n\t\t\t<button\n\t\t\t\tclass=\"carousel-control-prev\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"arrowLeft()\"\n\t\t\t\t[attr.aria-labelledby]=\"id + '-previous'\"\n\t\t\t>\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\" [id]=\"id + '-previous'\">Previous</span>\n\t\t\t</button>\n\t\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" [attr.aria-labelledby]=\"id + '-next'\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\" [id]=\"id + '-next'\">Next</span>\n\t\t\t</button>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarousel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        tabIndex: '0',\n                        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n                        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n                        '(mouseenter)': 'mouseHover = true',\n                        '(mouseleave)': 'mouseHover = false',\n                        '(focusin)': 'focused = true',\n                        '(focusout)': 'focused = false',\n                    },\n                    template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t@for (slide of slides; track slide) {\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-bs-target\n\t\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t\t></button>\n\t\t\t}\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t@for (slide of slides; track slide; let i = $index; let c = $count) {\n\t\t\t\t<div class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.templateRef\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t@if (showNavigationArrows) {\n\t\t\t<button\n\t\t\t\tclass=\"carousel-control-prev\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"arrowLeft()\"\n\t\t\t\t[attr.aria-labelledby]=\"id + '-previous'\"\n\t\t\t>\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\" [id]=\"id + '-previous'\">Previous</span>\n\t\t\t</button>\n\t\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" [attr.aria-labelledby]=\"id + '-next'\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\" [id]=\"id + '-next'\">Next</span>\n\t\t\t</button>\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { slides: [{\n                type: ContentChildren,\n                args: [NgbSlide]\n            }], animation: [{\n                type: Input\n            }], activeId: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], wrap: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], pauseOnHover: [{\n                type: Input\n            }], pauseOnFocus: [{\n                type: Input\n            }], showNavigationArrows: [{\n                type: Input\n            }], showNavigationIndicators: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slid: [{\n                type: Output\n            }] } });\nvar NgbSlideEventSource;\n(function (NgbSlideEventSource) {\n    NgbSlideEventSource[\"TIMER\"] = \"timer\";\n    NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n    NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n    NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nclass NgbCarouselModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselModule, imports: [NgbCarousel, NgbSlide], exports: [NgbCarousel, NgbSlide] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCarousel, NgbSlide],\n                    exports: [NgbCarousel, NgbSlide],\n                }]\n        }] });\n\nclass NgbCollapseModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseModule, imports: [NgbCollapse], exports: [NgbCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCollapseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCollapse],\n                    exports: [NgbCollapse],\n                }]\n        }] });\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    equals(other) {\n        return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nclass NgbCalendar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendar, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendar, providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }]\n        }] });\nclass NgbCalendarGregorian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toJSDate(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromJSDate(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toJSDate(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromJSDate(new Date());\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toJSDate(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarGregorian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarGregorian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarGregorian, decorators: [{\n            type: Injectable\n        }] });\n\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date || null;\n}\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    return !(date === null ||\n        date === undefined ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        const index = months.findIndex((month) => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        const index = months.findIndex((month) => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    const length = end - start + 1;\n    const numbers = Array(length);\n    for (let i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    const nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    const prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return (minDate != null &&\n        ((prevDate.year === minDate.year && prevDate.month < minDate.month) ||\n            (prevDate.year < minDate.year && minDate.month === 1)));\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        const firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            const reusedIndex = monthsToReuse.findIndex((month) => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays, weekdayWidth, weekdaysVisible, } = state;\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // clearing weekdays, if not visible\n    if (!weekdaysVisible) {\n        month.weekdays.length = 0;\n    }\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0 && weekdaysVisible) {\n                month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n            }\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            const nextDate = calendar.getNext(newDate);\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            let contextUserData = dayTemplateData\n                ? dayTemplateData(newDate, { month: month.number, year: month.year })\n                : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year,\n                disabled,\n                focused: false,\n                selected: false,\n                today,\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map((day) => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed =\n            outsideDays === 'collapsed' &&\n                days[0].date.month !== month.number &&\n                days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    const daysPerWeek = calendar.getDaysPerWeek();\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the text label to display above the day view.\n     *\n     * @since 9.1.0\n     */\n    getMonthLabel(date) {\n        return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date) {\n        return `${date.day}`;\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber) {\n        return `${weekNumber}`;\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year) {\n        return `${year}`;\n    }\n    /**\n     * Returns the week label to display in the heading of the month view.\n     *\n     * @since 9.1.0\n     */\n    getWeekLabel() {\n        return '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18n, providedIn: 'root', useFactory: () => new NgbDatepickerI18nDefault() }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => new NgbDatepickerI18nDefault(),\n                }]\n        }] });\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    constructor() {\n        super(...arguments);\n        this._locale = inject(LOCALE_ID);\n        this._monthsShort = [...Array(12).keys()].map((month) => Intl.DateTimeFormat(this._locale, { month: 'short', timeZone: 'UTC' }).format(Date.UTC(2000, month)));\n        this._monthsFull = [...Array(12).keys()].map((month) => Intl.DateTimeFormat(this._locale, { month: 'long', timeZone: 'UTC' }).format(Date.UTC(2000, month)));\n    }\n    getWeekdayLabel(weekday, width = 'narrow') {\n        // 1 MAY 2000 is a Monday\n        const weekdays = [1, 2, 3, 4, 5, 6, 7].map((day) => Intl.DateTimeFormat(this._locale, { weekday: width, timeZone: 'UTC' }).format(Date.UTC(2000, 4, day)));\n        // `weekday` is 1 (Mon) to 7 (Sun)\n        return weekdays[weekday - 1] || '';\n    }\n    getMonthShortName(month) {\n        return this._monthsShort[month - 1] || '';\n    }\n    getMonthFullName(month) {\n        return this._monthsFull[month - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nDefault, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nDefault, decorators: [{\n            type: Injectable\n        }] });\n\nclass NgbDatepickerService {\n    constructor() {\n        this._VALIDATORS = {\n            dayTemplateData: (dayTemplateData) => {\n                if (this._state.dayTemplateData !== dayTemplateData) {\n                    return { dayTemplateData };\n                }\n            },\n            displayMonths: (displayMonths) => {\n                displayMonths = toInteger(displayMonths);\n                if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                    return { displayMonths };\n                }\n            },\n            disabled: (disabled) => {\n                if (this._state.disabled !== disabled) {\n                    return { disabled };\n                }\n            },\n            firstDayOfWeek: (firstDayOfWeek) => {\n                firstDayOfWeek = toInteger(firstDayOfWeek);\n                if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                    return { firstDayOfWeek };\n                }\n            },\n            focusVisible: (focusVisible) => {\n                if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                    return { focusVisible };\n                }\n            },\n            markDisabled: (markDisabled) => {\n                if (this._state.markDisabled !== markDisabled) {\n                    return { markDisabled };\n                }\n            },\n            maxDate: (date) => {\n                const maxDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.maxDate, maxDate)) {\n                    return { maxDate };\n                }\n            },\n            minDate: (date) => {\n                const minDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.minDate, minDate)) {\n                    return { minDate };\n                }\n            },\n            navigation: (navigation) => {\n                if (this._state.navigation !== navigation) {\n                    return { navigation };\n                }\n            },\n            outsideDays: (outsideDays) => {\n                if (this._state.outsideDays !== outsideDays) {\n                    return { outsideDays };\n                }\n            },\n            weekdays: (weekdays) => {\n                const weekdayWidth = weekdays === true || weekdays === false ? 'narrow' : weekdays;\n                const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n                if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n                    return { weekdayWidth, weekdaysVisible };\n                }\n            },\n        };\n        this._calendar = inject(NgbCalendar);\n        this._i18n = inject(NgbDatepickerI18n);\n        this._model$ = new Subject();\n        this._dateSelect$ = new Subject();\n        this._state = {\n            dayTemplateData: null,\n            markDisabled: null,\n            maxDate: null,\n            minDate: null,\n            disabled: false,\n            displayMonths: 1,\n            firstDate: null,\n            firstDayOfWeek: 1,\n            lastDate: null,\n            focusDate: null,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectedDate: null,\n            selectBoxes: { years: [], months: [] },\n            weekdayWidth: 'narrow',\n            weekdaysVisible: true,\n        };\n    }\n    get model$() {\n        return this._model$.pipe(filter((model) => model.months.length > 0));\n    }\n    get dateSelect$() {\n        return this._dateSelect$.pipe(filter((date) => date !== null));\n    }\n    set(options) {\n        let patch = Object.keys(options)\n            .map((key) => this._VALIDATORS[key](options[key]))\n            .reduce((obj, part) => ({ ...obj, ...part }), {});\n        if (Object.keys(patch).length > 0) {\n            this._nextState(patch);\n        }\n    }\n    focus(date) {\n        const focusedDate = this.toValidDate(date, null);\n        if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    open(date) {\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (firstDate != null &&\n            !this._state.disabled &&\n            (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n            this._nextState({ firstDate });\n        }\n    }\n    select(date, options = {}) {\n        const selectedDate = this.toValidDate(date, null);\n        if (selectedDate != null && !this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._dateSelect$.next(selectedDate);\n            }\n        }\n    }\n    toValidDate(date, defaultValue) {\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    getMonth(struct) {\n        for (let month of this._state.months) {\n            if (struct.month === month.number && struct.year === month.year) {\n                return month;\n            }\n        }\n        throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n    }\n    _nextState(patch) {\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach((month) => {\n            month.weeks.forEach((week) => {\n                week.days.forEach((day) => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex =\n                        !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden =\n                            outsideDays === 'hidden' ||\n                                outsideDays === 'collapsed' ||\n                                (displayMonths > 1 &&\n                                    day.date.after(months[0].firstDate) &&\n                                    day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    }\n    _updateState(patch) {\n        // patching fields\n        const state = Object.assign({}, this._state, patch);\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 &&\n                state.focusDate &&\n                !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            const forceRebuild = 'dayTemplateData' in patch ||\n                'firstDayOfWeek' in patch ||\n                'markDisabled' in patch ||\n                'minDate' in patch ||\n                'maxDate' in patch ||\n                'disabled' in patch ||\n                'outsideDays' in patch ||\n                'weekdaysVisible' in patch;\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months[0].firstDate;\n            state.lastDate = months[months.length - 1].lastDate;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerService, decorators: [{\n            type: Injectable\n        }] });\n\nvar NavigationEvent;\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekNumbers = false;\n        this.weekdays = 'narrow';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nclass NgbDateAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }]\n        }] });\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    fromModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nclass NgbDatepickerKeyboardService {\n    /**\n     * Processes a keyboard event.\n     */\n    processKey(event, datepicker) {\n        const { state, calendar } = datepicker;\n        switch (event.key) {\n            case 'PageUp':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case 'PageDown':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case 'End':\n                datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                break;\n            case 'Home':\n                datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                break;\n            case 'ArrowLeft':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                break;\n            case 'ArrowUp':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case 'ArrowRight':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                break;\n            case 'ArrowDown':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case 'Enter':\n            case ' ':\n                datepicker.focusSelect();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerKeyboardService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerKeyboardService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerKeyboardService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbDatepickerDayView {\n    constructor() {\n        this.i18n = inject(NgbDatepickerI18n);\n    }\n    isMuted() {\n        return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerDayView, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDatepickerDayView, isStandalone: true, selector: \"[ngbDatepickerDayView]\", inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, host: { properties: { \"class.bg-primary\": \"selected\", \"class.text-white\": \"selected\", \"class.text-muted\": \"isMuted()\", \"class.outside\": \"isMuted()\", \"class.active\": \"focused\" }, classAttribute: \"btn-light\" }, ngImport: i0, template: `{{ i18n.getDayNumerals(date) }}`, isInline: true, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-tertiary-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerDayView, decorators: [{\n            type: Component,\n            args: [{ selector: '[ngbDatepickerDayView]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused',\n                    }, template: `{{ i18n.getDayNumerals(date) }}`, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-tertiary-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"] }]\n        }], propDecorators: { currentMonth: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\nclass NgbDatepickerNavigationSelect {\n    constructor() {\n        this._month = -1;\n        this._year = -1;\n        this.i18n = inject(NgbDatepickerI18n);\n        this.select = new EventEmitter();\n    }\n    changeMonth(month) {\n        this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n    changeYear(year) {\n        this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n    ngAfterViewChecked() {\n        if (this.date) {\n            if (this.date.month !== this._month) {\n                this._month = this.date.month;\n                this.monthSelect.nativeElement.value = `${this._month}`;\n            }\n            if (this.date.year !== this._year) {\n                this._year = this.date.year;\n                this.yearSelect.nativeElement.value = `${this._year}`;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerNavigationSelect, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbDatepickerNavigationSelect, isStandalone: true, selector: \"ngb-datepicker-navigation-select\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"monthSelect\", first: true, predicate: [\"month\"], descendants: true, read: ElementRef, static: true }, { propertyName: \"yearSelect\", first: true, predicate: [\"year\"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t@for (m of months; track m) {\n\t\t\t\t<option [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t\t}}</option>\n\t\t\t}</select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t@for (y of years; track y) {\n\t\t\t\t<option [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t\t}\n\t\t</select>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerNavigationSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation-select', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t@for (m of months; track m) {\n\t\t\t\t<option [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t\t}}</option>\n\t\t\t}</select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t@for (y of years; track y) {\n\t\t\t\t<option [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t\t}\n\t\t</select>\n\t`, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"] }]\n        }], propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], years: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], monthSelect: [{\n                type: ViewChild,\n                args: ['month', { static: true, read: ElementRef }]\n            }], yearSelect: [{\n                type: ViewChild,\n                args: ['year', { static: true, read: ElementRef }]\n            }] } });\n\nclass NgbDatepickerNavigation {\n    constructor() {\n        this.navigation = NavigationEvent;\n        this.i18n = inject(NgbDatepickerI18n);\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    onClickPrev(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.PREV);\n    }\n    onClickNext(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.NEXT);\n    }\n    idMonth(month) {\n        return month;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerNavigation, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbDatepickerNavigation, isStandalone: true, selector: \"ngb-datepicker-navigation\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, ngImport: i0, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t@if (showSelect) {\n\t\t\t<ngb-datepicker-navigation-select\n\t\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t\t(select)=\"select.emit($event)\"\n\t\t\t/>\n\t\t}\n\n\t\t@if (!showSelect) {\n\t\t\t@for (month of months; track idMonth(month); let i = $index) {\n\t\t\t\t@if (i > 0) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t@if (i !== months.length - 1) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<div class=\"visually-hidden\" aria-live=\"polite\">\n\t\t\t@for (month of months; track idMonth(month)) {\n\t\t\t\t<span>{{ i18n.getMonthLabel(month.firstDate) }}</span>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"], dependencies: [{ kind: \"component\", type: NgbDatepickerNavigationSelect, selector: \"ngb-datepicker-navigation-select\", inputs: [\"date\", \"disabled\", \"months\", \"years\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerNavigation, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation', imports: [NgbDatepickerNavigationSelect], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t@if (showSelect) {\n\t\t\t<ngb-datepicker-navigation-select\n\t\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t\t(select)=\"select.emit($event)\"\n\t\t\t/>\n\t\t}\n\n\t\t@if (!showSelect) {\n\t\t\t@for (month of months; track idMonth(month); let i = $index) {\n\t\t\t\t@if (i > 0) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t@if (i !== months.length - 1) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<div class=\"visually-hidden\" aria-live=\"polite\">\n\t\t\t@for (month of months; track idMonth(month)) {\n\t\t\t\t<span>{{ i18n.getMonthLabel(month.firstDate) }}</span>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"] }]\n        }], propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], showSelect: [{\n                type: Input\n            }], prevDisabled: [{\n                type: Input\n            }], nextDisabled: [{\n                type: Input\n            }], selectBoxes: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nclass NgbDatepickerContent {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDatepickerContent, isStandalone: true, selector: \"ng-template[ngbDatepickerContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbDatepickerContent]' }]\n        }] });\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nclass NgbDatepickerMonth {\n    constructor() {\n        this._keyboardService = inject(NgbDatepickerKeyboardService);\n        this._service = inject(NgbDatepickerService);\n        this.i18n = inject(NgbDatepickerI18n);\n        this.datepicker = inject(NgbDatepicker);\n    }\n    /**\n     * The first date of month to be rendered.\n     *\n     * This month must one of the months present in the\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n     */\n    set month(month) {\n        this.viewModel = this._service.getMonth(month);\n    }\n    onKeyDown(event) {\n        this._keyboardService.processKey(event, this.datepicker);\n    }\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.datepicker.onDateSelect(day.date);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerMonth, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbDatepickerMonth, isStandalone: true, selector: \"ngb-datepicker-month\", inputs: { month: \"month\" }, host: { attributes: { \"role\": \"grid\" }, listeners: { \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n\t\t@if (viewModel.weekdays.length > 0) {\n\t\t\t<div class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n\t\t\t\t}\n\t\t\t\t@for (weekday of viewModel.weekdays; track $index) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t}\n\t\t@for (week of viewModel.weeks; track week) {\n\t\t\t@if (!week.collapsed) {\n\t\t\t\t<div class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t\t<div class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n\t\t\t\t\t}\n\t\t\t\t\t@for (day of week.days; track day) {\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[attr.aria-selected]=\"day.context.selected\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (!day.hidden) {\n\t\t\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, isInline: true, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-tertiary-bg)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerMonth, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-month', imports: [NgTemplateOutlet], host: {\n                        role: 'grid',\n                        '(keydown)': 'onKeyDown($event)',\n                    }, encapsulation: ViewEncapsulation.None, template: `\n\t\t@if (viewModel.weekdays.length > 0) {\n\t\t\t<div class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n\t\t\t\t}\n\t\t\t\t@for (weekday of viewModel.weekdays; track $index) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t}\n\t\t@for (week of viewModel.weeks; track week) {\n\t\t\t@if (!week.collapsed) {\n\t\t\t\t<div class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t\t<div class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n\t\t\t\t\t}\n\t\t\t\t\t@for (day of week.days; track day) {\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[attr.aria-selected]=\"day.context.selected\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (!day.hidden) {\n\t\t\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-tertiary-bg)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"] }]\n        }], propDecorators: { month: [{\n                type: Input\n            }] } });\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    constructor() {\n        this.injector = inject(Injector);\n        this._service = inject(NgbDatepickerService);\n        this._calendar = inject(NgbCalendar);\n        this._i18n = inject(NgbDatepickerI18n);\n        this._config = inject(NgbDatepickerConfig);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngbDateAdapter = inject((NgbDateAdapter));\n        this._ngZone = inject(NgZone);\n        this._destroyRef = inject(DestroyRef);\n        this._injector = inject(Injector);\n        this._controlValue = null;\n        this._publicState = {};\n        this._initialized = false;\n        /**\n         * The reference to a custom template for the day.\n         *\n         * Allows to completely override the way a day 'cell' in the calendar is displayed.\n         *\n         * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n         */\n        this.dayTemplate = this._config.dayTemplate;\n        /**\n         * The callback to pass any arbitrary data to the template cell via the\n         * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n         *\n         * `current` is the month that is currently displayed by the datepicker.\n         *\n         * @since 3.3.0\n         */\n        this.dayTemplateData = this._config.dayTemplateData;\n        /**\n         * The number of months to display.\n         */\n        this.displayMonths = this._config.displayMonths;\n        /**\n         * The first day of the week.\n         *\n         * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n         */\n        this.firstDayOfWeek = this._config.firstDayOfWeek;\n        /**\n         * The reference to the custom template for the datepicker footer.\n         *\n         * @since 3.3.0\n         */\n        this.footerTemplate = this._config.footerTemplate;\n        /**\n         * The callback to mark some dates as disabled.\n         *\n         * It is called for each new date when navigating to a different month.\n         *\n         * `current` is the month that is currently displayed by the datepicker.\n         */\n        this.markDisabled = this._config.markDisabled;\n        /**\n         * The latest date that can be displayed or selected.\n         *\n         * If not provided, 'year' select box will display 10 years after the current month.\n         */\n        this.maxDate = this._config.maxDate;\n        /**\n         * The earliest date that can be displayed or selected.\n         *\n         * If not provided, 'year' select box will display 10 years before the current month.\n         */\n        this.minDate = this._config.minDate;\n        /**\n         * Navigation type.\n         *\n         * * `\"select\"` - select boxes for month and navigation arrows\n         * * `\"arrows\"` - only navigation arrows\n         * * `\"none\"` - no navigation visible at all\n         */\n        this.navigation = this._config.navigation;\n        /**\n         * The way of displaying days that don't belong to the current month.\n         *\n         * * `\"visible\"` - days are visible\n         * * `\"hidden\"` - days are hidden, white space preserved\n         * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n         *\n         * For the 2+ months view, days in between months are never shown.\n         */\n        this.outsideDays = this._config.outsideDays;\n        /**\n         * If `true`, week numbers will be displayed.\n         */\n        this.showWeekNumbers = this._config.showWeekNumbers;\n        /**\n         * The date to open calendar with.\n         *\n         * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n         * If nothing or invalid date is provided, calendar will open with current month.\n         *\n         * You could use `navigateTo(date)` method as an alternative.\n         */\n        this.startDate = this._config.startDate;\n        /**\n         * The way weekdays should be displayed.\n         *\n         * * `true` - weekdays are displayed using default width\n         * * `false` - weekdays are not displayed\n         * * `\"short\" | \"long\" | \"narrow\"` - weekdays are displayed using specified width\n         *\n         * @since 9.1.0\n         */\n        this.weekdays = this._config.weekdays;\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 5.2.0\n         */\n        this.dateSelect = new EventEmitter();\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        const cd = inject(ChangeDetectorRef);\n        this._service.dateSelect$.pipe(takeUntilDestroyed()).subscribe((date) => {\n            this.dateSelect.emit(date);\n        });\n        this._service.model$.pipe(takeUntilDestroyed()).subscribe((model) => {\n            const newDate = model.firstDate;\n            const oldDate = this.model ? this.model.firstDate : null;\n            // update public state\n            this._publicState = {\n                maxDate: model.maxDate,\n                minDate: model.minDate,\n                firstDate: model.firstDate,\n                lastDate: model.lastDate,\n                focusedDate: model.focusDate,\n                months: model.months.map((viewModel) => viewModel.firstDate),\n            };\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: () => (navigationPrevented = true),\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            const newSelectedDate = model.selectedDate;\n            const newFocusedDate = model.focusDate;\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            cd.markForCheck();\n        });\n    }\n    /**\n     *  Returns the readonly public state of the datepicker\n     *\n     * @since 5.2.0\n     */\n    get state() {\n        return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n    get calendar() {\n        return this._calendar;\n    }\n    /**\n     * Returns the i18n service used in the specific datepicker instance.\n     *\n     * @since 14.2.0\n     */\n    get i18n() {\n        return this._i18n;\n    }\n    /**\n     *  Focuses on given date.\n     */\n    focusDate(date) {\n        this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n    focusSelect() {\n        this._service.focusSelect();\n    }\n    focus() {\n        afterNextRender({\n            read: () => {\n                this._nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]')?.focus();\n            },\n        }, { injector: this._injector });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? (date.day ? date : { ...date, day: 1 }) : null));\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(() => {\n            const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n            const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter((focusEvent) => {\n                const target = focusEvent.target;\n                const relatedTarget = focusEvent.relatedTarget;\n                return !(target?.classList.contains('ngb-dp-day') &&\n                    relatedTarget?.classList.contains('ngb-dp-day') &&\n                    this._nativeElement.contains(target) &&\n                    this._nativeElement.contains(relatedTarget));\n            }), takeUntilDestroyed(this._destroyRef))\n                .subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n        });\n    }\n    ngOnInit() {\n        if (this.model === undefined) {\n            const inputs = {};\n            [\n                'dayTemplateData',\n                'displayMonths',\n                'markDisabled',\n                'firstDayOfWeek',\n                'navigation',\n                'minDate',\n                'maxDate',\n                'outsideDays',\n                'weekdays',\n            ].forEach((name) => (inputs[name] = this[name]));\n            this._service.set(inputs);\n            this.navigateTo(this.startDate);\n        }\n        if (!this.dayTemplate) {\n            this.dayTemplate = this._defaultDayTemplate;\n        }\n        this._initialized = true;\n    }\n    ngOnChanges(changes) {\n        const inputs = {};\n        [\n            'dayTemplateData',\n            'displayMonths',\n            'markDisabled',\n            'firstDayOfWeek',\n            'navigation',\n            'minDate',\n            'maxDate',\n            'outsideDays',\n            'weekdays',\n        ]\n            .filter((name) => name in changes)\n            .forEach((name) => (inputs[name] = this[name]));\n        this._service.set(inputs);\n        if ('startDate' in changes && this._initialized) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    onNavigateDateSelect(date) {\n        this._service.open(date);\n    }\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this._service.set({ disabled });\n    }\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepicker, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbDatepicker, isStandalone: true, selector: \"ngb-datepicker\", inputs: { contentTemplate: \"contentTemplate\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", weekdays: \"weekdays\" }, outputs: { navigate: \"navigate\", dateSelect: \"dateSelect\" }, host: { properties: { \"class.disabled\": \"model.disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n            NgbDatepickerService,\n        ], queries: [{ propertyName: \"contentTemplateFromContent\", first: true, predicate: NgbDatepickerContent, descendants: true, static: true }], viewQueries: [{ propertyName: \"_defaultDayTemplate\", first: true, predicate: [\"defaultDayTemplate\"], descendants: true, static: true }, { propertyName: \"_contentEl\", first: true, predicate: [\"content\"], descendants: true, static: true }], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t@for (month of model.months; track month) {\n\t\t\t\t<div class=\"ngb-dp-month\">\n\t\t\t\t\t@if (navigation === 'none' || (displayMonths > 1 && navigation === 'select')) {\n\t\t\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t@if (navigation !== 'none') {\n\t\t\t\t<ngb-datepicker-navigation\n\t\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t\t[months]=\"model.months\"\n\t\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\" />\n\t`, isInline: true, styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-tertiary-bg)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-tertiary-bg)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NgbDatepickerDayView, selector: \"[ngbDatepickerDayView]\", inputs: [\"currentMonth\", \"date\", \"disabled\", \"focused\", \"selected\"] }, { kind: \"component\", type: NgbDatepickerMonth, selector: \"ngb-datepicker-month\", inputs: [\"month\"] }, { kind: \"component\", type: NgbDatepickerNavigation, selector: \"ngb-datepicker-navigation\", inputs: [\"date\", \"disabled\", \"months\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"], outputs: [\"navigate\", \"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbDatepicker', selector: 'ngb-datepicker', imports: [NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        '[class.disabled]': 'model.disabled',\n                    }, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t@for (month of model.months; track month) {\n\t\t\t\t<div class=\"ngb-dp-month\">\n\t\t\t\t\t@if (navigation === 'none' || (displayMonths > 1 && navigation === 'select')) {\n\t\t\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t@if (navigation !== 'none') {\n\t\t\t\t<ngb-datepicker-navigation\n\t\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t\t[months]=\"model.months\"\n\t\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\" />\n\t`, providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n                        NgbDatepickerService,\n                    ], styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-tertiary-bg)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-tertiary-bg)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _defaultDayTemplate: [{\n                type: ViewChild,\n                args: ['defaultDayTemplate', { static: true }]\n            }], _contentEl: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], contentTemplate: [{\n                type: Input\n            }], contentTemplateFromContent: [{\n                type: ContentChild,\n                args: [NgbDatepickerContent, { static: true }]\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], dateSelect: [{\n                type: Output\n            }] } });\n\nconst isContainedIn = (element, array) => array ? array.some((item) => item.contains(element)) : false;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n    const isAndroid = () => /Android/.test(navigator.userAgent);\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = (fn) => (isMobile ? () => setTimeout(() => fn(), 100) : fn);\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile(() => {\n            const shouldCloseOnClick = (event) => {\n                const element = event.target;\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                } /* if (type === true) */\n                else {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), filter((e) => e.key === 'Escape'), tap((e) => e.preventDefault()));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n            race([escapes$.pipe(map((_) => 0 /* SOURCE.ESCAPE */)), closeableClicks$.pipe(map((_) => 1 /* SOURCE.CLICK */))]).subscribe((source) => zone.run(() => close(source)));\n        }));\n    }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]',\n    'button:not([disabled])',\n    'input:not([disabled]):not([type=\"hidden\"])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '[contenteditable]',\n    '[tabindex]:not([tabindex=\"-1\"])',\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter((el) => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n    zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map((e) => e.target));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), filter((e) => e.key === 'Tab'), withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n            const [first, last] = getFocusableBoundaryElements(element);\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        });\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map((arr) => arr[1]))\n                .subscribe((lastFocusedElement) => lastFocusedElement.focus());\n        }\n    });\n};\n\nclass NgbRTL {\n    constructor() {\n        this._element = inject(DOCUMENT).documentElement;\n    }\n    isRTL() {\n        return (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRTL, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRTL, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRTL, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\nconst bootstrapPopperMatches = {\n    top: ['top'],\n    bottom: ['bottom'],\n    start: ['left', 'right'],\n    left: ['left'],\n    end: ['right', 'left'],\n    right: ['right'],\n    'top-start': ['top-start', 'top-end'],\n    'top-left': ['top-start'],\n    'top-end': ['top-end', 'top-start'],\n    'top-right': ['top-end'],\n    'bottom-start': ['bottom-start', 'bottom-end'],\n    'bottom-left': ['bottom-start'],\n    'bottom-end': ['bottom-end', 'bottom-start'],\n    'bottom-right': ['bottom-end'],\n    'start-top': ['left-start', 'right-start'],\n    'left-top': ['left-start'],\n    'start-bottom': ['left-end', 'right-end'],\n    'left-bottom': ['left-end'],\n    'end-top': ['right-start', 'left-start'],\n    'right-top': ['right-start'],\n    'end-bottom': ['right-end', 'left-end'],\n    'right-bottom': ['right-end'],\n};\nfunction getPopperClassPlacement(placement, isRTL) {\n    const [leftClass, rightClass] = bootstrapPopperMatches[placement];\n    return isRTL ? rightClass || leftClass : leftClass;\n}\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n    let [primary, secondary] = placement.split('-');\n    const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n    let classnames = [newPrimary];\n    if (secondary) {\n        let newSecondary = secondary;\n        if (primary === 'left' || primary === 'right') {\n            newSecondary = newSecondary\n                .replace(popperStartSecondaryPlacement, 'top')\n                .replace(popperEndSecondaryPlacement, 'bottom');\n        }\n        classnames.push(`${newPrimary}-${newSecondary}`);\n    }\n    if (baseClass) {\n        classnames = classnames.map((classname) => `${baseClass}-${classname}`);\n    }\n    return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nfunction getPopperOptions({ placement, baseClass }, rtl) {\n    let placementVals = Array.isArray(placement)\n        ? placement\n        : placement.split(placementSeparator);\n    // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n    const allowedPlacements = [\n        'top',\n        'bottom',\n        'start',\n        'end',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end',\n        'start-top',\n        'start-bottom',\n        'end-top',\n        'end-bottom',\n    ];\n    // replace auto placement with other placements\n    let hasAuto = placementVals.findIndex((val) => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    const popperPlacements = placementVals.map((_placement) => {\n        return getPopperClassPlacement(_placement, rtl.isRTL());\n    });\n    let mainPlacement = popperPlacements.shift();\n    const bsModifier = {\n        name: 'bootstrapClasses',\n        enabled: !!baseClass,\n        phase: 'write',\n        fn({ state }) {\n            const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n            const popperElement = state.elements.popper;\n            const popperPlacement = state.placement;\n            let className = popperElement.className;\n            // Remove old bootstrap classes\n            className = className.replace(bsClassRegExp, '');\n            // Add current placements\n            className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`;\n            // Remove multiple spaces\n            className = className.trim().replace(spacesRegExp, ' ');\n            // Reassign\n            popperElement.className = className;\n        },\n    };\n    return {\n        placement: mainPlacement,\n        modifiers: [\n            bsModifier,\n            flip,\n            preventOverflow,\n            arrow,\n            {\n                enabled: true,\n                name: 'flip',\n                options: {\n                    fallbackPlacements: popperPlacements,\n                },\n            },\n        ],\n    };\n}\nfunction noop(arg) {\n    return arg;\n}\nfunction ngbPositioning() {\n    const rtl = inject(NgbRTL);\n    let popperInstance = null;\n    return {\n        createPopper(positioningOption) {\n            if (!popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n            }\n        },\n        update() {\n            if (popperInstance) {\n                popperInstance.update();\n            }\n        },\n        setOptions(positioningOption) {\n            if (popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance.setOptions(popperOptions);\n            }\n        },\n        destroy() {\n            if (popperInstance) {\n                popperInstance.destroy();\n                popperInstance = null;\n            }\n        },\n    };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nclass NgbDateParserFormatter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateParserFormatter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateParserFormatter, providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateParserFormatter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }]\n        }] });\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n        if (value != null) {\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    format(date) {\n        return date\n            ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}`\n            : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateISOParserFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateISOParserFormatter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateISOParserFormatter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n    constructor() {\n        super(...arguments);\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n        this.restoreFocus = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbInputDatepickerConfig, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbInputDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbInputDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction addPopperOffset(offset$1) {\n    return (options) => {\n        options.modifiers.push(offset, {\n            name: 'offset',\n            options: {\n                offset: () => offset$1,\n            },\n        });\n        return options;\n    };\n}\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    constructor() {\n        this._parserFormatter = inject(NgbDateParserFormatter);\n        this._elRef = inject((ElementRef));\n        this._vcRef = inject(ViewContainerRef);\n        this._ngZone = inject(NgZone);\n        this._calendar = inject(NgbCalendar);\n        this._dateAdapter = inject((NgbDateAdapter));\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._config = inject(NgbInputDatepickerConfig);\n        this._cRef = null;\n        this._disabled = false;\n        this._elWithFocus = null;\n        this._model = null;\n        this._positioning = ngbPositioning();\n        this._destroyCloseHandlers$ = new Subject();\n        /**\n         * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n         *\n         * * `true` - the popup will close on both date selection and outside click.\n         * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n         * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the datepicker popup, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the popup.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * A selector specifying the element the datepicker popup should be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * A css selector or html element specifying the element the datepicker popup should be positioned against.\n         *\n         * By default the input is used as a target.\n         *\n         * @since 4.2.0\n         */\n        this.positionTarget = this._config.positionTarget;\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * @since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._validatorChange = () => { };\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this._validatorChange = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    validate(c) {\n        const { value } = c;\n        if (value != null) {\n            const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n            if (!ngbDate) {\n                return { ngbDate: { invalid: value } };\n            }\n            if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n                return { ngbDate: { minDate: { minDate: this.minDate, actual: value } } };\n            }\n            if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n                return { ngbDate: { maxDate: { maxDate: this.maxDate, actual: value } } };\n            }\n        }\n        return null;\n    }\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    manualDateChange(value, updateView = false) {\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    isOpen() {\n        return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    open() {\n        if (!this.isOpen()) {\n            this._cRef = this._vcRef.createComponent(NgbDatepicker, { injector: this._injector });\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            });\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container)?.appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            this._elWithFocus = this._document.activeElement;\n            ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n            setTimeout(() => this._cRef?.instance.focus());\n            let hostElement;\n            if (isString(this.positionTarget)) {\n                hostElement = this._document.querySelector(this.positionTarget);\n            }\n            else if (this.positionTarget instanceof HTMLElement) {\n                hostElement = this.positionTarget;\n            }\n            else {\n                hostElement = this._elRef.nativeElement;\n            }\n            if (this.positionTarget && !hostElement) {\n                throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n            }\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._cRef && hostElement) {\n                    this._positioning.createPopper({\n                        hostElement,\n                        targetElement: this._cRef.location.nativeElement,\n                        placement: this.placement,\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._afterRenderRef = afterEveryRender({\n                        mixedReadWrite: () => {\n                            this._positioning.update();\n                        },\n                    }, { injector: this._injector });\n                }\n            });\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n    close() {\n        if (this.isOpen()) {\n            this._cRef?.destroy();\n            this._cRef = null;\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._destroyCloseHandlers$.next();\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n            // restore focus\n            let elementToFocus = this._elWithFocus;\n            if (isString(this.restoreFocus)) {\n                elementToFocus = this._document.querySelector(this.restoreFocus);\n            }\n            else if (this.restoreFocus !== undefined) {\n                elementToFocus = this.restoreFocus;\n            }\n            // in IE document.activeElement can contain an object without 'focus()' sometimes\n            if (elementToFocus && elementToFocus['focus']) {\n                elementToFocus.focus();\n            }\n            else {\n                this._document.body.focus();\n            }\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    onBlur() {\n        this._onTouched();\n    }\n    onFocus() {\n        this._elWithFocus = this._elRef.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n            if (this.isOpen()) {\n                if (changes['minDate']) {\n                    this._cRef.setInput('minDate', this.minDate);\n                }\n                if (changes['maxDate']) {\n                    this._cRef.setInput('maxDate', this.maxDate);\n                }\n            }\n        }\n        if (changes['datepickerClass']) {\n            const { currentValue, previousValue } = changes['datepickerClass'];\n            this._applyPopupClass(currentValue, previousValue);\n        }\n        if (changes['autoClose'] && this.isOpen()) {\n            this._setCloseHandlers();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    _applyDatepickerInputs(datepickerComponentRef) {\n        [\n            'contentTemplate',\n            'dayTemplate',\n            'dayTemplateData',\n            'displayMonths',\n            'firstDayOfWeek',\n            'footerTemplate',\n            'markDisabled',\n            'minDate',\n            'maxDate',\n            'navigation',\n            'outsideDays',\n            'showNavigation',\n            'showWeekNumbers',\n            'weekdays',\n        ].forEach((inputName) => {\n            if (this[inputName] !== undefined) {\n                datepickerComponentRef.setInput(inputName, this[inputName]);\n            }\n        });\n        datepickerComponentRef.setInput('startDate', this.startDate || this._model);\n    }\n    _applyPopupClass(newClass, oldClass) {\n        const popupEl = this._cRef?.location.nativeElement;\n        if (popupEl) {\n            if (newClass) {\n                popupEl.classList.add(newClass);\n            }\n            if (oldClass) {\n                popupEl.classList.remove(oldClass);\n            }\n        }\n    }\n    _applyPopupStyling(nativeElement) {\n        nativeElement.classList.add('dropdown-menu', 'show');\n        if (this.container === 'body') {\n            nativeElement.classList.add('ngb-dp-body');\n        }\n        this._applyPopupClass(this.datepickerClass);\n    }\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe((navigateEvent) => this.navigate.emit(navigateEvent));\n        datepickerInstance.dateSelect.subscribe((date) => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        });\n    }\n    _writeModelValue(model) {\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._elRef.nativeElement.value = value;\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    _fromDateStruct(date) {\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbInputDatepicker, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbInputDatepicker, isStandalone: true, selector: \"input[ngbDatepicker]\", inputs: { autoClose: \"autoClose\", contentTemplate: \"contentTemplate\", datepickerClass: \"datepickerClass\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", placement: \"placement\", popperOptions: \"popperOptions\", restoreFocus: \"restoreFocus\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\", weekdays: \"weekdays\", disabled: \"disabled\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, host: { listeners: { \"input\": \"manualDateChange($event.target.value)\", \"change\": \"manualDateChange($event.target.value, true)\", \"focus\": \"onFocus()\", \"blur\": \"onBlur()\" }, properties: { \"disabled\": \"disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n        ], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbInputDatepicker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(focus)': 'onFocus()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n                    ],\n                }]\n        }], propDecorators: { autoClose: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }], datepickerClass: [{\n                type: Input\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], dateSelect: [{\n                type: Output\n            }], navigate: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass NgbCalendarHijri extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return this.fromGregorian(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isNumber(date.year) &&\n            isNumber(date.month) &&\n            isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime()));\n    }\n    _setDay(date, day) {\n        day = +day;\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n        return date;\n    }\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHijri, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHijri }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHijri, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear$1(gDate) {\n    const year = gDate.getFullYear();\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n        let julianDay = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (gYear - 1) +\n            Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) +\n            Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        const days = julianDay - ISLAMIC_EPOCH;\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH$1, quadricent = Math.floor(depoch / 146097), dqc = mod$1(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod$1(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod$1(dcent, 1461), yindex = Math.floor(dquad / 365);\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        const gYearStart = GREGORIAN_EPOCH$1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        const yearday = wjd - gYearStart;\n        const tjd = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        const tjd2 = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        let length = 29 + (month % 2);\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicCivil, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicCivil }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicCivil, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010',\n    '110101010100',\n    '111011001001',\n    '011011010100',\n    '011011101010',\n    // 1305-1309\n    '001101101100',\n    '101010101101',\n    '010101010101',\n    '011010101001',\n    '011110010010',\n    // 1310-1314\n    '101110101001',\n    '010111010100',\n    '101011011010',\n    '010101011100',\n    '110100101101',\n    // 1315-1319\n    '011010010101',\n    '011101001010',\n    '101101010100',\n    '101101101010',\n    '010110101101',\n    // 1320-1324\n    '010010101110',\n    '101001001111',\n    '010100010111',\n    '011010001011',\n    '011010100101',\n    // 1325-1329\n    '101011010101',\n    '001011010110',\n    '100101011011',\n    '010010011101',\n    '101001001101',\n    // 1330-1334\n    '110100100110',\n    '110110010101',\n    '010110101100',\n    '100110110110',\n    '001010111010',\n    // 1335-1339\n    '101001011011',\n    '010100101011',\n    '101010010101',\n    '011011001010',\n    '101011101001',\n    // 1340-1344\n    '001011110100',\n    '100101110110',\n    '001010110110',\n    '100101010110',\n    '101011001010',\n    // 1345-1349\n    '101110100100',\n    '101111010010',\n    '010111011001',\n    '001011011100',\n    '100101101101',\n    // 1350-1354\n    '010101001101',\n    '101010100101',\n    '101101010010',\n    '101110100101',\n    '010110110100',\n    // 1355-1359\n    '100110110110',\n    '010101010111',\n    '001010010111',\n    '010101001011',\n    '011010100011',\n    // 1360-1364\n    '011101010010',\n    '101101100101',\n    '010101101010',\n    '101010101011',\n    '010100101011',\n    // 1365-1369\n    '110010010101',\n    '110101001010',\n    '110110100101',\n    '010111001010',\n    '101011010110',\n    // 1370-1374\n    '100101010111',\n    '010010101011',\n    '100101001011',\n    '101010100101',\n    '101101010010',\n    // 1375-1379\n    '101101101010',\n    '010101110101',\n    '001001110110',\n    '100010110111',\n    '010001011011',\n    // 1380-1384\n    '010101010101',\n    '010110101001',\n    '010110110100',\n    '100111011010',\n    '010011011101',\n    // 1385-1389\n    '001001101110',\n    '100100110110',\n    '101010101010',\n    '110101010100',\n    '110110110010',\n    // 1390-1394\n    '010111010101',\n    '001011011010',\n    '100101011011',\n    '010010101011',\n    '101001010101',\n    // 1395-1399\n    '101101001001',\n    '101101100100',\n    '101101110001',\n    '010110110100',\n    '101010110101',\n    // 1400-1404\n    '101001010101',\n    '110100100101',\n    '111010010010',\n    '111011001001',\n    '011011010100',\n    // 1405-1409\n    '101011101001',\n    '100101101011',\n    '010010101011',\n    '101010010011',\n    '110101001001',\n    // 1410-1414\n    '110110100100',\n    '110110110010',\n    '101010111001',\n    '010010111010',\n    '101001011011',\n    // 1415-1419\n    '010100101011',\n    '101010010101',\n    '101100101010',\n    '101101010101',\n    '010101011100',\n    // 1420-1424\n    '010010111101',\n    '001000111101',\n    '100100011101',\n    '101010010101',\n    '101101001010',\n    // 1425-1429\n    '101101011010',\n    '010101101101',\n    '001010110110',\n    '100100111011',\n    '010010011011',\n    // 1430-1434\n    '011001010101',\n    '011010101001',\n    '011101010100',\n    '101101101010',\n    '010101101100',\n    // 1435-1439\n    '101010101101',\n    '010101010101',\n    '101100101001',\n    '101110010010',\n    '101110101001',\n    // 1440-1444\n    '010111010100',\n    '101011011010',\n    '010101011010',\n    '101010101011',\n    '010110010101',\n    // 1445-1449\n    '011101001001',\n    '011101100100',\n    '101110101010',\n    '010110110101',\n    '001010110110',\n    // 1450-1454\n    '101001010110',\n    '111001001101',\n    '101100100101',\n    '101101010010',\n    '101101101010',\n    // 1455-1459\n    '010110101101',\n    '001010101110',\n    '100100101111',\n    '010010010111',\n    '011001001011',\n    // 1460-1464\n    '011010100101',\n    '011010101100',\n    '101011010110',\n    '010101011101',\n    '010010011101',\n    // 1465-1469\n    '101001001101',\n    '110100010110',\n    '110110010101',\n    '010110101010',\n    '010110110101',\n    // 1470-1474\n    '001011011010',\n    '100101011011',\n    '010010101101',\n    '010110010101',\n    '011011001010',\n    // 1475-1479\n    '011011100100',\n    '101011101010',\n    '010011110101',\n    '001010110110',\n    '100101010110',\n    // 1480-1484\n    '101010101010',\n    '101101010100',\n    '101111010010',\n    '010111011001',\n    '001011101010',\n    // 1485-1489\n    '100101101101',\n    '010010101101',\n    '101010010101',\n    '101101001010',\n    '101110100101',\n    // 1490-1494\n    '010110110010',\n    '100110110101',\n    '010011010110',\n    '101010010111',\n    '010101000111',\n    // 1495-1499\n    '011010010011',\n    '011101001001',\n    '101101010101',\n    '010101101010',\n    '101001101011',\n    // 1500-1504\n    '010100101011',\n    '101010001011',\n    '110101000110',\n    '110110100011',\n    '010111001010',\n    // 1505-1509\n    '101011010110',\n    '010011011011',\n    '001001101011',\n    '100101001011',\n    '101010100101',\n    // 1510-1514\n    '101101010010',\n    '101101101001',\n    '010101110101',\n    '000101110110',\n    '100010110111',\n    // 1515-1519\n    '001001011011',\n    '010100101011',\n    '010101100101',\n    '010110110100',\n    '100111011010',\n    // 1520-1524\n    '010011101101',\n    '000101101101',\n    '100010110110',\n    '101010100110',\n    '110101010010',\n    // 1525-1529\n    '110110101001',\n    '010111010100',\n    '101011011010',\n    '100101011011',\n    '010010101011',\n    // 1530-1534\n    '011001010011',\n    '011100101001',\n    '011101100010',\n    '101110101001',\n    '010110110010',\n    // 1535-1539\n    '101010110101',\n    '010101010101',\n    '101100100101',\n    '110110010010',\n    '111011001001',\n    // 1540-1544\n    '011011010010',\n    '101011101001',\n    '010101101011',\n    '010010101011',\n    '101001010101',\n    // 1545-1549\n    '110100101001',\n    '110101010100',\n    '110110101010',\n    '100110110101',\n    '010010111010',\n    // 1550-1554\n    '101000111011',\n    '010010011011',\n    '101001001101',\n    '101010101010',\n    '101011010101',\n    // 1555-1559\n    '001011011010',\n    '100101011101',\n    '010001011110',\n    '101000101110',\n    '110010011010',\n    // 1560-1564\n    '110101010101',\n    '011010110010',\n    '011010111001',\n    '010010111010',\n    '101001011101',\n    // 1565-1569\n    '010100101101',\n    '101010010101',\n    '101101010010',\n    '101110101000',\n    '101110110100',\n    // 1570-1574\n    '010110111001',\n    '001011011010',\n    '100101011010',\n    '101101001010',\n    '110110100100',\n    // 1575-1579\n    '111011010001',\n    '011011101000',\n    '101101101010',\n    '010101101101',\n    '010100110101',\n    // 1580-1584\n    '011010010101',\n    '110101001010',\n    '110110101000',\n    '110111010100',\n    '011011011010',\n    // 1585-1589\n    '010101011011',\n    '001010011101',\n    '011000101011',\n    '101100010101',\n    '101101001010',\n    // 1590-1594\n    '101110010101',\n    '010110101010',\n    '101010101110',\n    '100100101110',\n    '110010001111',\n    // 1595-1599\n    '010100100111',\n    '011010010101',\n    '011010101010',\n    '101011010110',\n    '010101011101',\n    // 1600\n    '001010011101',\n];\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        let hDay = 1, hMonth = 0, hYear = 1300;\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n            return null;\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicUmalqura, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicUmalqura }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarIslamicUmalqura, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian$3(jalaliDate) {\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    let date = julianToGregorian$1(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian$3(gdate) {\n    let g2d = gregorianToJulian$1(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n    return date;\n}\nfunction setJalaliDay(date, day) {\n    let mDays = getDaysPerMonth$1(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth$1(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth$1(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    let breaks = [\n        -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178,\n    ];\n    const breaksLength = breaks.length;\n    const gYear = jalaliYear + 621;\n    let leapJ = -14;\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n        jp = jm;\n    }\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n    if (mod(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    let leap = mod(mod(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian$1(julianDayNumber) {\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12) + 1;\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian$1(gy, gm, gd) {\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n    let gy = julianToGregorian$1(julianDayNumber).getFullYear(), // Calculate Gregorian year (gy).\n    jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian$1(gy, 3, r.march), jalaliDay, jalaliMonth, numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    let r = jalCal(jYear);\n    return gregorianToJulian$1(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth$1(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$3(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian$3(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian$3(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromGregorian$3(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isInteger(date.year) &&\n            isInteger(date.month) &&\n            isInteger(date.day) &&\n            !isNaN(toGregorian$3(date).getTime()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarPersian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarPersian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarPersian, decorators: [{\n            type: Injectable\n        }] });\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\nfunction isGregorianLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    let dayOfWeek = dayNumber % 7; // 0 == Monday\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n    if (year != null) {\n        let b = (year * 12 + 17) % 19;\n        return b >= (b < 0 ? -7 : 12);\n    }\n    return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n    let leapYear = isHebrewLeapYear(year);\n    let daysInMonth = leapYear\n        ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29]\n        : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\nfunction setHebrewDay(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$2(gdate) {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n    let julianDay = GREGORIAN_EPOCH -\n        1 +\n        365 * (gYear - 1) +\n        Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) +\n        Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    let daysSinceHebEpoch = julianDay - 347997;\n    let monthsSinceHebEpoch = Math.floor((daysSinceHebEpoch * PARTS_PER_DAY) / PARTS_PER_MONTH);\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    let hMonth = 1;\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$2(hebrewDate) {\n    const hYear = hebrewDate.year;\n    const hMonth = hebrewDate.month;\n    const hDay = hebrewDate.day;\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    let gYear = 1970;\n    let gMonth = 1;\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    const hArray10_19 = [\n        '\\u05d9',\n        '\\u05d9\\u05d0',\n        '\\u05d9\\u05d1',\n        '\\u05d9\\u05d2',\n        '\\u05d9\\u05d3',\n        '\\u05d8\\u05d5',\n        '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6',\n        '\\u05d9\\u05d7',\n        '\\u05d9\\u05d8',\n    ];\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    const hArray100_900 = [\n        '',\n        '\\u05e7',\n        '\\u05e8',\n        '\\u05e9',\n        '\\u05ea',\n        '\\u05ea\\u05e7',\n        '\\u05ea\\u05e8',\n        '\\u05ea\\u05e9',\n        '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7',\n    ];\n    const hArray1000_9000 = [\n        '',\n        '\\u05d0',\n        '\\u05d1',\n        '\\u05d1\\u05d0',\n        '\\u05d1\\u05d1',\n        '\\u05d4',\n        '\\u05d4\\u05d0',\n        '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0',\n        '\\u05d4\\u05d1\\u05d1',\n    ];\n    const geresh = '\\u05f3', gershaim = '\\u05f4';\n    let mem = 0;\n    let result = [];\n    let step = 0;\n    while (numerals > 0) {\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    isValid(date) {\n        if (date != null) {\n            let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n            b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n            b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n            return b && !isNaN(toGregorian$2(date).getTime());\n        }\n        return false;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$2(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    getToday() {\n        return fromGregorian$2(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n    toGregorian(date) {\n        return fromJSDate(toGregorian$2(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n    fromGregorian(date) {\n        return fromGregorian$2(toJSDate(date));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarHebrew, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS$1 = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS$1 = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = [\n    'תשרי',\n    'חשון',\n    'כסלו',\n    'טבת',\n    'שבט',\n    'אדר א׳',\n    'אדר ב׳',\n    'ניסן',\n    'אייר',\n    'סיון',\n    'תמוז',\n    'אב',\n    'אלול',\n];\n/**\n * @since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n        return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS$1[month - 1] || '';\n    }\n    getWeekdayLabel(weekday, width) {\n        return WEEKDAYS$1[weekday - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    getDayNumerals(date) {\n        return hebrewNumerals(date.day);\n    }\n    getWeekNumerals(weekNumber) {\n        return hebrewNumerals(weekNumber);\n    }\n    getYearNumerals(year) {\n        return hebrewNumerals(year);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nHebrew, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nfunction toGregorian$1(date) {\n    return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nfunction fromGregorian$1(gdate) {\n    return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n\n/**\n * @since 9.1.0\n */\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n    getToday() {\n        return fromGregorian$1(new Date());\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toGregorian$1(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromGregorian$1(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toGregorian$1(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toGregorian$1(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toGregorian$1(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year - 543 &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarBuddhist, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarBuddhist }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarBuddhist, decorators: [{\n            type: Injectable\n        }] });\n\nconst JD_EPOCH = 1724220.5;\nconst DAYSPERMONTH = [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 5];\n/**\n * Determine whether this date is in a leap year.\n * * `year` is the year to examine\n * returns boolean - true if this is a leap year, false if not\n * */\nfunction isEthiopianLeapYear(year) {\n    if (year != null) {\n        return year % 4 == 3 || year % 4 == -1;\n    }\n    return false;\n}\n/**\n * Sets the Ethiopian year.\n * * `date` is Ethiopian date\n * * `yearValue` incremented year\n * returns NgbDate - ethiopian date\n * */\nfunction setEthiopianYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\n/**\n * Sets the Ethiopian month.\n * * `date` is Ethiopian date\n * * `val` incremented month\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianMonth(date, val) {\n    val = +val;\n    date.year = date.year + Math.floor((val - 1) / 13);\n    date.month = Math.floor((((val - 1) % 13) + 13) % 13) + 1;\n    return date;\n}\n/**\n * Sets the Ethiopian day.\n * * `date` is Ethiopian date\n * * `day` incremented day\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianDay(date, day) {\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setEthiopianMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setEthiopianMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction getDaysPerMonth(month, year) {\n    let leapYear = isEthiopianLeapYear(year);\n    return DAYSPERMONTH[month - 1] + (month === 13 && leapYear ? 1 : 0);\n}\nfunction toGregorian(ethiopianDate) {\n    let jdn = ethiopianToJulian(ethiopianDate.year, ethiopianDate.month, ethiopianDate.day);\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\nfunction fromGregorian(gdate) {\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return juilianToEthiopia(g2d);\n}\nfunction ethiopianToJulian(year, month, day) {\n    if (year < 0) {\n        year++;\n    } // No year zero\n    return day + (month - 1) * 30 + (year - 1) * 365 + Math.floor(year / 4) + JD_EPOCH - 1;\n}\nfunction juilianToEthiopia(jd) {\n    let c = Math.floor(jd) + 0.5 - JD_EPOCH;\n    let year = Math.floor((c - Math.floor((c + 366) / 1461)) / 365) + 1;\n    if (year <= 0) {\n        year--;\n    } // No year zero\n    c = Math.floor(jd) + 0.5 - ethiopianToJulian(year, 1, 1);\n    let month = Math.floor(c / 30) + 1;\n    let day = c - (month - 1) * 30 + 1;\n    return new NgbDate(year, month, day);\n}\nfunction julianToGregorian(jd) {\n    let z = Math.floor(jd + 0.5);\n    let a = Math.floor((z - 1867216.25) / 36524.25);\n    a = z + 1 + a - Math.floor(a / 4);\n    let b = a + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    let d = Math.floor(365.25 * c);\n    let e = Math.floor((b - d) / 30.6001);\n    let day = b - d - Math.floor(e * 30.6001);\n    let month = e - (e > 13.5 ? 13 : 1);\n    let year = c - (month > 2.5 ? 4716 : 4715);\n    if (year <= 0) {\n        year--;\n    } // No year zero\n    return new Date(year, month, day);\n}\nfunction gregorianToJulian(year, month, day) {\n    if (year < 0) {\n        year++;\n    } // No year zero\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\n    if (month < 3) {\n        month += 12;\n        year--;\n    }\n    let a = Math.floor(year / 100);\n    let b = 2 - a + Math.floor(a / 4);\n    return Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5;\n}\n\n/**\n * @since 16.0.0\n */\nclass NgbCalendarEthiopian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths(year) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setEthiopianYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setEthiopianMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setEthiopianDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const dt = Math.floor(ethiopianToJulian(date.year, date.month, date.day) + 3) % 7;\n        return dt === 0 ? 7 : dt;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getToday() {\n        return fromGregorian(new Date());\n    }\n    isValid(date) {\n        return (date &&\n            isInteger(date.year) &&\n            isInteger(date.month) &&\n            isInteger(date.day) &&\n            !isNaN(toGregorian(date).getTime()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarEthiopian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarEthiopian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbCalendarEthiopian, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS = ['እሑድ', 'ሰኞ', 'ማክሰኞ', 'ረቡዕ', 'ሓሙስ', 'ዓርብ', 'ቅዳሜ'];\nconst MONTHS = ['መስከረም', 'ጥቅምት', 'ኅዳር', 'ታህሣሥ', 'ጥር', 'የካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰኔ', 'ሐምሌ', 'ነሐሴ', 'ጳጉሜ'];\n/**\n * @since 16.0.0\n */\nclass NgbDatepickerI18nAmharic extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n        return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n        return MONTHS[month - 1];\n    }\n    getWeekdayLabel(weekday, width) {\n        return WEEKDAYS[weekday - 1];\n    }\n    getDayAriaLabel(date) {\n        return `${date.day} ${this.getMonthFullName(date.month, date.year)} ${date.year}`;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nAmharic, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nAmharic }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerI18nAmharic, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    fromModel(date) {\n        return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? this._toNativeDate(date)\n            : null;\n    }\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeUTCAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeUTCAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDateNativeUTCAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\nclass NgbDatepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerModule, imports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth], exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: NGB_DATEPICKER_DIRECTIVES,\n                    imports: NGB_DATEPICKER_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n        this.container = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nclass NgbDropdownItem {\n    constructor() {\n        this._disabled = false;\n        this.nativeElement = inject(ElementRef).nativeElement;\n        this.tabindex = 0;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || value === true; // accept an empty attribute as true\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdownItem, isStandalone: true, selector: \"[ngbDropdownItem]\", inputs: { tabindex: \"tabindex\", disabled: \"disabled\" }, host: { properties: { \"class.disabled\": \"disabled\", \"tabIndex\": \"disabled ? -1 : tabindex\" }, classAttribute: \"dropdown-item\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownItem]',\n                    host: {\n                        class: 'dropdown-item',\n                        '[class.disabled]': 'disabled',\n                        '[tabIndex]': 'disabled ? -1 : tabindex',\n                    },\n                }]\n        }], propDecorators: { tabindex: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * A directive that will be applied if dropdown item is a button.\n * It will only set the disabled property.\n */\nclass NgbDropdownButtonItem {\n    constructor() {\n        this.item = inject(NgbDropdownItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownButtonItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdownButtonItem, isStandalone: true, selector: \"button[ngbDropdownItem]\", host: { properties: { \"disabled\": \"item.disabled\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownButtonItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbDropdownItem]',\n                    host: { '[disabled]': 'item.disabled' },\n                }]\n        }] });\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    constructor() {\n        this.dropdown = inject(NgbDropdown);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdownMenu, isStandalone: true, selector: \"[ngbDropdownMenu]\", host: { listeners: { \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Enter\": \"dropdown.onKeyDown($event)\", \"keydown.Space\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.show\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-menu\" }, queries: [{ propertyName: \"menuItems\", predicate: NgbDropdownItem }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: {\n                        class: 'dropdown-menu',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                }]\n        }], propDecorators: { menuItems: [{\n                type: ContentChildren,\n                args: [NgbDropdownItem]\n            }] } });\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nclass NgbDropdownAnchor {\n    constructor() {\n        this.dropdown = inject(NgbDropdown);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownAnchor, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdownAnchor, isStandalone: true, selector: \"[ngbDropdownAnchor]\", host: { properties: { \"class.show\": \"dropdown.isOpen()\", \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownAnchor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    host: {\n                        class: 'dropdown-toggle',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                    },\n                }]\n        }] });\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdownToggle, isStandalone: true, selector: \"[ngbDropdownToggle]\", host: { listeners: { \"click\": \"dropdown.toggle()\", \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.show\": \"dropdown.isOpen()\", \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        class: 'dropdown-toggle',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'dropdown.toggle()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }],\n                }]\n        }] });\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    constructor() {\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._config = inject(NgbDropdownConfig);\n        this._document = inject(DOCUMENT);\n        this._injector = inject(Injector);\n        this._ngZone = inject(NgZone);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._destroyCloseHandlers$ = new Subject();\n        this._bodyContainer = null;\n        this._positioning = ngbPositioning();\n        /**\n         * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n         *\n         * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n         * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n         * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * The preferred placement of the dropdown, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the dropdown.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * A selector specifying the element the dropdown should be appended to.\n         * Currently only supports \"body\".\n         *\n         * @since 4.1.0\n         */\n        this.container = this._config.container;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.display) {\n            this.display = this._nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n        }\n    }\n    ngAfterContentInit() {\n        afterNextRender({\n            write: () => {\n                this._applyPlacementClasses();\n                if (this._open) {\n                    this._setCloseHandlers();\n                }\n            },\n        }, { injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.firstChange) {\n            this._positioning.setOptions({\n                hostElement: this._anchor.nativeElement,\n                targetElement: this._bodyContainer || this._menu.nativeElement,\n                placement: this.placement,\n            });\n            this._applyPlacementClasses();\n        }\n        if (changes.dropdownClass) {\n            const { currentValue, previousValue } = changes.dropdownClass;\n            this._applyCustomDropdownClass(currentValue, previousValue);\n        }\n        if (changes.autoClose && this._open) {\n            this.autoClose = changes.autoClose.currentValue;\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    isOpen() {\n        return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n            if (this._anchor) {\n                this._anchor.nativeElement.focus();\n                if (this.display === 'dynamic') {\n                    this._ngZone.runOutsideAngular(() => {\n                        this._positioning.createPopper({\n                            hostElement: this._anchor.nativeElement,\n                            targetElement: this._bodyContainer || this._menu.nativeElement,\n                            placement: this.placement,\n                            updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                        });\n                        this._applyPlacementClasses();\n                        this._afterRenderRef = afterEveryRender({\n                            write: () => {\n                                this._positionMenu();\n                            },\n                        }, { injector: this._injector });\n                    });\n                }\n            }\n        }\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (source) => {\n            this.close();\n            if (source === 0 /* SOURCE.ESCAPE */) {\n                this._anchor.nativeElement.focus();\n            }\n        }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n    close() {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._destroyCloseHandlers$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    onKeyDown(event) {\n        const { key } = event;\n        const itemElements = this._getMenuElements();\n        let position = -1;\n        let itemElement = null;\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((item, index) => {\n                if (item.contains(event.target)) {\n                    itemElement = item;\n                }\n                if (item === getActiveElement(this._document)) {\n                    position = index;\n                }\n            });\n        }\n        // closing on Enter / Space\n        if (key === ' ' || key === 'Enter') {\n            if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n                // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                // So we have to register a one-time click handler that will fire after any user defined click handlers\n                // to close the dropdown\n                fromEvent(itemElement, 'click')\n                    .pipe(take(1))\n                    .subscribe(() => this.close());\n            }\n            return;\n        }\n        if (key === 'Tab') {\n            if (event.target && this.isOpen() && this.autoClose) {\n                if (this._anchor.nativeElement === event.target) {\n                    if (this.container === 'body' && !event.shiftKey) {\n                        /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n                        this._menu.nativeElement.setAttribute('tabindex', '0');\n                        this._menu.nativeElement.focus();\n                        this._menu.nativeElement.removeAttribute('tabindex');\n                    }\n                    else if (event.shiftKey) {\n                        this.close();\n                    }\n                    return;\n                }\n                else if (this.container === 'body') {\n                    const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n                    if (event.shiftKey && event.target === focusableElements[0]) {\n                        this._anchor.nativeElement.focus();\n                        event.preventDefault();\n                    }\n                    else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n                        this._anchor.nativeElement.focus();\n                        this.close();\n                    }\n                }\n                else {\n                    fromEvent(event.target, 'focusout')\n                        .pipe(take(1))\n                        .subscribe(({ relatedTarget }) => {\n                        if (!this._nativeElement.contains(relatedTarget)) {\n                            this.close();\n                        }\n                    });\n                }\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || itemElement) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case 'ArrowDown':\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case 'ArrowUp':\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case 'Home':\n                        position = 0;\n                        break;\n                    case 'End':\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _isDropup() {\n        return this._nativeElement.classList.contains('dropup');\n    }\n    _isEventFromToggle(event) {\n        return this._anchor.nativeElement.contains(event.target);\n    }\n    _getMenuElements() {\n        return this._menu\n            ? this._menu.menuItems.filter(({ disabled }) => !disabled).map(({ nativeElement }) => nativeElement)\n            : [];\n    }\n    _positionMenu() {\n        const menu = this._menu;\n        if (this.isOpen() && menu) {\n            if (this.display === 'dynamic') {\n                this._positioning.update();\n                this._applyPlacementClasses();\n            }\n            else {\n                this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n            }\n        }\n    }\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n    _resetContainer() {\n        if (this._menu) {\n            this._nativeElement.appendChild(this._menu.nativeElement);\n        }\n        if (this._bodyContainer) {\n            this._document.body.removeChild(this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            const dropdownMenuElement = this._menu.nativeElement;\n            const bodyContainer = (this._bodyContainer = this._bodyContainer || this._document.createElement('div'));\n            // Override some styles to have the positioning working\n            bodyContainer.style.position = 'absolute';\n            dropdownMenuElement.style.position = 'static';\n            bodyContainer.style.zIndex = '1055';\n            bodyContainer.appendChild(dropdownMenuElement);\n            this._document.body.appendChild(bodyContainer);\n        }\n        this._applyCustomDropdownClass(this.dropdownClass);\n    }\n    _applyCustomDropdownClass(newClass, oldClass) {\n        const targetElement = this.container === 'body' ? this._bodyContainer : this._nativeElement;\n        if (targetElement) {\n            if (oldClass) {\n                targetElement.classList.remove(oldClass);\n            }\n            if (newClass) {\n                targetElement.classList.add(newClass);\n            }\n        }\n    }\n    _applyPlacementClasses(placement) {\n        if (this._menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            // remove the current placement classes\n            this._nativeElement.classList.remove('dropup', 'dropdown');\n            if (this.display === 'static') {\n                this._menu.nativeElement.setAttribute('data-bs-popper', 'static');\n            }\n            else {\n                this._menu.nativeElement.removeAttribute('data-bs-popper');\n            }\n            /*\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            this._nativeElement.classList.add(dropdownClass);\n            if (this._bodyContainer) {\n                this._bodyContainer.classList.remove('dropup', 'dropdown');\n                this._bodyContainer.classList.add(dropdownClass);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdown, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbDropdown, isStandalone: true, selector: \"[ngbDropdown]\", inputs: { autoClose: \"autoClose\", dropdownClass: \"dropdownClass\", _open: [\"open\", \"_open\"], placement: \"placement\", popperOptions: \"popperOptions\", container: \"container\", display: \"display\" }, outputs: { openChange: \"openChange\" }, host: { properties: { \"class.show\": \"isOpen()\" } }, queries: [{ propertyName: \"_menu\", first: true, predicate: NgbDropdownMenu, descendants: true }, { propertyName: \"_anchor\", first: true, predicate: NgbDropdownAnchor, descendants: true }], exportAs: [\"ngbDropdown\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdown, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdown]',\n                    exportAs: 'ngbDropdown',\n                    host: { '[class.show]': 'isOpen()' },\n                }]\n        }], propDecorators: { _menu: [{\n                type: ContentChild,\n                args: [NgbDropdownMenu, { static: false }]\n            }], _anchor: [{\n                type: ContentChild,\n                args: [NgbDropdownAnchor, { static: false }]\n            }], autoClose: [{\n                type: Input\n            }], dropdownClass: [{\n                type: Input\n            }], _open: [{\n                type: Input,\n                args: ['open']\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }] } });\n\nconst NGB_DROPDOWN_DIRECTIVES = [\n    NgbDropdown,\n    NgbDropdownAnchor,\n    NgbDropdownToggle,\n    NgbDropdownMenu,\n    NgbDropdownItem,\n    NgbDropdownButtonItem,\n];\nclass NgbDropdownModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownModule, imports: [NgbDropdown,\n            NgbDropdownAnchor,\n            NgbDropdownToggle,\n            NgbDropdownMenu,\n            NgbDropdownItem,\n            NgbDropdownButtonItem], exports: [NgbDropdown,\n            NgbDropdownAnchor,\n            NgbDropdownToggle,\n            NgbDropdownMenu,\n            NgbDropdownItem,\n            NgbDropdownButtonItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_DROPDOWN_DIRECTIVES,\n                    exports: NGB_DROPDOWN_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\nclass NgbModalConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.backdrop = true;\n        this.fullscreen = false;\n        this.keyboard = true;\n        this.role = 'dialog';\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass ContentRef {\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nclass PopupService {\n    constructor(_componentType) {\n        this._componentType = _componentType;\n        this._windowRef = null;\n        this._contentRef = null;\n        this._document = inject(DOCUMENT);\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._viewContainerRef = inject(ViewContainerRef);\n        this._ngZone = inject(NgZone);\n    }\n    open(content, templateContext, animation = false) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, templateContext);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n                injector: this._injector,\n                projectableNodes: this._contentRef.nodes,\n            });\n        }\n        const { nativeElement } = this._windowRef.location;\n        const nextRenderSubject = new Subject();\n        afterNextRender({\n            mixedReadWrite: () => {\n                nextRenderSubject.next();\n                nextRenderSubject.complete();\n            },\n        }, {\n            injector: this._injector,\n        });\n        const transition$ = nextRenderSubject.pipe(mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({ classList }) => classList.add('show'), {\n            animation,\n            runningTransition: 'continue',\n        })));\n        return { windowRef: this._windowRef, transition$ };\n    }\n    close(animation = false) {\n        if (!this._windowRef) {\n            return of(undefined);\n        }\n        return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({ classList }) => classList.remove('show'), { animation, runningTransition: 'stop' }).pipe(tap(() => {\n            this._windowRef?.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._windowRef = null;\n            this._contentRef = null;\n        }));\n    }\n    _getContentRef(content, templateContext) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            const viewRef = content.createEmbeddedView(templateContext);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._document.createTextNode(`${content}`)]]);\n        }\n    }\n}\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\nclass ScrollBar {\n    constructor() {\n        this._document = inject(DOCUMENT);\n    }\n    /**\n     * To be called to hide a potential vertical scrollbar:\n     * - if a scrollbar is there and has a width greater than 0, adds some compensation\n     * padding to the body to keep the same layout as when the scrollbar is there\n     * - adds overflow: hidden\n     *\n     * @return a callback used to revert the change\n     */\n    hide() {\n        const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n        const body = this._document.body;\n        const bodyStyle = body.style;\n        const { overflow, paddingRight } = bodyStyle;\n        if (scrollbarWidth > 0) {\n            const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n            bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n        }\n        bodyStyle.overflow = 'hidden';\n        return () => {\n            if (scrollbarWidth > 0) {\n                bodyStyle.paddingRight = paddingRight;\n            }\n            bodyStyle.overflow = overflow;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollBar, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollBar, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst BACKDROP_ATTRIBUTES = ['animation', 'backdropClass'];\nclass NgbModalBackdrop {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._cdRef = inject(ChangeDetectorRef);\n    }\n    ngOnInit() {\n        afterNextRender({\n            mixedReadWrite: () => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' }),\n        }, { injector: this._injector });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    updateOptions(options) {\n        BACKDROP_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                this[optionName] = options[optionName];\n            }\n        });\n        this._cdRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalBackdrop, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbModalBackdrop, isStandalone: true, selector: \"ngb-modal-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\" }, host: { properties: { \"class\": \"\\\"modal-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" }, styleAttribute: \"z-index: 1055\" }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-modal-backdrop',\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        style: 'z-index: 1055',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }] } });\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) { }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbModalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) {\n        this._windowCmptRef.instance.updateOptions(options);\n        if (this._backdropCmptRef && this._backdropCmptRef.instance) {\n            this._backdropCmptRef.instance.updateOptions(options);\n        }\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the modal is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     *\n     * @since 8.0.0\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     *\n     * @since 8.0.0\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both modal window and backdrop are closed and animations were finished.\n     * At this point modal and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     *\n     * @since 8.0.0\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when modal is fully visible and animation was finished.\n     * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if modal is closed before open animation is finished.\n     *\n     * @since 8.0.0\n     */\n    get shown() {\n        return this._windowCmptRef.instance.shown.asObservable();\n    }\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeModalElements() {\n        const windowTransition$ = this._windowCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding window\n        windowTransition$.subscribe(() => {\n            const { nativeElement } = this._windowCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._windowCmptRef.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._windowCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(windowTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nconst WINDOW_ATTRIBUTES = [\n    'animation',\n    'ariaLabelledBy',\n    'ariaDescribedBy',\n    'backdrop',\n    'centered',\n    'fullscreen',\n    'keyboard',\n    'role',\n    'scrollable',\n    'size',\n    'windowClass',\n    'modalDialogClass',\n];\nclass NgbModalWindow {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._elRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._cdRef = inject(ChangeDetectorRef);\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to modal opening\n        this.backdrop = true;\n        this.keyboard = true;\n        this.role = 'dialog';\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    get fullscreenClass() {\n        return this.fullscreen === true\n            ? ' modal-fullscreen'\n            : isString(this.fullscreen)\n                ? ` modal-fullscreen-${this.fullscreen}-down`\n                : '';\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        afterNextRender({ mixedReadWrite: () => this._show() }, { injector: this._injector });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        const transitions$ = zip(windowTransition$, dialogTransition$);\n        transitions$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return transitions$;\n    }\n    updateOptions(options) {\n        WINDOW_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                this[optionName] = options[optionName];\n            }\n        });\n        this._cdRef.markForCheck();\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        zip(windowTransition$, dialogTransition$).subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), filter((e) => e.key === 'Escape'))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                        }\n                    });\n                }\n                else if (this.backdrop === 'static') {\n                    this._bumpBackdrop();\n                }\n            });\n            // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n            // inside the modal dialog and releasing it outside\n            let preventClose = false;\n            fromEvent(this._dialogEl.nativeElement, 'mousedown')\n                .pipe(takeUntil(this._closed$), tap(() => (preventClose = false)), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({ target }) => nativeElement === target))\n                .subscribe(() => {\n                preventClose = true;\n            });\n            // We're listening to 'click' to dismiss modal on modal window click, except when:\n            // 1. clicking on modal dialog itself\n            // 2. closing was prevented by mousedown/up handlers\n            // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n            fromEvent(nativeElement, 'click')\n                .pipe(takeUntil(this._closed$))\n                .subscribe(({ target }) => {\n                if (nativeElement === target) {\n                    if (this.backdrop === 'static') {\n                        this._bumpBackdrop();\n                    }\n                    else if (this.backdrop === true && !preventClose) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n                    }\n                }\n                preventClose = false;\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    _bumpBackdrop() {\n        if (this.backdrop === 'static') {\n            ngbRunTransition(this._zone, this._elRef.nativeElement, ({ classList }) => {\n                classList.add('modal-static');\n                return () => classList.remove('modal-static');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbModalWindow, isStandalone: true, selector: \"ngb-modal-window\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", backdrop: \"backdrop\", centered: \"centered\", fullscreen: \"fullscreen\", keyboard: \"keyboard\", role: \"role\", scrollable: \"scrollable\", size: \"size\", windowClass: \"windowClass\", modalDialogClass: \"modalDialogClass\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"modal d-block\\\" + (windowClass ? \\\" \\\" + windowClass : \\\"\\\")\", \"class.fade\": \"animation\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\", \"attr.role\": \"role\" } }, viewQueries: [{ propertyName: \"_dialogEl\", first: true, predicate: [\"dialog\"], descendants: true, static: true }], ngImport: i0, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content /></div>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-modal-window', host: {\n                        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        '[class.fade]': 'animation',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                        '[attr.role]': 'role',\n                    }, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content /></div>\n\t\t</div>\n\t`, encapsulation: ViewEncapsulation.None, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"] }]\n        }], propDecorators: { _dialogEl: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], backdrop: [{\n                type: Input\n            }], centered: [{\n                type: Input\n            }], fullscreen: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], windowClass: [{\n                type: Input\n            }], modalDialogClass: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbModalStack {\n    constructor() {\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._environmentInjector = inject(EnvironmentInjector);\n        this._document = inject(DOCUMENT);\n        this._scrollBar = inject(ScrollBar);\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._scrollBarRestoreFn = null;\n        this._modalRefs = [];\n        this._windowCmpts = [];\n        this._activeInstances = new EventEmitter();\n        const ngZone = inject(NgZone);\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe(() => {\n            if (this._windowCmpts.length) {\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        this._hideScrollBar();\n        const activeModal = new NgbActiveModal();\n        contentInjector = options.injector || contentInjector;\n        const environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n        const contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let windowCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n        // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n        // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n        ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n            if (!this._modalRefs.length) {\n                this._document.body.classList.remove('modal-open');\n                this._restoreScrollBar();\n                this._revertAriaHidden();\n            }\n        }));\n        activeModal.close = (result) => {\n            ngbModalRef.close(result);\n        };\n        activeModal.dismiss = (reason) => {\n            ngbModalRef.dismiss(reason);\n        };\n        activeModal.update = (options) => {\n            ngbModalRef.update(options);\n        };\n        ngbModalRef.update(options);\n        if (this._modalRefs.length === 1) {\n            this._document.body.classList.add('modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        windowCmptRef.changeDetectorRef.detectChanges();\n        return ngbModalRef;\n    }\n    get activeInstances() {\n        return this._activeInstances;\n    }\n    dismissAll(reason) {\n        this._modalRefs.forEach((ngbModalRef) => ngbModalRef.dismiss(reason));\n    }\n    hasOpenModals() {\n        return this._modalRefs.length > 0;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbModalBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let windowCmptRef = createComponent(NgbModalWindow, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    _getContentRef(contentInjector, environmentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeModal) {\n        const context = {\n            $implicit: activeModal,\n            close(result) {\n                activeModal.close(result);\n            },\n            dismiss(reason) {\n                activeModal.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, environmentInjector, componentType, context, options) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveModal, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            componentNativeEl.classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _setAriaHidden(element) {\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach((sibling) => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            });\n            this._setAriaHidden(parent);\n        }\n    }\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        });\n        this._ariaHiddenValues.clear();\n    }\n    _registerModalRef(ngbModalRef) {\n        const unregisterModalRef = () => {\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n                this._activeInstances.emit(this._modalRefs);\n            }\n        };\n        this._modalRefs.push(ngbModalRef);\n        this._activeInstances.emit(this._modalRefs);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy(() => {\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalStack, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    constructor() {\n        this._injector = inject(Injector);\n        this._modalStack = inject(NgbModalStack);\n        this._config = inject(NgbModalConfig);\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._modalStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active modal instances.\n     */\n    get activeInstances() {\n        return this._modalStack.activeInstances;\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason) {\n        this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals() {\n        return this._modalStack.hasOpenModals();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModal, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModal, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModal, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbModalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalModule, providers: [NgbModal] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModalModule, decorators: [{\n            type: NgModule,\n            args: [{ providers: [NgbModal] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbNavConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.destroyOnHide = true;\n        this.orientation = 'horizontal';\n        this.roles = 'tablist';\n        this.keyboard = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst isValidNavId = (id) => isDefined(id) && id !== '';\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nclass NgbNavContent {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavContent, isStandalone: true, selector: \"ng-template[ngbNavContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbNavContent]' }]\n        }] });\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\nclass NgbNavItemRole {\n    constructor(role) {\n        this.role = role;\n        this.nav = inject(NgbNav);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavItemRole, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavItemRole, isStandalone: true, selector: \"[ngbNavItem]:not(ng-container)\", host: { properties: { \"attr.role\": \"role ? role : nav.roles ? 'presentation' : undefined\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavItemRole, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavItem]:not(ng-container)',\n                    host: {\n                        '[attr.role]': `role ? role : nav.roles ? 'presentation' : undefined`,\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }] });\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nclass NgbNavItem {\n    constructor() {\n        this._nav = inject(NgbNav);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        /**\n         * If `true`, the current nav item is disabled and can't be toggled by user.\n         *\n         * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n         */\n        this.disabled = false;\n        /**\n         * An event emitted when the fade in transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!isDefined(this.domId)) {\n            this.domId = `ngb-nav-${navCounter++}`;\n        }\n    }\n    get active() {\n        return this._nav.activeId === this.id;\n    }\n    get id() {\n        return isValidNavId(this._id) ? this._id : this.domId;\n    }\n    get panelDomId() {\n        return `${this.domId}-panel`;\n    }\n    isPanelInDom() {\n        return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n    /**\n     * @internal\n     */\n    isNgContainer() {\n        return this._nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavItem, isStandalone: true, selector: \"[ngbNavItem]\", inputs: { destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", domId: \"domId\", _id: [\"ngbNavItem\", \"_id\"] }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { classAttribute: \"nav-item\" }, queries: [{ propertyName: \"contentTpl\", first: true, predicate: NgbNavContent }], exportAs: [\"ngbNavItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavItem]',\n                    exportAs: 'ngbNavItem',\n                    host: {\n                        class: 'nav-item',\n                    },\n                }]\n        }], propDecorators: { destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], domId: [{\n                type: Input\n            }], _id: [{\n                type: Input,\n                args: ['ngbNavItem']\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], contentTpl: [{\n                type: ContentChild,\n                args: [NgbNavContent, { descendants: false }]\n            }] } });\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nclass NgbNav {\n    constructor(role) {\n        this.role = role;\n        this._config = inject(NgbNavConfig);\n        this._cd = inject(ChangeDetectorRef);\n        this._document = inject(DOCUMENT);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this.destroyRef = inject(DestroyRef);\n        this._navigatingWithKeyboard = false;\n        /**\n         * The event emitted after the active nav changes\n         * The payload of the event is the newly active nav id\n         *\n         * If you want to prevent nav change, you should use `(navChange)` event\n         */\n        this.activeIdChange = new EventEmitter();\n        /**\n         * If `true`, nav change will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, non-active nav content will be removed from DOM\n         * Otherwise it will just be hidden\n         */\n        this.destroyOnHide = this._config.destroyOnHide;\n        /**\n         * The orientation of navs.\n         *\n         * Using `vertical` will also add the `aria-orientation` attribute\n         */\n        this.orientation = this._config.orientation;\n        /**\n         * Role attribute generating strategy:\n         * - `false` - no role attributes will be generated\n         * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n         */\n        this.roles = this._config.roles;\n        /**\n         * Keyboard support for nav focus/selection using arrow keys.\n         *\n         * * `true` - navs will be focused using keyboard arrow keys\n         * * `false` - no keyboard support\n         * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\n         *\n         * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\n         *\n         * @since 6.1.0\n         */\n        this.keyboard = this._config.keyboard;\n        /**\n         * An event emitted when the fade in transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just shown.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just hidden.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.navItemChange$ = new Subject();\n        /**\n         * The nav change event emitted right before the nav change happens on user click.\n         *\n         * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n         *\n         * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n         */\n        this.navChange = new EventEmitter();\n    }\n    click(item) {\n        if (!item.disabled) {\n            this._updateActiveId(item.id);\n        }\n    }\n    onFocusout({ relatedTarget }) {\n        if (!this._nativeElement.contains(relatedTarget)) {\n            this._navigatingWithKeyboard = false;\n        }\n    }\n    onKeyDown(event) {\n        if (this.roles !== 'tablist' || !this.keyboard) {\n            return;\n        }\n        const enabledLinks = this.links.filter((link) => !link.navItem.disabled);\n        const { length } = enabledLinks;\n        let position = -1;\n        enabledLinks.forEach((link, index) => {\n            if (link.nativeElement === this._document.activeElement) {\n                position = index;\n            }\n        });\n        if (length) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'ArrowLeft':\n                    position = (position - 1 + length) % length;\n                    break;\n                case 'ArrowRight':\n                case 'ArrowDown':\n                    position = (position + 1) % length;\n                    break;\n                case 'Home':\n                    position = 0;\n                    break;\n                case 'End':\n                    position = length - 1;\n                    break;\n            }\n            if (this.keyboard === 'changeWithArrows') {\n                this.select(enabledLinks[position].navItem.id);\n            }\n            enabledLinks[position].nativeElement.focus();\n            this._navigatingWithKeyboard = true;\n            event.preventDefault();\n        }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    select(id) {\n        this._updateActiveId(id, false);\n    }\n    ngAfterContentInit() {\n        if (!isDefined(this.activeId)) {\n            const nextId = this.items.first ? this.items.first.id : null;\n            if (isValidNavId(nextId)) {\n                this._updateActiveId(nextId, false);\n                this._cd.detectChanges();\n            }\n        }\n        this.items.changes\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe(() => this._notifyItemChanged(this.activeId));\n    }\n    ngOnChanges({ activeId }) {\n        if (activeId && !activeId.firstChange) {\n            this._notifyItemChanged(activeId.currentValue);\n        }\n    }\n    _updateActiveId(nextId, emitNavChange = true) {\n        if (this.activeId !== nextId) {\n            let defaultPrevented = false;\n            if (emitNavChange) {\n                this.navChange.emit({\n                    activeId: this.activeId,\n                    nextId,\n                    preventDefault: () => {\n                        defaultPrevented = true;\n                    },\n                });\n            }\n            if (!defaultPrevented) {\n                this.activeId = nextId;\n                this.activeIdChange.emit(nextId);\n                this._notifyItemChanged(nextId);\n            }\n        }\n    }\n    _notifyItemChanged(nextItemId) {\n        this.navItemChange$.next(this._getItemById(nextItemId));\n    }\n    _getItemById(itemId) {\n        return (this.items && this.items.find((item) => item.id === itemId)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNav, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNav, isStandalone: true, selector: \"[ngbNav]\", inputs: { activeId: \"activeId\", animation: \"animation\", destroyOnHide: \"destroyOnHide\", orientation: \"orientation\", roles: \"roles\", keyboard: \"keyboard\" }, outputs: { activeIdChange: \"activeIdChange\", shown: \"shown\", hidden: \"hidden\", navChange: \"navChange\" }, host: { listeners: { \"keydown.arrowLeft\": \"onKeyDown($event)\", \"keydown.arrowRight\": \"onKeyDown($event)\", \"keydown.arrowDown\": \"onKeyDown($event)\", \"keydown.arrowUp\": \"onKeyDown($event)\", \"keydown.Home\": \"onKeyDown($event)\", \"keydown.End\": \"onKeyDown($event)\", \"focusout\": \"onFocusout($event)\" }, properties: { \"class.flex-column\": \"orientation === 'vertical'\", \"attr.aria-orientation\": \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\", \"attr.role\": \"role ? role : roles ? 'tablist' : undefined\" }, classAttribute: \"nav\" }, queries: [{ propertyName: \"items\", predicate: NgbNavItem }, { propertyName: \"links\", predicate: i0.forwardRef(() => NgbNavLinkBase), descendants: true }], exportAs: [\"ngbNav\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNav, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNav]',\n                    exportAs: 'ngbNav',\n                    host: {\n                        class: 'nav',\n                        '[class.flex-column]': `orientation === 'vertical'`,\n                        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n                        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n                        '(keydown.arrowLeft)': 'onKeyDown($event)',\n                        '(keydown.arrowRight)': 'onKeyDown($event)',\n                        '(keydown.arrowDown)': 'onKeyDown($event)',\n                        '(keydown.arrowUp)': 'onKeyDown($event)',\n                        '(keydown.Home)': 'onKeyDown($event)',\n                        '(keydown.End)': 'onKeyDown($event)',\n                        '(focusout)': 'onFocusout($event)',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }], propDecorators: { activeId: [{\n                type: Input\n            }], activeIdChange: [{\n                type: Output\n            }], animation: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roles: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], items: [{\n                type: ContentChildren,\n                args: [NgbNavItem]\n            }], links: [{\n                type: ContentChildren,\n                args: [forwardRef(() => NgbNavLinkBase), { descendants: true }]\n            }], navChange: [{\n                type: Output\n            }] } });\nclass NgbNavLinkBase {\n    constructor(role) {\n        this.role = role;\n        this.navItem = inject(NgbNavItem);\n        this.nav = inject(NgbNav);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    get tabindex() {\n        if (this.nav.keyboard === false) {\n            return this.navItem.disabled ? -1 : undefined;\n        }\n        if (this.nav._navigatingWithKeyboard) {\n            return -1;\n        }\n        return this.navItem.disabled || !this.navItem.active ? -1 : undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLinkBase, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavLinkBase, isStandalone: true, selector: \"[ngbNavLink]\", host: { properties: { \"id\": \"navItem.domId\", \"class.nav-item\": \"navItem.isNgContainer()\", \"attr.role\": \"role ? role : nav.roles ? 'tab' : undefined\", \"class.active\": \"navItem.active\", \"class.disabled\": \"navItem.disabled\", \"attr.tabindex\": \"tabindex\", \"attr.aria-controls\": \"navItem.isPanelInDom() ? navItem.panelDomId : null\", \"attr.aria-selected\": \"navItem.active\", \"attr.aria-disabled\": \"navItem.disabled\" }, classAttribute: \"nav-link\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLinkBase, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavLink]',\n                    host: {\n                        '[id]': 'navItem.domId',\n                        class: 'nav-link',\n                        '[class.nav-item]': 'navItem.isNgContainer()',\n                        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n                        '[class.active]': 'navItem.active',\n                        '[class.disabled]': 'navItem.disabled',\n                        '[attr.tabindex]': 'tabindex',\n                        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n                        '[attr.aria-selected]': 'navItem.active',\n                        '[attr.aria-disabled]': 'navItem.disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }] });\n/**\n * A directive to mark the nav link when used on a button element.\n */\nclass NgbNavLinkButton extends NgbNavLinkBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLinkButton, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavLinkButton, isStandalone: true, selector: \"button[ngbNavLink]\", host: { attributes: { \"type\": \"button\" }, listeners: { \"click\": \"nav.click(navItem)\" }, properties: { \"disabled\": \"navItem.disabled\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLinkButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbNavLink]',\n                    host: {\n                        type: 'button',\n                        '[disabled]': 'navItem.disabled',\n                        '(click)': 'nav.click(navItem)',\n                    },\n                }]\n        }] });\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\nclass NgbNavLink extends NgbNavLinkBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLink, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavLink, isStandalone: true, selector: \"a[ngbNavLink]\", host: { attributes: { \"href\": \"\" }, listeners: { \"click\": \"nav.click(navItem); $event.preventDefault()\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[ngbNavLink]',\n                    host: {\n                        href: '',\n                        '(click)': 'nav.click(navItem); $event.preventDefault()',\n                    },\n                }]\n        }] });\n\nconst ngbNavFadeOutTransition = ({ classList }) => {\n    classList.remove('show');\n    return () => classList.remove('active');\n};\nconst ngbNavFadeInTransition = (element, animation) => {\n    if (animation) {\n        reflow(element);\n    }\n    element.classList.add('show');\n};\n\nclass NgbNavPane {\n    constructor() {\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavPane, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbNavPane, isStandalone: true, selector: \"[ngbNavPane]\", inputs: { item: \"item\", nav: \"nav\", role: \"role\" }, host: { properties: { \"id\": \"item.panelDomId\", \"class.fade\": \"nav.animation\", \"attr.role\": \"role ? role : nav.roles ? \\\"tabpanel\\\" : undefined\", \"attr.aria-labelledby\": \"item.domId\" }, classAttribute: \"tab-pane\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavPane, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavPane]',\n                    host: {\n                        '[id]': 'item.panelDomId',\n                        class: 'tab-pane',\n                        '[class.fade]': 'nav.animation',\n                        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n                        '[attr.aria-labelledby]': 'item.domId',\n                    },\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], nav: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nclass NgbNavOutlet {\n    constructor() {\n        this._cd = inject(ChangeDetectorRef);\n        this._ngZone = inject(NgZone);\n        this._activePane = null;\n    }\n    isPanelTransitioning(item) {\n        return this._activePane?.item === item;\n    }\n    ngAfterViewInit() {\n        // initial display\n        this._updateActivePane();\n        // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n        this.nav.navItemChange$\n            .pipe(takeUntilDestroyed(this.nav.destroyRef), startWith(this._activePane?.item || null), distinctUntilChanged(), skip(1))\n            .subscribe((nextItem) => {\n            const options = { animation: this.nav.animation, runningTransition: 'stop' };\n            // next panel we're switching to will only appear in DOM after the change detection is done\n            // and `this._panes` will be updated\n            this._cd.detectChanges();\n            // fading out\n            if (this._activePane) {\n                ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n                    const activeItem = this._activePane?.item;\n                    this._activePane = this._getPaneForItem(nextItem);\n                    // mark for check when transition finishes as outlet or parent containers might be OnPush\n                    // without this the panes that have \"faded out\" will stay in DOM\n                    this._cd.markForCheck();\n                    // fading in\n                    if (this._activePane) {\n                        // we have to add the '.active' class before running the transition,\n                        // because it should be in place before `ngbRunTransition` does `reflow()`\n                        this._activePane.nativeElement.classList.add('active');\n                        ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n                            if (nextItem) {\n                                nextItem.shown.emit();\n                                this.nav.shown.emit(nextItem.id);\n                            }\n                        });\n                    }\n                    if (activeItem) {\n                        activeItem.hidden.emit();\n                        this.nav.hidden.emit(activeItem.id);\n                    }\n                });\n            }\n            else {\n                this._updateActivePane();\n            }\n        });\n    }\n    _updateActivePane() {\n        this._activePane = this._getActivePane();\n        this._activePane?.nativeElement.classList.add('show', 'active');\n    }\n    _getPaneForItem(item) {\n        return (this._panes && this._panes.find((pane) => pane.item === item)) || null;\n    }\n    _getActivePane() {\n        return (this._panes && this._panes.find((pane) => pane.item.active)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavOutlet, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbNavOutlet, isStandalone: true, selector: \"[ngbNavOutlet]\", inputs: { paneRole: \"paneRole\", nav: [\"ngbNavOutlet\", \"nav\"] }, host: { classAttribute: \"tab-content\" }, viewQueries: [{ propertyName: \"_panes\", predicate: NgbNavPane, descendants: true }], ngImport: i0, template: `\n\t\t@for (item of nav.items; track item) {\n\t\t\t@if (item.isPanelInDom() || isPanelTransitioning(item)) {\n\t\t\t\t<div ngbNavPane [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgbNavPane, selector: \"[ngbNavPane]\", inputs: [\"item\", \"nav\", \"role\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavOutlet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngbNavOutlet]',\n                    imports: [NgbNavPane, NgTemplateOutlet],\n                    host: {\n                        class: 'tab-content',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n\t\t@for (item of nav.items; track item) {\n\t\t\t@if (item.isPanelInDom() || isPanelTransitioning(item)) {\n\t\t\t\t<div ngbNavPane [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { _panes: [{\n                type: ViewChildren,\n                args: [NgbNavPane]\n            }], paneRole: [{\n                type: Input\n            }], nav: [{\n                type: Input,\n                args: ['ngbNavOutlet']\n            }] } });\n\nconst NGB_NAV_DIRECTIVES = [\n    NgbNavContent,\n    NgbNav,\n    NgbNavItem,\n    NgbNavItemRole,\n    NgbNavLink,\n    NgbNavLinkButton,\n    NgbNavLinkBase,\n    NgbNavOutlet,\n    NgbNavPane,\n];\nclass NgbNavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavModule, imports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane], exports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbNavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_NAV_DIRECTIVES,\n                    exports: NGB_NAV_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationEllipsis, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationEllipsis, isStandalone: true, selector: \"ng-template[ngbPaginationEllipsis]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationEllipsis, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationEllipsis]' }]\n        }] });\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationFirst {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationFirst, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationFirst, isStandalone: true, selector: \"ng-template[ngbPaginationFirst]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationFirst, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationFirst]' }]\n        }] });\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationLast {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationLast, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationLast, isStandalone: true, selector: \"ng-template[ngbPaginationLast]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationLast, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationLast]' }]\n        }] });\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNext {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationNext, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationNext, isStandalone: true, selector: \"ng-template[ngbPaginationNext]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationNext, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNext]' }]\n        }] });\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNumber {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationNumber, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationNumber, isStandalone: true, selector: \"ng-template[ngbPaginationNumber]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationNumber, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNumber]' }]\n        }] });\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationPrevious {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationPrevious, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationPrevious, isStandalone: true, selector: \"ng-template[ngbPaginationPrevious]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationPrevious, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPrevious]' }]\n        }] });\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\nclass NgbPaginationPages {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationPages, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPaginationPages, isStandalone: true, selector: \"ng-template[ngbPaginationPages]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationPages, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPages]' }]\n        }] });\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    constructor() {\n        this._config = inject(NgbPaginationConfig);\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         * If `true`, pagination links will be disabled.\n         */\n        this.disabled = this._config.disabled;\n        /**\n         * If `true`, the \"First\" and \"Last\" page links are shown.\n         */\n        this.boundaryLinks = this._config.boundaryLinks;\n        /**\n         * If `true`, the \"Next\" and \"Previous\" page links are shown.\n         */\n        this.directionLinks = this._config.directionLinks;\n        /**\n         * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n         */\n        this.ellipses = this._config.ellipses;\n        /**\n         * Whether to rotate pages when `maxSize` > number of pages.\n         *\n         * The current page always stays in the middle if `true`.\n         */\n        this.rotate = this._config.rotate;\n        /**\n         *  The maximum number of pages to display.\n         */\n        this.maxSize = this._config.maxSize;\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  The number of items per page.\n         */\n        this.pageSize = this._config.pageSize;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        /**\n         * The pagination display size.\n         *\n         * Bootstrap currently supports small and large sizes.\n         *\n         * If the passed value is a string (ex. 'custom'), it will just add the `pagination-custom` css class\n         */\n        this.size = this._config.size;\n    }\n    hasPrevious() {\n        return this.page > 1;\n    }\n    hasNext() {\n        return this.page < this.pageCount;\n    }\n    nextDisabled() {\n        return !this.hasNext() || this.disabled;\n    }\n    previousDisabled() {\n        return !this.hasPrevious() || this.disabled;\n    }\n    selectPage(pageNumber) {\n        this._updatePages(pageNumber);\n    }\n    ngOnChanges(changes) {\n        this._updatePages(this.page);\n    }\n    isEllipsis(pageNumber) {\n        return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                // The first page will always be included. If the displayed range\n                // starts after the third page, then add ellipsis. But if the range\n                // starts on the third page, then add the second page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (start > 2) {\n                    this.pages.unshift(-1);\n                }\n                else if (start === 2) {\n                    this.pages.unshift(2);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                // The last page will always be included. If the displayed range\n                // ends before the third-last page, then add ellipsis. But if the range\n                // ends on third-last page, then add the second-last page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (end < this.pageCount - 2) {\n                    this.pages.push(-1);\n                }\n                else if (end === this.pageCount - 2) {\n                    this.pages.push(this.pageCount - 1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    _applyRotation() {\n        let start = 0;\n        let end = this.pageCount;\n        let leftOffset = Math.floor(this.maxSize / 2);\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    _applyPagination() {\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        let start = page * this.maxSize;\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    _setPageInRange(newPageNo) {\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            let start = 0;\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPagination, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbPagination, isStandalone: true, selector: \"ngb-pagination\", inputs: { disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", rotate: \"rotate\", collectionSize: \"collectionSize\", maxSize: \"maxSize\", page: \"page\", pageSize: \"pageSize\", size: \"size\" }, outputs: { pageChange: \"pageChange\" }, host: { attributes: { \"role\": \"navigation\" } }, queries: [{ propertyName: \"tplEllipsis\", first: true, predicate: NgbPaginationEllipsis, descendants: true }, { propertyName: \"tplFirst\", first: true, predicate: NgbPaginationFirst, descendants: true }, { propertyName: \"tplLast\", first: true, predicate: NgbPaginationLast, descendants: true }, { propertyName: \"tplNext\", first: true, predicate: NgbPaginationNext, descendants: true }, { propertyName: \"tplNumber\", first: true, predicate: NgbPaginationNumber, descendants: true }, { propertyName: \"tplPrevious\", first: true, predicate: NgbPaginationPrevious, descendants: true }, { propertyName: \"tplPages\", first: true, predicate: NgbPaginationPages, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t@for (pageNumber of pages; track $index) {\n\t\t\t\t<li\n\t\t\t\t\tclass=\"page-item\"\n\t\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t>\n\t\t\t\t\t@if (isEllipsis(pageNumber)) {\n\t\t\t\t\t\t<a class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t} @else {\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t/>\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ul>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPagination, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-pagination',\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        role: 'navigation',\n                    },\n                    template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t@for (pageNumber of pages; track $index) {\n\t\t\t\t<li\n\t\t\t\t\tclass=\"page-item\"\n\t\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t>\n\t\t\t\t\t@if (isEllipsis(pageNumber)) {\n\t\t\t\t\t\t<a class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t} @else {\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t/>\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ul>\n\t`,\n                }]\n        }], propDecorators: { tplEllipsis: [{\n                type: ContentChild,\n                args: [NgbPaginationEllipsis, { static: false }]\n            }], tplFirst: [{\n                type: ContentChild,\n                args: [NgbPaginationFirst, { static: false }]\n            }], tplLast: [{\n                type: ContentChild,\n                args: [NgbPaginationLast, { static: false }]\n            }], tplNext: [{\n                type: ContentChild,\n                args: [NgbPaginationNext, { static: false }]\n            }], tplNumber: [{\n                type: ContentChild,\n                args: [NgbPaginationNumber, { static: false }]\n            }], tplPrevious: [{\n                type: ContentChild,\n                args: [NgbPaginationPrevious, { static: false }]\n            }], tplPages: [{\n                type: ContentChild,\n                args: [NgbPaginationPages, { static: false }]\n            }], disabled: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], ellipses: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], collectionSize: [{\n                type: Input,\n                args: [{ required: true }]\n            }], maxSize: [{\n                type: Input\n            }], page: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }], size: [{\n                type: Input\n            }] } });\n\nconst NGB_PAGINATION_DIRECTIVES = [\n    NgbPagination,\n    NgbPaginationEllipsis,\n    NgbPaginationFirst,\n    NgbPaginationLast,\n    NgbPaginationNext,\n    NgbPaginationNumber,\n    NgbPaginationPrevious,\n    NgbPaginationPages,\n];\nclass NgbPaginationModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationModule, imports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages], exports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_PAGINATION_DIRECTIVES,\n                    exports: NGB_PAGINATION_DIRECTIVES,\n                }]\n        }] });\n\nconst ALIASES = {\n    hover: ['mouseenter', 'mouseleave'],\n    focus: ['focusin', 'focusout'],\n};\nfunction parseTriggers(triggers) {\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    const parsedTriggers = trimmedTriggers\n        .split(/\\s+/)\n        .map((trigger) => trigger.split(':'))\n        .map((triggerPair) => (ALIASES[triggerPair[0]] || triggerPair));\n    const manualTriggers = parsedTriggers.filter((triggerPair) => triggerPair.includes('manual'));\n    if (manualTriggers.length > 1) {\n        throw `Triggers parse error: only one manual trigger is allowed`;\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw `Triggers parse error: manual trigger can't be mixed with other triggers`;\n    }\n    return manualTriggers.length ? [] : parsedTriggers;\n}\nfunction listenToTriggers(element, triggers, isOpenedFn, openFn, closeFn, openDelayMs = 0, closeDelayMs = 0, enterContent = EMPTY, leaveContent = EMPTY) {\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 0) {\n        return () => { };\n    }\n    const activeOpenTriggers = new Set();\n    const cleanupFns = [];\n    let timeout;\n    function addEventListener(name, listener) {\n        element.addEventListener(name, listener);\n        cleanupFns.push(() => element.removeEventListener(name, listener));\n    }\n    function withDelay(fn, delayMs) {\n        clearTimeout(timeout);\n        if (delayMs > 0) {\n            timeout = setTimeout(fn, delayMs);\n        }\n        else {\n            fn();\n        }\n    }\n    for (const [openTrigger, closeTrigger] of parsedTriggers) {\n        if (!closeTrigger) {\n            addEventListener(openTrigger, () => isOpenedFn() ? withDelay(closeFn, closeDelayMs) : withDelay(openFn, openDelayMs));\n        }\n        else {\n            addEventListener(openTrigger, () => {\n                activeOpenTriggers.add(openTrigger);\n                withDelay(() => activeOpenTriggers.size > 0 && openFn(), openDelayMs);\n            });\n            addEventListener(closeTrigger, () => {\n                activeOpenTriggers.delete(openTrigger);\n                withDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n            });\n        }\n        if (openTrigger === 'mouseenter' && closeTrigger === 'mouseleave' && closeDelayMs > 0) {\n            const enterContentSub = enterContent.subscribe(() => {\n                activeOpenTriggers.delete(openTrigger);\n                clearTimeout(timeout);\n            });\n            const leaveContentSub = leaveContent.subscribe(() => {\n                activeOpenTriggers.delete(openTrigger);\n                withDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n            });\n            cleanupFns.push(() => enterContentSub.unsubscribe(), () => leaveContentSub.unsubscribe());\n        }\n    }\n    cleanupFns.push(() => clearTimeout(timeout));\n    return () => cleanupFns.forEach((cleanupFn) => cleanupFn());\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nlet nextId$1 = 0;\nclass NgbPopoverWindow {\n    isTitleTemplate() {\n        return this.title instanceof TemplateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbPopoverWindow, isStandalone: true, selector: \"ngb-popover-window\", inputs: { animation: \"animation\", title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\" }, host: { attributes: { \"role\": \"tooltip\" }, listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" }, properties: { \"class\": \"\\\"popover\\\" + (popoverClass ? \\\" \\\" + popoverClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" }, styleAttribute: \"position: absolute;\" }, ngImport: i0, template: `\n\t\t<div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t@if (title) {\n\t\t\t<h3 class=\"popover-header\">\n\t\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t}\n\t\t<div class=\"popover-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-popover-window',\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                        style: 'position: absolute;',\n                        '(mouseenter)': 'onMouseEnter()',\n                        '(mouseleave)': 'onMouseLeave()',\n                    },\n                    template: `\n\t\t<div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t@if (title) {\n\t\t\t<h3 class=\"popover-header\">\n\t\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t}\n\t\t<div class=\"popover-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], onMouseEnter: [{\n                type: Input\n            }], onMouseLeave: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    constructor() {\n        this._config = inject(NgbPopoverConfig);\n        /**\n         * If `true`, popover opening and closing will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n         *\n         * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n         * * `false` - disables the autoClose feature (NB: triggers still apply)\n         * * `\"inside\"` - closes on inside clicks as well as Escape presses\n         * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n         * as well as `Escape` presses\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the popover, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"auto\"`.\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the popover.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * Specifies events that should trigger the tooltip.\n         *\n         * Supports a space separated list of event names.\n         * For more details see the [triggers demo](#/components/popover/examples#triggers).\n         */\n        this.triggers = this._config.triggers;\n        /**\n         * A selector specifying the element the popover should be appended to.\n         *\n         * Currently only supports `body`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, popover is disabled and won't be displayed.\n         *\n         * @since 1.1.0\n         */\n        this.disablePopover = this._config.disablePopover;\n        /**\n         * An optional class applied to the popover window element.\n         *\n         * @since 2.2.0\n         */\n        this.popoverClass = this._config.popoverClass;\n        /**\n         * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.openDelay = this._config.openDelay;\n        /**\n         * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.closeDelay = this._config.closeDelay;\n        /**\n         * An event emitted when the popover opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover closing animation has finished. Contains no payload.\n         *\n         * At this point popover is not in the DOM anymore.\n         */\n        this.hidden = new EventEmitter();\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngZone = inject(NgZone);\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n        this._popupService = new PopupService(NgbPopoverWindow);\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n        this._mouseEnterPopover = new Subject();\n        this._mouseLeavePopover = new Subject();\n        this._opening = true;\n        this._transitioning = false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    open(context) {\n        if (!this._opening && this._transitioning) {\n            this._transitioning = false;\n            ngbCompleteTransition(this._windowRef.location.nativeElement);\n        }\n        if (!this._windowRef && !this._isDisabled()) {\n            // this type assertion is safe because otherwise _isDisabled would return true\n            const { windowRef, transition$ } = this._popupService.open(this.ngbPopover, context ?? this.popoverContext, this.animation);\n            this._opening = true;\n            this._transitioning = true;\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('title', this.popoverTitle);\n            this._windowRef.setInput('context', context ?? this.popoverContext);\n            this._windowRef.setInput('popoverClass', this.popoverClass);\n            this._windowRef.setInput('id', this._ngbPopoverWindowId);\n            this._windowRef.setInput('onMouseEnter', () => this._mouseEnterPopover.next());\n            this._windowRef.setInput('onMouseLeave', () => this._mouseLeavePopover.next());\n            this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    baseClass: 'bs-popover',\n                    updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 8])(options)),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                });\n                this._afterRenderRef = afterEveryRender({\n                    mixedReadWrite: () => {\n                        this._positioning.update();\n                    },\n                }, { injector: this._injector });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [\n                this._windowRef.location.nativeElement,\n            ]);\n            transition$.subscribe(() => {\n                if (this._transitioning) {\n                    this._transitioning = false;\n                    this.shown.emit();\n                }\n            });\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    close(animation = this.animation) {\n        if (this._opening && this._transitioning) {\n            this._transitioning = false;\n            ngbCompleteTransition(this._windowRef.location.nativeElement);\n        }\n        if (this._windowRef) {\n            this._getPositionTargetElement().removeAttribute('aria-describedby');\n            this._opening = false;\n            this._transitioning = true;\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._afterRenderRef?.destroy();\n                if (this._transitioning) {\n                    this._transitioning = false;\n                    this.hidden.emit();\n                }\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay, this._mouseEnterPopover, this._mouseLeavePopover);\n    }\n    ngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }) {\n        if (popoverClass && this.isOpen()) {\n            this._windowRef.setInput('popoverClass', popoverClass.currentValue);\n        }\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _isDisabled() {\n        return this.disablePopover ? true : !this.ngbPopover && !this.popoverTitle;\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopover, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbPopover, isStandalone: true, selector: \"[ngbPopover]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", popoverContext: \"popoverContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopover, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], ngbPopover: [{\n                type: Input\n            }], popoverTitle: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disablePopover: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], popoverContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbPopoverModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverModule, imports: [NgbPopover], exports: [NgbPopover] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbPopover],\n                    exports: [NgbPopover],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.ariaLabel = 'progress bar';\n        this.striped = false;\n        this.showValue = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max) {\n        this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n    get max() {\n        return this._max;\n    }\n    constructor() {\n        this._config = inject(NgbProgressbarConfig);\n        this.stacked = inject(NgbProgressbarStacked, { optional: true });\n        /**\n         * If `true`, the stripes on the progress bar are animated.\n         *\n         * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n         */\n        this.animated = this._config.animated;\n        /**\n         * The accessible progress bar name.\n         *\n         * @since 13.1.0\n         */\n        this.ariaLabel = this._config.ariaLabel;\n        /**\n         * If `true`, the progress bars will be displayed as striped.\n         */\n        this.striped = this._config.striped;\n        /**\n         * If `true`, the current percentage will be shown in the `xx%` format.\n         */\n        this.showValue = this._config.showValue;\n        /**\n         * Optional text variant type of the progress bar.\n         *\n         * Supports types based on Bootstrap background color variants, like:\n         *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n         *\n         * @since 5.2.0\n         */\n        this.textType = this._config.textType;\n        /**\n         * The type of the progress bar.\n         *\n         * Supports types based on Bootstrap background color variants, like:\n         *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n         */\n        this.type = this._config.type;\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        /**\n         * The height of the progress bar.\n         *\n         * Accepts any valid CSS height values, ex. `\"2rem\"`\n         */\n        this.height = this._config.height;\n        this.max = this._config.max;\n    }\n    getValue() {\n        return getValueInRange(this.value, this.max);\n    }\n    getPercentValue() {\n        return (100 * this.getValue()) / this.max;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbProgressbar, isStandalone: true, selector: \"ngb-progressbar\", inputs: { max: \"max\", animated: \"animated\", ariaLabel: \"ariaLabel\", striped: \"striped\", showValue: \"showValue\", textType: \"textType\", type: \"type\", value: \"value\", height: \"height\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\" }, properties: { \"attr.aria-valuenow\": \"getValue()\", \"attr.aria-valuemax\": \"max\", \"attr.aria-label\": \"ariaLabel\", \"style.width.%\": \"stacked ? getPercentValue() : null\", \"style.height\": \"height\" }, classAttribute: \"progress\" }, ngImport: i0, template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"!stacked ? getPercentValue() : null\"\n\t\t>\n\t\t\t@if (showValue) {\n\t\t\t\t<span i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span>\n\t\t\t}\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"pipe\", type: PercentPipe, name: \"percent\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar',\n                    imports: [PercentPipe],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'progress',\n                        role: 'progressbar',\n                        '[attr.aria-valuenow]': 'getValue()',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '[style.width.%]': 'stacked ? getPercentValue() : null',\n                        '[style.height]': 'height',\n                    },\n                    template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"!stacked ? getPercentValue() : null\"\n\t\t>\n\t\t\t@if (showValue) {\n\t\t\t\t<span i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span>\n\t\t\t}\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n                }]\n        }], ctorParameters: () => [], propDecorators: { max: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], striped: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], textType: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ required: true }]\n            }], height: [{\n                type: Input\n            }] } });\n/**\n * A directive that allow to stack progress bars.\n *\n * @since 16.0.0\n */\nclass NgbProgressbarStacked {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarStacked, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbProgressbarStacked, isStandalone: true, selector: \"ngb-progressbar-stacked\", host: { classAttribute: \"progress-stacked\" }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarStacked, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar-stacked',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'progress-stacked',\n                    },\n                    template: `<ng-content></ng-content>`,\n                }]\n        }] });\n\nclass NgbProgressbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarModule, imports: [NgbProgressbar, NgbProgressbarStacked], exports: [NgbProgressbar, NgbProgressbarStacked] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbProgressbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbProgressbar, NgbProgressbarStacked],\n                    exports: [NgbProgressbar, NgbProgressbarStacked],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n        this.tabindex = 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    constructor() {\n        this.contexts = [];\n        this._config = inject(NgbRatingConfig);\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * If `true`, the rating can't be changed or focused.\n         */\n        this.disabled = false;\n        /**\n         * The maximal rating that can be given.\n         */\n        this.max = this._config.max;\n        /**\n         * If `true`, the rating can't be changed.\n         */\n        this.readonly = this._config.readonly;\n        /**\n         * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n         */\n        this.resettable = this._config.resettable;\n        /**\n         * Allows setting a custom rating tabindex.\n         * If the component is disabled, `tabindex` will still be set to `-1`.\n         *\n         * @since 13.1.0\n         */\n        this.tabindex = this._config.tabindex;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the rating is changed.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * Allows to provide a function to set a custom aria-valuetext\n     *\n     * @since 14.1.0\n     */\n    ariaValueText(current, max) {\n        return `${current} out of ${max}`;\n    }\n    isInteractive() {\n        return !this.readonly && !this.disabled;\n    }\n    enter(value) {\n        if (this.isInteractive()) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    handleClick(value) {\n        if (this.isInteractive()) {\n            this.update(this.resettable && this.rate === value ? 0 : value);\n        }\n    }\n    handleKeyDown(event) {\n        switch (event.key) {\n            case 'ArrowDown':\n            case 'ArrowLeft':\n                this.update(this.rate - 1);\n                break;\n            case 'ArrowUp':\n            case 'ArrowRight':\n                this.update(this.rate + 1);\n                break;\n            case 'Home':\n                this.update(0);\n                break;\n            case 'End':\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n        if (changes['max']) {\n            this._updateMax();\n        }\n    }\n    ngOnInit() {\n        this._setupContexts();\n        this._updateState(this.rate);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    update(value, internalChange = true) {\n        const newRate = getValueInRange(value, this.max, 0);\n        if (this.isInteractive() && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((context, index) => (context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100)));\n    }\n    _updateMax() {\n        if (this.max > 0) {\n            this._setupContexts();\n            this.update(this.rate);\n        }\n    }\n    _setupContexts() {\n        this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRating, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbRating, isStandalone: true, selector: \"ngb-rating\", inputs: { disabled: \"disabled\", max: \"max\", rate: \"rate\", readonly: \"readonly\", resettable: \"resettable\", starTemplate: \"starTemplate\", tabindex: \"tabindex\", ariaValueText: \"ariaValueText\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, host: { attributes: { \"role\": \"slider\", \"aria-valuemin\": \"0\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\", \"mouseleave\": \"reset()\" }, properties: { \"tabindex\": \"disabled ? -1 : tabindex\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"nextRate\", \"attr.aria-valuetext\": \"ariaValueText(nextRate, max)\", \"attr.aria-readonly\": \"readonly && !disabled ? true : null\", \"attr.aria-disabled\": \"disabled ? true : null\" }, classAttribute: \"d-inline-flex\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }], queries: [{ propertyName: \"starTemplateFromContent\", first: true, predicate: TemplateRef, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t@for (_ of contexts; track _; let index = $index) {\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRating, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-rating',\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'd-inline-flex',\n                        '[tabindex]': 'disabled ? -1 : tabindex',\n                        role: 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText(nextRate, max)',\n                        '[attr.aria-readonly]': 'readonly && !disabled ? true : null',\n                        '[attr.aria-disabled]': 'disabled ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()',\n                    },\n                    template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t@for (_ of contexts; track _; let index = $index) {\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t}\n\t`,\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], rate: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], resettable: [{\n                type: Input\n            }], starTemplate: [{\n                type: Input\n            }], starTemplateFromContent: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }], tabindex: [{\n                type: Input\n            }], ariaValueText: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], leave: [{\n                type: Output\n            }], rateChange: [{\n                type: Output\n            }] } });\n\nclass NgbRatingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingModule, imports: [NgbRating], exports: [NgbRating] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbRatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbRating],\n                    exports: [NgbRating],\n                }]\n        }] });\n\nfunction toFragmentElement(container, id) {\n    if (!container || id == null) {\n        return null;\n    }\n    return isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\nfunction getOrderedFragments(container, fragments) {\n    const selector = [...fragments].map(({ id }) => `#${CSS.escape(id)}`).join(',');\n    return Array.from(container.querySelectorAll(selector));\n}\nconst defaultProcessChanges = (state, changeActive, ctx) => {\n    const { rootElement, fragments, scrollSpy, options, entries } = state;\n    const orderedFragments = getOrderedFragments(rootElement, fragments);\n    if (!ctx.initialized) {\n        ctx.initialized = true;\n        ctx.gapFragment = null;\n        ctx.visibleFragments = new Set();\n        // special case when one of the fragments was pre-selected\n        const preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n        if (preSelectedFragment) {\n            scrollSpy.scrollTo(preSelectedFragment);\n            return;\n        }\n    }\n    for (const entry of entries) {\n        const { isIntersecting, target: fragment } = entry;\n        // 1. an entry became visible\n        if (isIntersecting) {\n            // if we were in-between two elements, we have to clear it up\n            if (ctx.gapFragment) {\n                ctx.visibleFragments.delete(ctx.gapFragment);\n                ctx.gapFragment = null;\n            }\n            ctx.visibleFragments.add(fragment);\n        }\n        // 2. an entry became invisible\n        else {\n            ctx.visibleFragments.delete(fragment);\n            // nothing is visible anymore, but something just was actually\n            if (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n                // 2.1 scrolling down - keeping the same element\n                if (entry.boundingClientRect.top < entry.rootBounds.top) {\n                    ctx.gapFragment = fragment;\n                    ctx.visibleFragments.add(ctx.gapFragment);\n                }\n                // 2.2 scrolling up - getting the previous element\n                else {\n                    // scrolling up and no more fragments above\n                    if (fragment === orderedFragments[0]) {\n                        ctx.gapFragment = null;\n                        ctx.visibleFragments.clear();\n                        changeActive('');\n                        return;\n                    }\n                    // getting previous fragment\n                    else {\n                        const fragmentIndex = orderedFragments.indexOf(fragment);\n                        ctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n                        if (ctx.gapFragment) {\n                            ctx.visibleFragments.add(ctx.gapFragment);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // getting the first visible element in the DOM order of the fragments\n    for (const fragment of orderedFragments) {\n        if (ctx.visibleFragments.has(fragment)) {\n            changeActive(fragment.id);\n            break;\n        }\n    }\n};\n\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyConfig {\n    constructor() {\n        this.scrollBehavior = 'smooth';\n        this.processChanges = defaultProcessChanges;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst MATCH_THRESHOLD = 3;\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyService {\n    constructor() {\n        this._observer = null;\n        this._containerElement = null;\n        this._fragments = new Set();\n        this._preRegisteredFragments = new Set();\n        this._active$ = new Subject();\n        this._distinctActive$ = this._active$.pipe(distinctUntilChanged());\n        this._active = '';\n        this._config = inject(NgbScrollSpyConfig);\n        this._document = inject(DOCUMENT);\n        this._platformId = inject(PLATFORM_ID);\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._diChangeDetectorRef = inject(ChangeDetectorRef, { optional: true });\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._zone = inject(NgZone);\n        this._distinctActive$.pipe(takeUntilDestroyed()).subscribe((active) => {\n            this._active = active;\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    /**\n     * Getter for the currently active fragment id. Returns empty string if none.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * An observable emitting the currently active fragment. Emits empty string if none.\n     */\n    get active$() {\n        return this._distinctActive$;\n    }\n    /**\n     * Starts the scrollspy service and observes specified fragments.\n     *\n     * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n     * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n     */\n    start(options) {\n        if (isPlatformBrowser(this._platformId)) {\n            this._cleanup();\n            const { root, rootMargin, scrollBehavior, threshold, fragments, changeDetectorRef, processChanges } = {\n                ...options,\n            };\n            this._containerElement = root ?? this._document.documentElement;\n            this._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n            this._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n            const processChangesFn = processChanges ?? this._config.processChanges;\n            const context = {};\n            this._observer = new IntersectionObserver((entries) => processChangesFn({\n                entries,\n                rootElement: this._containerElement,\n                fragments: this._fragments,\n                scrollSpy: this,\n                options: { ...options },\n            }, (active) => this._active$.next(active), context), {\n                root: root ?? this._document,\n                ...(rootMargin && { rootMargin }),\n                ...(threshold && { threshold }),\n            });\n            // merging fragments added before starting and the ones passed as options\n            for (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n                this.observe(element);\n            }\n            this._preRegisteredFragments.clear();\n        }\n    }\n    /**\n     * Stops the service and unobserves all fragments.\n     */\n    stop() {\n        this._cleanup();\n        this._active$.next('');\n    }\n    /**\n     * Scrolls to a fragment, it must be known to the service and contained in the root element.\n     * An id or an element reference can be passed.\n     *\n     * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n     */\n    scrollTo(fragment, options) {\n        const { behavior } = { behavior: this._scrollBehavior, ...options };\n        if (this._containerElement) {\n            const fragmentElement = toFragmentElement(this._containerElement, fragment);\n            if (fragmentElement) {\n                const heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n                this._containerElement.scrollTo({ top: heightPx, behavior });\n                let lastOffset = this._containerElement.scrollTop;\n                let matchCounter = 0;\n                // we should update the active section only after scrolling is finished\n                // and there is no clean way to do it at the moment\n                const containerElement = this._containerElement;\n                this._zone.runOutsideAngular(() => {\n                    const updateActiveWhenScrollingIsFinished = () => {\n                        const sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n                        if (sameOffsetAsLastTime) {\n                            matchCounter++;\n                        }\n                        else {\n                            matchCounter = 0;\n                        }\n                        if (!sameOffsetAsLastTime || (sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD)) {\n                            lastOffset = containerElement.scrollTop;\n                            requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                        }\n                        else {\n                            this._zone.run(() => this._active$.next(fragmentElement.id));\n                        }\n                    };\n                    requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                });\n            }\n        }\n    }\n    /**\n     * Adds a fragment to observe. It must be contained in the root element.\n     * An id or an element reference can be passed.\n     */\n    observe(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.add(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement && !this._fragments.has(fragmentElement)) {\n            this._fragments.add(fragmentElement);\n            this._observer.observe(fragmentElement);\n        }\n    }\n    /**\n     * Unobserves a fragment.\n     * An id or an element reference can be passed.\n     */\n    unobserve(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.delete(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement) {\n            this._fragments.delete(fragmentElement);\n            // we're removing and re-adding all current fragments to recompute active one\n            this._observer.disconnect();\n            for (const fragment of this._fragments) {\n                this._observer.observe(fragment);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._cleanup();\n    }\n    _cleanup() {\n        this._fragments.clear();\n        this._observer?.disconnect();\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._observer = null;\n        this._containerElement = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyItem {\n    constructor() {\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._scrollSpyMenu = inject(NgbScrollSpyMenu, { optional: true });\n        this._scrollSpyAPI = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._isActive = false;\n    }\n    /**\n     * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n     *\n     * Can be used like:\n     *  - `ngbScrollSpyItem=\"fragmentId\"`\n     *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n     *\n     *  As well as together with `[fragment]` and `[parent]` inputs.\n     */\n    set data(data) {\n        if (Array.isArray(data)) {\n            this._scrollSpyAPI = data[0];\n            this.fragment = data[1];\n            this.parent ??= data[2];\n        }\n        else if (data instanceof NgbScrollSpy) {\n            this._scrollSpyAPI = data;\n        }\n        else if (isString(data)) {\n            this.fragment = data;\n        }\n    }\n    ngOnInit() {\n        // if it is not a part of a bigger menu, it should handle activation itself\n        if (!this._scrollSpyMenu) {\n            this._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((active) => {\n                if (active === this.fragment) {\n                    this._activate();\n                }\n                else {\n                    this._deactivate();\n                }\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * @internal\n     */\n    _activate() {\n        this._isActive = true;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _deactivate() {\n        this._isActive = false;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n        }\n    }\n    /**\n     * Returns `true`, if the associated fragment is active.\n     */\n    isActive() {\n        return this._isActive;\n    }\n    /**\n     * Scrolls to the associated fragment.\n     */\n    scrollTo(options) {\n        this._scrollSpyAPI.scrollTo(this.fragment, options);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbScrollSpyItem, isStandalone: true, selector: \"[ngbScrollSpyItem]\", inputs: { data: [\"ngbScrollSpyItem\", \"data\"], fragment: \"fragment\", parent: \"parent\" }, host: { listeners: { \"click\": \"scrollTo();\" }, properties: { \"class.active\": \"isActive()\" } }, exportAs: [\"ngbScrollSpyItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyItem]',\n                    exportAs: 'ngbScrollSpyItem',\n                    host: {\n                        '[class.active]': 'isActive()',\n                        '(click)': 'scrollTo();',\n                    },\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['ngbScrollSpyItem']\n            }], fragment: [{\n                type: Input\n            }], parent: [{\n                type: Input\n            }] } });\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyMenu {\n    constructor() {\n        this._scrollSpyRef = inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._map = new Map();\n        this._lastActiveItem = null;\n    }\n    set scrollSpy(scrollSpy) {\n        this._scrollSpyRef = scrollSpy;\n    }\n    get active() {\n        return this._scrollSpyRef.active;\n    }\n    get active$() {\n        return this._scrollSpyRef.active$;\n    }\n    scrollTo(fragment, options) {\n        this._scrollSpyRef.scrollTo(fragment, options);\n    }\n    getItem(id) {\n        return this._map.get(id);\n    }\n    ngAfterViewInit() {\n        this._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n        this._rebuildMap();\n        this._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((activeId) => {\n            this._lastActiveItem?._deactivate();\n            const item = this._map.get(activeId);\n            if (item) {\n                item._activate();\n                this._lastActiveItem = item;\n            }\n        });\n    }\n    _rebuildMap() {\n        this._map.clear();\n        for (let item of this._items) {\n            this._map.set(item.fragment, item);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbScrollSpyMenu, isStandalone: true, selector: \"[ngbScrollSpyMenu]\", inputs: { scrollSpy: [\"ngbScrollSpyMenu\", \"scrollSpy\"] }, queries: [{ propertyName: \"_items\", predicate: NgbScrollSpyItem, descendants: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyMenu]',\n                }]\n        }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbScrollSpyItem, { descendants: true }]\n            }], scrollSpy: [{\n                type: Input,\n                args: ['ngbScrollSpyMenu']\n            }] } });\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\nclass NgbScrollSpy {\n    constructor() {\n        this._initialFragment = null;\n        this._service = inject(NgbScrollSpyService);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        /**\n         * An event raised when the active section changes.\n         *\n         * Payload is the id of the new active section, empty string if none.\n         */\n        this.activeChange = this._service.active$;\n    }\n    set active(fragment) {\n        this._initialFragment = fragment;\n        this.scrollTo(fragment);\n    }\n    /**\n     * Getter/setter for the currently active fragment id.\n     */\n    get active() {\n        return this._service.active;\n    }\n    /**\n     * Returns an observable that emits currently active section id.\n     */\n    get active$() {\n        return this._service.active$;\n    }\n    ngAfterViewInit() {\n        this._service.start({\n            processChanges: this.processChanges,\n            root: this._nativeElement,\n            rootMargin: this.rootMargin,\n            threshold: this.threshold,\n            ...(this._initialFragment && { initialFragment: this._initialFragment }),\n        });\n    }\n    /**\n     * @internal\n     */\n    _registerFragment(fragment) {\n        this._service.observe(fragment.id);\n    }\n    /**\n     * @internal\n     */\n    _unregisterFragment(fragment) {\n        this._service.unobserve(fragment.id);\n    }\n    /**\n     * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n     * An id or an element reference can be passed.\n     */\n    scrollTo(fragment, options) {\n        this._service.scrollTo(fragment, {\n            ...(this.scrollBehavior && { behavior: this.scrollBehavior }),\n            ...options,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpy, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbScrollSpy, isStandalone: true, selector: \"[ngbScrollSpy]\", inputs: { processChanges: \"processChanges\", rootMargin: \"rootMargin\", scrollBehavior: \"scrollBehavior\", threshold: \"threshold\", active: \"active\" }, outputs: { activeChange: \"activeChange\" }, host: { attributes: { \"tabindex\": \"0\" }, styleAttribute: \"overflow-y: auto\" }, providers: [NgbScrollSpyService], exportAs: [\"ngbScrollSpy\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpy, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpy]',\n                    exportAs: 'ngbScrollSpy',\n                    host: {\n                        tabindex: '0',\n                        style: 'overflow-y: auto',\n                    },\n                    providers: [NgbScrollSpyService],\n                }]\n        }], propDecorators: { processChanges: [{\n                type: Input\n            }], rootMargin: [{\n                type: Input\n            }], scrollBehavior: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], activeChange: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyFragment {\n    constructor() {\n        this._destroyRef = inject(DestroyRef);\n        this._scrollSpy = inject(NgbScrollSpy);\n    }\n    ngAfterViewInit() {\n        this._scrollSpy._registerFragment(this);\n        this._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyFragment, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbScrollSpyFragment, isStandalone: true, selector: \"[ngbScrollSpyFragment]\", inputs: { id: [\"ngbScrollSpyFragment\", \"id\"] }, host: { properties: { \"id\": \"id\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyFragment, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyFragment]',\n                    host: {\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input,\n                args: ['ngbScrollSpyFragment']\n            }] } });\n\nclass NgbScrollSpyModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyModule, imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu], exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbScrollSpyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                    exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                }]\n        }] });\n\nclass NgbTime {\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    changeHour(step = 1) {\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    changeMinute(step = 1) {\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + (minute % 60) : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    changeSecond(step = 1) {\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + (second % 60) : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    toString() {\n        return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n    }\n}\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nclass NgbTimeAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }]\n        }] });\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimeStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nclass NgbTimepickerI18n {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18n, providedIn: 'root', useFactory: () => new NgbTimepickerI18nDefault() }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => new NgbTimepickerI18nDefault(),\n                }]\n        }] });\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    constructor() {\n        super(...arguments);\n        this._locale = inject(LOCALE_ID);\n        this._periods = [\n            formatDate(new Date(3600000), 'a', this._locale, 'UTC'),\n            formatDate(new Date(3600000 * 13), 'a', this._locale, 'UTC'),\n        ];\n    }\n    getMorningPeriod() {\n        return this._periods[0];\n    }\n    getAfternoonPeriod() {\n        return this._periods[1];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18nDefault, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerI18nDefault, decorators: [{\n            type: Injectable\n        }] });\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    get hourStep() {\n        return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    get minuteStep() {\n        return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    get secondStep() {\n        return this._secondStep;\n    }\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    writeValue(value) {\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Increments the hours by the given step.\n     */\n    changeHour(step) {\n        this.model?.changeHour(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the minutes by the given step.\n     */\n    changeMinute(step) {\n        this.model?.changeMinute(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the seconds by the given step.\n     */\n    changeSecond(step) {\n        this.model?.changeSecond(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Update hours with the new value.\n     */\n    updateHour(newVal) {\n        const isPM = this.model ? this.model.hour >= 12 : false;\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && ((isPM && enteredHour < 12) || (!isPM && enteredHour === 12))) {\n            this.model?.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model?.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    /**\n     * Update minutes with the new value.\n     */\n    updateMinute(newVal) {\n        this.model?.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * Update seconds with the new value.\n     */\n    updateSecond(newVal) {\n        this.model?.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    toggleMeridian() {\n        if (this.model && isNumber(this.model.hour) && this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    formatInput(input) {\n        input.value = input.value.replace(FILTER_REGEX, '');\n    }\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    formatMinSec(value) {\n        return padNumber(isNumber(value) ? value : NaN);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    get isSmallSize() {\n        return this.size === 'small';\n    }\n    get isLargeSize() {\n        return this.size === 'large';\n    }\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model?.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepicker, deps: [{ token: NgbTimepickerConfig }, { token: NgbTimeAdapter }, { token: i0.ChangeDetectorRef }, { token: NgbTimepickerI18n }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbTimepicker, isStandalone: true, selector: \"ngb-timepicker\", inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], exportAs: [\"ngbTimepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t@if (seconds) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t@if (meridian) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\"></div>\n\t\t\t\t\t<div class=\"ngb-tp-meridian\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (model && model.hour >= 12) {\n\t\t\t\t\t\t\t\t<ng-container i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n\t\t\t\t\t\t\t} @else {\n\t\t\t\t\t\t\t\t<ng-container>{{ i18n.getMorningPeriod() }}</ng-container>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t`, isInline: true, styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbTimepicker', selector: 'ngb-timepicker', encapsulation: ViewEncapsulation.None, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t@if (seconds) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t@if (meridian) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\"></div>\n\t\t\t\t\t<div class=\"ngb-tp-meridian\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (model && model.hour >= 12) {\n\t\t\t\t\t\t\t\t<ng-container i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n\t\t\t\t\t\t\t} @else {\n\t\t\t\t\t\t\t\t<ng-container>{{ i18n.getMorningPeriod() }}</ng-container>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t`, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"] }]\n        }], ctorParameters: () => [{ type: NgbTimepickerConfig }, { type: NgbTimeAdapter }, { type: i0.ChangeDetectorRef }, { type: NgbTimepickerI18n }], propDecorators: { meridian: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], seconds: [{\n                type: Input\n            }], hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondStep: [{\n                type: Input\n            }], readonlyInputs: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass NgbTimepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerModule, imports: [NgbTimepicker], exports: [NgbTimepicker] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTimepicker],\n                    exports: [NgbTimepicker],\n                }]\n        }] });\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nclass NgbToastConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autohide = true;\n        this.delay = 5000;\n        this.ariaLive = 'polite';\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ngbToastFadeInTransition = (element, animation) => {\n    const { classList } = element;\n    if (animation) {\n        classList.add('fade');\n    }\n    else {\n        classList.add('show');\n        return;\n    }\n    reflow(element);\n    classList.add('show', 'showing');\n    return () => {\n        classList.remove('showing');\n    };\n};\nconst ngbToastFadeOutTransition = ({ classList }) => {\n    classList.add('showing');\n    return () => {\n        classList.remove('show', 'showing');\n    };\n};\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nclass NgbToastHeader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbToastHeader, isStandalone: true, selector: \"[ngbToastHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbToastHeader]' }]\n        }] });\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nclass NgbToast {\n    constructor(ariaLive) {\n        this.ariaLive = ariaLive;\n        this._config = inject(NgbToastConfig);\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._element = inject(ElementRef);\n        /**\n         * If `true`, toast opening and closing will be animated.\n         *\n         * Animation is triggered only when the `.hide()` or `.show()` functions are called\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Delay after which the toast will hide (ms).\n         * default: `500` (ms) (inherited from NgbToastConfig)\n         */\n        this.delay = this._config.delay;\n        /**\n         * Auto hide the toast after a delay in ms.\n         * default: `true` (inherited from NgbToastConfig)\n         */\n        this.autohide = this._config.autohide;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired after the animation triggered by calling `.show()` method has finished.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event fired after the animation triggered by calling `.hide()` method has finished.\n         *\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross\n         *\n         * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n         * to the user to take care of that.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.ariaLive ??= this._config.ariaLive;\n    }\n    ngAfterContentInit() {\n        afterNextRender({\n            mixedReadWrite: () => {\n                this._init();\n                this.show();\n            },\n        }, { injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    }\n    /**\n     * Triggers toast closing programmatically.\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(hidden)` output\n     *\n     * @since 8.0.0\n     */\n    hide() {\n        this._clearTimeout();\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n        transition.subscribe(() => {\n            this.hidden.emit();\n        });\n        return transition;\n    }\n    /**\n     * Triggers toast opening programmatically.\n     *\n     * The returned observable will emit and be completed once the opening transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(shown)` output\n     *\n     * @since 8.0.0\n     */\n    show() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => {\n            this.shown.emit();\n        });\n        return transition;\n    }\n    _init() {\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout(() => this.hide(), this.delay);\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToast, deps: [{ token: 'aria-live', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbToast, isStandalone: true, selector: \"ngb-toast\", inputs: { animation: \"animation\", delay: \"delay\", autohide: \"autohide\", header: \"header\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"alert\", \"aria-atomic\": \"true\" }, properties: { \"attr.aria-live\": \"ariaLive\", \"class.fade\": \"animation\" }, classAttribute: \"toast\" }, queries: [{ propertyName: \"contentHeaderTpl\", first: true, predicate: NgbToastHeader, descendants: true, read: TemplateRef, static: true }], exportAs: [\"ngbToast\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t@if (contentHeaderTpl || header) {\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\" />\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t}\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToast, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-toast', exportAs: 'ngbToast', imports: [NgTemplateOutlet], encapsulation: ViewEncapsulation.None, host: {\n                        role: 'alert',\n                        '[attr.aria-live]': 'ariaLive',\n                        'aria-atomic': 'true',\n                        class: 'toast',\n                        '[class.fade]': 'animation',\n                    }, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t@if (contentHeaderTpl || header) {\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\" />\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t}\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }], propDecorators: { animation: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], autohide: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], contentHeaderTpl: [{\n                type: ContentChild,\n                args: [NgbToastHeader, { read: TemplateRef, static: true }]\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbToastModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastModule, imports: [NgbToast, NgbToastHeader], exports: [NgbToast, NgbToastHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbToastModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbToast, NgbToastHeader],\n                    exports: [NgbToast, NgbToastHeader],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nlet nextId = 0;\nclass NgbTooltipWindow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbTooltipWindow, isStandalone: true, selector: \"ngb-tooltip-window\", inputs: { animation: \"animation\", id: \"id\", tooltipClass: \"tooltipClass\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\" }, host: { attributes: { \"role\": \"tooltip\" }, listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" }, properties: { \"class\": \"\\\"tooltip\\\" + (tooltipClass ? \\\" \\\" + tooltipClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" } }, ngImport: i0, template: `\n\t\t<div class=\"tooltip-arrow\" data-popper-arrow></div>\n\t\t<div class=\"tooltip-inner\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-tooltip-window{pointer-events:none;position:absolute}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-top,ngb-tooltip-window.bs-tooltip-bottom{padding-left:0;padding-right:0}ngb-tooltip-window.bs-tooltip-start,ngb-tooltip-window.bs-tooltip-end{padding-top:0;padding-bottom:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-tooltip-window', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                        '(mouseenter)': 'onMouseEnter()',\n                        '(mouseleave)': 'onMouseLeave()',\n                    }, template: `\n\t\t<div class=\"tooltip-arrow\" data-popper-arrow></div>\n\t\t<div class=\"tooltip-inner\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, styles: [\"ngb-tooltip-window{pointer-events:none;position:absolute}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-top,ngb-tooltip-window.bs-tooltip-bottom{padding-left:0;padding-right:0}ngb-tooltip-window.bs-tooltip-start,ngb-tooltip-window.bs-tooltip-end{padding-top:0;padding-bottom:0}\\n\"] }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }], onMouseEnter: [{\n                type: Input\n            }], onMouseLeave: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    constructor() {\n        this._config = inject(NgbTooltipConfig);\n        /**\n         * If `true`, tooltip opening and closing will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n         *\n         * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n         * * `false` - disables the autoClose feature (NB: triggers still apply)\n         * * `\"inside\"` - closes on inside clicks as well as Escape presses\n         * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n         * as well as `Escape` presses\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the tooltip, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"auto\"`.\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the tooltip.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * Specifies events that should trigger the tooltip.\n         *\n         * Supports a space separated list of event names.\n         * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n         */\n        this.triggers = this._config.triggers;\n        /**\n         * A selector specifying the element the tooltip should be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, tooltip is disabled and won't be displayed.\n         *\n         * @since 1.1.0\n         */\n        this.disableTooltip = this._config.disableTooltip;\n        /**\n         * An optional class applied to the tooltip window element.\n         *\n         * @since 3.2.0\n         */\n        this.tooltipClass = this._config.tooltipClass;\n        /**\n         * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.openDelay = this._config.openDelay;\n        /**\n         * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.closeDelay = this._config.closeDelay;\n        /**\n         * An event emitted when the tooltip opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the tooltip closing animation has finished. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngZone = inject(NgZone);\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n        this._popupService = new PopupService(NgbTooltipWindow);\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n        this._mouseEnterTooltip = new Subject();\n        this._mouseLeaveTooltip = new Subject();\n        this._opening = true;\n        this._transitioning = false;\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    get ngbTooltip() {\n        return this._ngbTooltip;\n    }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context) {\n        if (!this._opening && this._transitioning) {\n            this._transitioning = false;\n            ngbCompleteTransition(this._windowRef.location.nativeElement);\n        }\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            const { windowRef, transition$ } = this._popupService.open(this._ngbTooltip, context ?? this.tooltipContext, this.animation);\n            this._opening = true;\n            this._transitioning = true;\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('tooltipClass', this.tooltipClass);\n            this._windowRef.setInput('id', this._ngbTooltipWindowId);\n            this._windowRef.setInput('onMouseEnter', () => this._mouseEnterTooltip.next());\n            this._windowRef.setInput('onMouseLeave', () => this._mouseLeaveTooltip.next());\n            this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    baseClass: 'bs-tooltip',\n                    updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 6])(options)),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                });\n                this._afterRenderRef = afterEveryRender({\n                    mixedReadWrite: () => {\n                        this._positioning.update();\n                    },\n                }, { injector: this._injector });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement], [this._nativeElement]);\n            transition$.subscribe(() => {\n                if (this._transitioning) {\n                    this._transitioning = false;\n                    this.shown.emit();\n                }\n            });\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    close(animation = this.animation) {\n        if (this._opening && this._transitioning) {\n            this._transitioning = false;\n            ngbCompleteTransition(this._windowRef.location.nativeElement);\n        }\n        if (this._windowRef != null) {\n            this._getPositionTargetElement().removeAttribute('aria-describedby');\n            this._opening = false;\n            this._transitioning = true;\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._afterRenderRef?.destroy();\n                if (this._transitioning) {\n                    this._transitioning = false;\n                    this.hidden.emit();\n                }\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the tooltip is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay, this._mouseEnterTooltip, this._mouseLeaveTooltip);\n    }\n    ngOnChanges({ tooltipClass }) {\n        if (tooltipClass && this.isOpen()) {\n            this._windowRef.setInput('tooltipClass', tooltipClass.currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is necessary because it's possible that ngOnDestroy could be invoked before ngOnInit.\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbTooltip, isStandalone: true, selector: \"[ngbTooltip]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", tooltipContext: \"tooltipContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltip, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disableTooltip: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], ngbTooltip: [{\n                type: Input\n            }] } });\n\nclass NgbTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipModule, imports: [NgbTooltip], exports: [NgbTooltip] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTooltip],\n                    exports: [NgbTooltip],\n                }]\n        }] });\n\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n        /**\n         * Boolean option to determine if the highlighting should be sensitive to accents or not.\n         *\n         * This feature is only available for browsers that implement the `String.normalize` function\n         * (typically not Internet Explorer).\n         * If you want to use this feature in a browser that does not implement `String.normalize`,\n         * you will have to include a polyfill in your application (`unorm` for example).\n         *\n         * @since 9.1.0\n         */\n        this.accentSensitive = true;\n    }\n    ngOnChanges(changes) {\n        if (!this.accentSensitive && !String.prototype.normalize) {\n            console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\n                'that does not implement the `String.normalize` function. ' +\n                'You will have to include a polyfill in your application to use this feature in the current browser.');\n            this.accentSensitive = true;\n        }\n        const result = toString(this.result);\n        const terms = Array.isArray(this.term) ? this.term : [this.term];\n        const prepareTerm = (term) => (this.accentSensitive ? term : removeAccents(term));\n        const escapedTerms = terms.map((term) => regExpEscape(prepareTerm(toString(term)))).filter((term) => term);\n        const toSplit = this.accentSensitive ? result : removeAccents(result);\n        const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n        if (this.accentSensitive) {\n            this.parts = parts;\n        }\n        else {\n            let offset = 0;\n            this.parts = parts.map((part) => result.substring(offset, (offset += part.length)));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbHighlight, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbHighlight, isStandalone: true, selector: \"ngb-highlight\", inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\", accentSensitive: \"accentSensitive\" }, usesOnChanges: true, ngImport: i0, template: `\n\t\t@for (part of parts; track $index) {\n\t\t\t@if ($odd) {\n\t\t\t\t<span class=\"{{ highlightClass }}\">{{ part }}</span>\n\t\t\t} @else {\n\t\t\t\t<ng-container>{{ part }}</ng-container>\n\t\t\t}\n\t\t}\n\t`, isInline: true, styles: [\".ngb-highlight{font-weight:700}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbHighlight, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-highlight', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t@for (part of parts; track $index) {\n\t\t\t@if ($odd) {\n\t\t\t\t<span class=\"{{ highlightClass }}\">{{ part }}</span>\n\t\t\t} @else {\n\t\t\t\t<ng-container>{{ part }}</ng-container>\n\t\t\t}\n\t\t}\n\t`, styles: [\".ngb-highlight{font-weight:700}\\n\"] }]\n        }], propDecorators: { highlightClass: [{\n                type: Input\n            }], result: [{\n                type: Input,\n                args: [{ required: true }]\n            }], term: [{\n                type: Input,\n                args: [{ required: true }]\n            }], accentSensitive: [{\n                type: Input\n            }] } });\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n    providedIn: 'root',\n    factory: () => 100,\n});\nfunction getLiveElement(document, lazyCreate = false) {\n    let element = document.body.querySelector('#ngb-live');\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('visually-hidden');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._delay = inject(ARIA_LIVE_DELAY);\n    }\n    ngOnDestroy() {\n        const element = getLiveElement(this._document);\n        if (element) {\n            // if exists, it will always be attached to the <body>\n            element.parentElement.removeChild(element);\n        }\n    }\n    say(message) {\n        const element = getLiveElement(this._document, true);\n        const delay = this._delay;\n        if (element != null) {\n            element.textContent = '';\n            const setText = () => (element.textContent = message);\n            if (delay === null) {\n                setText();\n            }\n            else {\n                setTimeout(setText, delay);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Live, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Live, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Live, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.selectOnExact = false;\n        this.showHint = false;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    hasActive() {\n        return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n    getActive() {\n        return this.results[this.activeIdx];\n    }\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    select(item) {\n        this.selectEvent.emit(item);\n    }\n    ngOnInit() {\n        this.resetActive();\n    }\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: NgbTypeaheadWindow, isStandalone: true, selector: \"ngb-typeahead-window\", inputs: { id: \"id\", focusFirst: \"focusFirst\", results: \"results\", term: \"term\", formatter: \"formatter\", resultTemplate: \"resultTemplate\", popupClass: \"popupClass\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"mousedown\": \"$event.preventDefault()\" }, properties: { \"class\": \"\\\"dropdown-menu show\\\" + (popupClass ? \\\" \\\" + popupClass : \\\"\\\")\", \"id\": \"id\" } }, exportAs: [\"ngbTypeaheadWindow\"], ngImport: i0, template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\" />\n\t\t</ng-template>\n\t\t@for (result of results; track $index) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + $index\"\n\t\t\t\t[class.active]=\"$index === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive($index)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"component\", type: NgbHighlight, selector: \"ngb-highlight\", inputs: [\"highlightClass\", \"result\", \"term\", \"accentSensitive\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    imports: [NgbHighlight, NgTemplateOutlet],\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '(mousedown)': '$event.preventDefault()',\n                        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n                        role: 'listbox',\n                        '[id]': 'id',\n                    },\n                    template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\" />\n\t\t</ng-template>\n\t\t@for (result of results; track $index) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + $index\"\n\t\t\t\t[class.active]=\"$index === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive($index)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], term: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectEvent: [{\n                type: Output,\n                args: ['select']\n            }], activeChangeEvent: [{\n                type: Output,\n                args: ['activeChange']\n            }] } });\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._config = inject(NgbTypeaheadConfig);\n        this._live = inject(Live);\n        this._document = inject(DOCUMENT);\n        this._ngZone = inject(NgZone);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._popupService = new PopupService(NgbTypeaheadWindow);\n        this._positioning = ngbPositioning();\n        this._subscription = null;\n        this._closed$ = new Subject();\n        this._inputValueBackup = null;\n        this._inputValueForSelectOnExact = null;\n        this._valueChanges$ = fromEvent(this._nativeElement, 'input').pipe(map(($event) => $event.target.value));\n        this._resubscribeTypeahead$ = new BehaviorSubject(null);\n        this._windowRef = null;\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * @since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * A selector specifying the element the typeahead popup will be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, model values will not be restricted only to items selected from the popup.\n         */\n        this.editable = this._config.editable;\n        /**\n         * If `true`, the first item in the result list will always stay focused while typing.\n         */\n        this.focusFirst = this._config.focusFirst;\n        /**\n         * If `true`, automatically selects the item when it is the only one that exactly matches the user input\n         *\n         * @since 14.2.0\n         */\n        this.selectOnExact = this._config.selectOnExact;\n        /**\n         * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n         */\n        this.showHint = this._config.showHint;\n        /**\n         * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the typeahead.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.activeDescendant = null;\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = () => { };\n        this._onChange = (_) => { };\n    }\n    ngOnInit() {\n        this._subscribeToUserInput();\n    }\n    ngOnChanges({ ngbTypeahead }) {\n        if (ngbTypeahead && !ngbTypeahead.firstChange) {\n            this._unsubscribeFromUserInput();\n            this._subscribeToUserInput();\n        }\n    }\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    setDisabledState(isDisabled) {\n        this._nativeElement.disabled = isDisabled;\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead$.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    isPopupOpen() {\n        return this._windowRef != null;\n    }\n    handleBlur() {\n        this._resubscribeTypeahead$.next(null);\n        this._onTouched();\n    }\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        switch (event.key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case 'Enter':\n            case 'Tab': {\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n            }\n        }\n    }\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._nativeElement.value;\n            const { windowRef } = this._popupService.open();\n            this._windowRef = windowRef;\n            this._windowRef.setInput('id', this.popupId);\n            this._windowRef.setInput('popupClass', this.popupClass);\n            this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n            this._windowRef.instance.activeChangeEvent.subscribe((activeId) => (this.activeDescendant = activeId));\n            if (this.container === 'body') {\n                this._windowRef.location.nativeElement.style.zIndex = '1055';\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._windowRef) {\n                    this._positioning.createPopper({\n                        hostElement: this._nativeElement,\n                        targetElement: this._windowRef.location.nativeElement,\n                        placement: this.placement,\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._afterRenderRef = afterEveryRender({\n                        mixedReadWrite: () => {\n                            this._positioning.update();\n                        },\n                    }, { injector: this._injector });\n                }\n            });\n            ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [\n                this._nativeElement,\n                this._windowRef.location.nativeElement,\n            ]);\n        }\n    }\n    _closePopup() {\n        this._popupService.close().subscribe(() => {\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._closed$.next();\n            this._windowRef = null;\n            this.activeDescendant = null;\n        });\n    }\n    _selectResult(result) {\n        let defaultPrevented = false;\n        this.selectItem.emit({\n            item: result,\n            preventDefault: () => {\n                defaultPrevented = true;\n            },\n        });\n        this._resubscribeTypeahead$.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    _showHint() {\n        if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n                this._nativeElement['setSelectionRange'].apply(this._nativeElement, [\n                    this._inputValueBackup.length,\n                    formattedVal.length,\n                ]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    _writeInputValue(value) {\n        this._nativeElement.value = toString(value);\n    }\n    _subscribeToUserInput() {\n        const results$ = this._valueChanges$.pipe(tap((value) => {\n            this._inputValueBackup = this.showHint ? value : null;\n            this._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n            this._onChange(this.editable ? value : null);\n        }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n        this._subscription = this._resubscribeTypeahead$.pipe(switchMap(() => results$)).subscribe((results) => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                // when there is only one result and this matches the input value\n                if (this.selectOnExact &&\n                    results.length === 1 &&\n                    this._formatItemForInput(results[0]) === this._inputValueForSelectOnExact) {\n                    this._selectResult(results[0]);\n                    this._closePopup();\n                }\n                else {\n                    this._openPopup();\n                    this._windowRef.setInput('focusFirst', this.focusFirst);\n                    this._windowRef.setInput('results', results);\n                    this._windowRef.setInput('term', this._nativeElement.value);\n                    if (this.resultFormatter) {\n                        this._windowRef.setInput('formatter', this.resultFormatter);\n                    }\n                    if (this.resultTemplate) {\n                        this._windowRef.setInput('resultTemplate', this.resultTemplate);\n                    }\n                    this._windowRef.instance.resetActive();\n                    // The observable stream we are subscribing to might have async steps\n                    // and if a component containing typeahead is using the OnPush strategy\n                    // the change detection turn wouldn't be invoked automatically.\n                    this._windowRef.changeDetectorRef.detectChanges();\n                    this._showHint();\n                }\n            }\n            // live announcer\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        });\n    }\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeahead, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbTypeahead, isStandalone: true, selector: \"input[ngbTypeahead]\", inputs: { autocomplete: \"autocomplete\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\", selectOnExact: \"selectOnExact\", showHint: \"showHint\", placement: \"placement\", popperOptions: \"popperOptions\", popupClass: \"popupClass\" }, outputs: { selectItem: \"selectItem\" }, host: { attributes: { \"autocapitalize\": \"off\", \"autocorrect\": \"off\", \"role\": \"combobox\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\" }, properties: { \"class.open\": \"isPopupOpen()\", \"autocomplete\": \"autocomplete\", \"attr.aria-autocomplete\": \"showHint ? \\\"both\\\" : \\\"list\\\"\", \"attr.aria-activedescendant\": \"activeDescendant\", \"attr.aria-controls\": \"isPopupOpen() ? popupId : null\", \"attr.aria-expanded\": \"isPopupOpen()\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }], exportAs: [\"ngbTypeahead\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeahead, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '[autocomplete]': 'autocomplete',\n                        autocapitalize: 'off',\n                        autocorrect: 'off',\n                        role: 'combobox',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-controls]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()',\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }],\n                }]\n        }], propDecorators: { autocomplete: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], inputFormatter: [{\n                type: Input\n            }], ngbTypeahead: [{\n                type: Input\n            }], resultFormatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], selectOnExact: [{\n                type: Input\n            }], showHint: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectItem: [{\n                type: Output\n            }] } });\n\nclass NgbTypeaheadModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadModule, imports: [NgbHighlight, NgbTypeahead], exports: [NgbHighlight, NgbTypeahead] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbTypeaheadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbHighlight, NgbTypeahead],\n                    exports: [NgbHighlight, NgbTypeahead],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.backdrop = true;\n        this.keyboard = true;\n        this.position = 'start';\n        this.scroll = false;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nclass NgbActiveOffcanvas {\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasRef {\n    /**\n     * The instance of a component used for the offcanvas content.\n     *\n     * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the offcanvas is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n     * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when offcanvas is fully visible and animation was finished.\n     * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if offcanvas is closed before open animation is finished.\n     */\n    get shown() {\n        return this._panelCmptRef.instance.shown.asObservable();\n    }\n    constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._panelCmptRef = _panelCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _panelCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        if (_backdropCmptRef) {\n            _backdropCmptRef.instance.dismissEvent.subscribe((reason) => {\n                this.dismiss(reason);\n            });\n        }\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._panelCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeOffcanvasElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeOffcanvasElements();\n    }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._panelCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeOffcanvasElements() {\n        const panelTransition$ = this._panelCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding panel\n        panelTransition$.subscribe(() => {\n            const { nativeElement } = this._panelCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._panelCmptRef.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._panelCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(panelTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar OffcanvasDismissReasons;\n(function (OffcanvasDismissReasons) {\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this.dismissEvent = new EventEmitter();\n    }\n    ngOnInit() {\n        afterNextRender({\n            mixedReadWrite: () => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' }),\n        }, { injector: this._injector });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    dismiss() {\n        if (!this.static) {\n            this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasBackdrop, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbOffcanvasBackdrop, isStandalone: true, selector: \"ngb-offcanvas-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\", static: \"static\" }, outputs: { dismissEvent: \"dismiss\" }, host: { listeners: { \"mousedown\": \"dismiss()\" }, properties: { \"class\": \"\\\"offcanvas-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" } }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-backdrop',\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        '(mousedown)': 'dismiss()',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }], static: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasPanel {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._elRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to offcanvas opening\n        this.keyboard = true;\n        this.position = 'start';\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        afterNextRender({ mixedReadWrite: () => this._show() }, { injector: this._injector });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element) => {\n            element.classList.remove('showing');\n            element.classList.add('hiding');\n            return () => element.classList.remove('show', 'hiding');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return offcanvasTransition$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show', 'showing');\n            return () => element.classList.remove('showing');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), filter((e) => e.key === 'Escape'))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasPanel, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: NgbOffcanvasPanel, isStandalone: true, selector: \"ngb-offcanvas-panel\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", keyboard: \"keyboard\", panelClass: \"panelClass\", position: \"position\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"offcanvas offcanvas-\\\" + position  + (panelClass ? \\\" \\\" + panelClass : \\\"\\\")\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, ngImport: i0, template: '<ng-content />', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-panel',\n                    template: '<ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasStack {\n    constructor() {\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._document = inject(DOCUMENT);\n        this._scrollBar = inject(ScrollBar);\n        this._activePanelCmptHasChanged = new Subject();\n        this._scrollBarRestoreFn = null;\n        this._backdropAttributes = ['animation', 'backdropClass'];\n        this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n        this._activeInstance = new EventEmitter();\n        const ngZone = inject(NgZone);\n        // Trap focus on active PanelCmpt\n        this._activePanelCmptHasChanged.subscribe(() => {\n            if (this._panelCmpt) {\n                ngbFocusTrap(ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        if (!options.scroll) {\n            this._hideScrollBar();\n        }\n        const activeOffcanvas = new NgbActiveOffcanvas();\n        const contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let panelCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerOffcanvasRef(ngbOffcanvasRef);\n        this._registerPanelCmpt(panelCmptRef);\n        ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n        activeOffcanvas.close = (result) => {\n            ngbOffcanvasRef.close(result);\n        };\n        activeOffcanvas.dismiss = (reason) => {\n            ngbOffcanvasRef.dismiss(reason);\n        };\n        this._applyPanelOptions(panelCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        panelCmptRef.changeDetectorRef.detectChanges();\n        return ngbOffcanvasRef;\n    }\n    get activeInstance() {\n        return this._activeInstance;\n    }\n    dismiss(reason) {\n        this._offcanvasRef?.dismiss(reason);\n    }\n    hasOpenOffcanvas() {\n        return !!this._offcanvasRef;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let panelCmptRef = createComponent(NgbOffcanvasPanel, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(panelCmptRef.hostView);\n        containerEl.appendChild(panelCmptRef.location.nativeElement);\n        return panelCmptRef;\n    }\n    _applyPanelOptions(windowInstance, options) {\n        this._panelAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n        backdropInstance.static = options.backdrop === 'static';\n    }\n    _getContentRef(contentInjector, content, activeOffcanvas) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeOffcanvas);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, content, activeOffcanvas);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeOffcanvas) {\n        const context = {\n            $implicit: activeOffcanvas,\n            close(result) {\n                activeOffcanvas.close(result);\n            },\n            dismiss(reason) {\n                activeOffcanvas.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, componentType, context) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveOffcanvas, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _registerOffcanvasRef(ngbOffcanvasRef) {\n        const unregisterOffcanvasRef = () => {\n            this._offcanvasRef = undefined;\n            this._activeInstance.emit(this._offcanvasRef);\n        };\n        this._offcanvasRef = ngbOffcanvasRef;\n        this._activeInstance.emit(this._offcanvasRef);\n        ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n    }\n    _registerPanelCmpt(ngbPanelCmpt) {\n        this._panelCmpt = ngbPanelCmpt;\n        this._activePanelCmptHasChanged.next();\n        ngbPanelCmpt.onDestroy(() => {\n            this._panelCmpt = undefined;\n            this._activePanelCmptHasChanged.next();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasStack, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvas {\n    constructor() {\n        this._injector = inject(Injector);\n        this._offcanvasStack = inject(NgbOffcanvasStack);\n        this._config = inject(NgbOffcanvasConfig);\n    }\n    /**\n     * Opens a new offcanvas panel with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n     * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n     *\n     * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n     * options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._offcanvasStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active offcanvas instance.\n     */\n    get activeInstance() {\n        return this._offcanvasStack.activeInstance;\n    }\n    /**\n     * Dismisses the currently displayed offcanvas with the supplied reason.\n     */\n    dismiss(reason) {\n        this._offcanvasStack.dismiss(reason);\n    }\n    /**\n     * Indicates if there is currently an open offcanvas in the application.\n     */\n    hasOpenOffcanvas() {\n        return this._offcanvasStack.hasOpenOffcanvas();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvas, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvas, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvas, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbOffcanvasModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbOffcanvasModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nconst NGB_MODULES = [\n    NgbAccordionModule,\n    NgbAlertModule,\n    NgbCarouselModule,\n    NgbCollapseModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbNavModule,\n    NgbOffcanvasModule,\n    NgbPaginationModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbRatingModule,\n    NgbScrollSpyModule,\n    NgbTimepickerModule,\n    NgbToastModule,\n    NgbTooltipModule,\n    NgbTypeaheadModule,\n];\nclass NgbModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModule, imports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule], exports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModule, imports: [NGB_MODULES, NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: NgbModule, decorators: [{\n            type: NgModule,\n            args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordionBody, NgbAccordionButton, NgbAccordionCollapse, NgbAccordionConfig, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem, NgbAccordionModule, NgbAccordionToggle, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarEthiopian, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDateStructAdapter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nAmharic, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownButtonItem, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkBase, NgbNavLinkButton, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbProgressbarStacked, NgbRating, NgbRatingConfig, NgbRatingModule, NgbScrollSpy, NgbScrollSpyConfig, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu, NgbScrollSpyModule, NgbScrollSpyService, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };\n"],"mappings":"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EAAE,EAAE,CAAC;AACnD,MAAMke,mBAAmB,GAAG,IAAIle,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;AAClD,MAAMme,WAAW,GAAG,IAAI;AACxB,MAAMC,SAAS,GAAG,IAAI;AACtB,MAAMC,OAAO,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC,MAAMC,YAAY,GAAG;AACjB;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc;AACd;AACA,cAAc,CACjB;AACD,SAASC,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC/B;EACA,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}