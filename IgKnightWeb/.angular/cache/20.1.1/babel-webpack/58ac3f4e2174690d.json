{"ast":null,"code":"import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason = /*#__PURE__*/function (WillSaveStateReason) {\n  /**\n   * No specific reason to save state.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * A hint that the workbench is about to shutdown.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n  return WillSaveStateReason;\n}(WillSaveStateReason || {});\nexport function loadKeyTargets(storage) {\n  const keysRaw = storage.get(TARGET_KEY);\n  if (keysRaw) {\n    try {\n      return JSON.parse(keysRaw);\n    } catch (error) {\n      // Fail gracefully\n    }\n  }\n  return Object.create(null);\n}\nexport let AbstractStorageService = /*#__PURE__*/(() => {\n  class AbstractStorageService extends Disposable {\n    static #_ = this.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n    constructor(options = {\n      flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL\n    }) {\n      super();\n      this.options = options;\n      this._onDidChangeValue = this._register(new PauseableEmitter());\n      this._onDidChangeTarget = this._register(new PauseableEmitter());\n      this._onWillSaveState = this._register(new Emitter());\n      this.onWillSaveState = this._onWillSaveState.event;\n      this._workspaceKeyTargets = undefined;\n      this._profileKeyTargets = undefined;\n      this._applicationKeyTargets = undefined;\n    }\n    onDidChangeValue(scope, key, disposable) {\n      return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n    }\n    emitDidChangeValue(scope, event) {\n      const {\n        key,\n        external\n      } = event;\n      // Specially handle `TARGET_KEY`\n      if (key === TARGET_KEY) {\n        // Clear our cached version which is now out of date\n        switch (scope) {\n          case -1 /* StorageScope.APPLICATION */:\n            this._applicationKeyTargets = undefined;\n            break;\n          case 0 /* StorageScope.PROFILE */:\n            this._profileKeyTargets = undefined;\n            break;\n          case 1 /* StorageScope.WORKSPACE */:\n            this._workspaceKeyTargets = undefined;\n            break;\n        }\n        // Emit as `didChangeTarget` event\n        this._onDidChangeTarget.fire({\n          scope\n        });\n      }\n      // Emit any other key to outside\n      else {\n        this._onDidChangeValue.fire({\n          scope,\n          key,\n          target: this.getKeyTargets(scope)[key],\n          external\n        });\n      }\n    }\n    get(key, scope, fallbackValue) {\n      return this.getStorage(scope)?.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n      return this.getStorage(scope)?.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n      return this.getStorage(scope)?.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target, external = false) {\n      // We remove the key for undefined/null values\n      if (isUndefinedOrNull(value)) {\n        this.remove(key, scope, external);\n        return;\n      }\n      // Update our datastructures but send events only after\n      this.withPausedEmitters(() => {\n        // Update key-target map\n        this.updateKeyTarget(key, scope, target);\n        // Store actual value\n        this.getStorage(scope)?.set(key, value, external);\n      });\n    }\n    remove(key, scope, external = false) {\n      // Update our datastructures but send events only after\n      this.withPausedEmitters(() => {\n        // Update key-target map\n        this.updateKeyTarget(key, scope, undefined);\n        // Remove actual key\n        this.getStorage(scope)?.delete(key, external);\n      });\n    }\n    withPausedEmitters(fn) {\n      // Pause emitters\n      this._onDidChangeValue.pause();\n      this._onDidChangeTarget.pause();\n      try {\n        fn();\n      } finally {\n        // Resume emitters\n        this._onDidChangeValue.resume();\n        this._onDidChangeTarget.resume();\n      }\n    }\n    updateKeyTarget(key, scope, target, external = false) {\n      // Add\n      const keyTargets = this.getKeyTargets(scope);\n      if (typeof target === 'number') {\n        if (keyTargets[key] !== target) {\n          keyTargets[key] = target;\n          this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n        }\n      }\n      // Remove\n      else {\n        if (typeof keyTargets[key] === 'number') {\n          delete keyTargets[key];\n          this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n        }\n      }\n    }\n    get workspaceKeyTargets() {\n      if (!this._workspaceKeyTargets) {\n        this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n      }\n      return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n      if (!this._profileKeyTargets) {\n        this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n      }\n      return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n      if (!this._applicationKeyTargets) {\n        this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n      }\n      return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n      switch (scope) {\n        case -1 /* StorageScope.APPLICATION */:\n          return this.applicationKeyTargets;\n        case 0 /* StorageScope.PROFILE */:\n          return this.profileKeyTargets;\n        default:\n          return this.workspaceKeyTargets;\n      }\n    }\n    loadKeyTargets(scope) {\n      const storage = this.getStorage(scope);\n      return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n  }\n  return AbstractStorageService;\n})();\nexport class InMemoryStorageService extends AbstractStorageService {\n  constructor() {\n    super();\n    this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n    this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n    this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n  }\n  getStorage(scope) {\n    switch (scope) {\n      case -1 /* StorageScope.APPLICATION */:\n        return this.applicationStorage;\n      case 0 /* StorageScope.PROFILE */:\n        return this.profileStorage;\n      default:\n        return this.workspaceStorage;\n    }\n  }\n}","map":{"version":3,"names":["Emitter","Event","PauseableEmitter","Disposable","isUndefinedOrNull","InMemoryStorageDatabase","Storage","StorageHint","createDecorator","TARGET_KEY","IStorageService","WillSaveStateReason","loadKeyTargets","storage","keysRaw","get","JSON","parse","error","Object","create","AbstractStorageService","_","DEFAULT_FLUSH_INTERVAL","constructor","options","flushInterval","_onDidChangeValue","_register","_onDidChangeTarget","_onWillSaveState","onWillSaveState","event","_workspaceKeyTargets","undefined","_profileKeyTargets","_applicationKeyTargets","onDidChangeValue","scope","key","disposable","filter","e","emitDidChangeValue","external","fire","target","getKeyTargets","fallbackValue","getStorage","getBoolean","getNumber","store","value","remove","withPausedEmitters","updateKeyTarget","set","delete","fn","pause","resume","keyTargets","stringify","workspaceKeyTargets","profileKeyTargets","applicationKeyTargets","InMemoryStorageService","applicationStorage","hint","STORAGE_IN_MEMORY","profileStorage","workspaceStorage","onDidChangeStorage"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js"],"sourcesContent":["import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nexport class AbstractStorageService extends Disposable {\n    static { this.DEFAULT_FLUSH_INTERVAL = 60 * 1000; } // every minute\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    onDidChangeValue(scope, key, disposable) {\n        return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n    }\n    emitDidChangeValue(scope, event) {\n        const { key, external } = event;\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key], external });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target, external = false) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope, external);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            this.getStorage(scope)?.set(key, value, external);\n        });\n    }\n    remove(key, scope, external = false) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            this.getStorage(scope)?.delete(key, external);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target, external = false) {\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n        this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n        this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}