{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction TechnologyPractice_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 6);\n    i0.ÉµÉµlistener(\"click\", function TechnologyPractice_div_7_Template_div_click_0_listener() {\n      const tech_r2 = i0.ÉµÉµrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.goToAssignments(tech_r2.slug));\n    });\n    i0.ÉµÉµelementStart(1, \"div\", 7)(2, \"h2\", 8);\n    i0.ÉµÉµtext(3);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelement(4, \"i\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(5, \"p\", 9);\n    i0.ÉµÉµtext(6);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const tech_r2 = ctx.$implicit;\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµtextInterpolate(tech_r2.name);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµclassMap(tech_r2.icon + \" text-orange-500 text-2xl\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(tech_r2.desc);\n  }\n}\nexport let TechnologyPractice = /*#__PURE__*/(() => {\n  class TechnologyPractice {\n    router;\n    constructor(router) {\n      this.router = router;\n    }\n    technologies = [{\n      name: 'HTML',\n      slug: 'html',\n      icon: 'lucide lucide-code-2',\n      desc: 'Tags, structure, and layout practice'\n    }, {\n      name: 'CSS',\n      slug: 'css',\n      icon: 'lucide lucide-paintbrush',\n      desc: 'Styling, flexbox, grid and more'\n    }, {\n      name: 'JavaScript',\n      slug: 'javascript',\n      icon: 'lucide lucide-bug-play',\n      desc: 'ES6, DOM, functions, and logic'\n    }, {\n      name: 'TypeScript',\n      slug: 'typescript',\n      icon: 'lucide lucide-file-code-2',\n      desc: 'Types, interfaces, and OOP in TS'\n    }, {\n      name: 'Python',\n      slug: 'python',\n      icon: 'lucide lucide-rocket',\n      desc: 'Syntax, logic, and data structures'\n    }, {\n      name: '.NET',\n      slug: 'dotnet',\n      icon: 'lucide lucide-server-cog',\n      desc: 'C#, ASP.NET Core backend practice'\n    }, {\n      name: 'C#',\n      slug: 'csharp',\n      icon: 'lucide lucide-terminal',\n      desc: 'OOP, LINQ, and async logic'\n    }];\n    goToAssignments(tech) {\n      this.router.navigate(['/practice/all-assignments'], {\n        queryParams: {\n          tech\n        }\n      });\n    }\n    static Éµfac = function TechnologyPractice_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TechnologyPractice)(i0.ÉµÉµdirectiveInject(i1.Router));\n    };\n    static Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: TechnologyPractice,\n      selectors: [[\"app-technology-practice\"]],\n      standalone: false,\n      decls: 8,\n      vars: 1,\n      consts: [[1, \"min-h-screen\", \"bg-gray-900\", \"text-white\", \"p-6\"], [1, \"max-w-6xl\", \"mx-auto\"], [1, \"text-3xl\", \"font-bold\", \"mb-6\"], [1, \"mb-10\", \"text-gray-300\"], [1, \"grid\", \"grid-cols-2\", \"md:grid-cols-3\", \"lg:grid-cols-4\", \"gap-6\"], [\"class\", \"bg-gray-800 rounded-2xl p-5 hover:bg-gray-700 transition cursor-pointer\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"rounded-2xl\", \"p-5\", \"hover:bg-gray-700\", \"transition\", \"cursor-pointer\", 3, \"click\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-3\"], [1, \"text-xl\", \"font-semibold\"], [1, \"text-sm\", \"text-gray-400\"]],\n      template: function TechnologyPractice_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ÉµÉµtext(3, \"\\uD83E\\uDDE0 Practice by Technology\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(4, \"p\", 3);\n          i0.ÉµÉµtext(5, \"Choose your favorite tech and explore available practice sets.\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(6, \"div\", 4);\n          i0.ÉµÉµtemplate(7, TechnologyPractice_div_7_Template, 7, 4, \"div\", 5);\n          i0.ÉµÉµelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(7);\n          i0.ÉµÉµproperty(\"ngForOf\", ctx.technologies);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return TechnologyPractice;\n})();","map":{"version":3,"names":["i0","ÉµÉµelementStart","ÉµÉµlistener","TechnologyPractice_div_7_Template_div_click_0_listener","tech_r2","ÉµÉµrestoreView","_r1","$implicit","ctx_r2","ÉµÉµnextContext","ÉµÉµresetView","goToAssignments","slug","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµelement","ÉµÉµadvance","ÉµÉµtextInterpolate","name","ÉµÉµclassMap","icon","desc","TechnologyPractice","router","constructor","technologies","tech","navigate","queryParams","ÉµÉµdirectiveInject","i1","Router","selectors","standalone","decls","vars","consts","template","TechnologyPractice_Template","rf","ctx","ÉµÉµtemplate","TechnologyPractice_div_7_Template","ÉµÉµproperty"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\practice\\page\\technology-practice\\technology-practice.ts","C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\practice\\page\\technology-practice\\technology-practice.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-technology-practice',\r\n  standalone: false,\r\n  templateUrl: './technology-practice.html',\r\n  styleUrl: './technology-practice.scss'\r\n})\r\nexport class TechnologyPractice {\r\n    constructor(private router: Router) {}\r\n\r\n  technologies = [\r\n    {\r\n      name: 'HTML',\r\n      slug: 'html',\r\n      icon: 'lucide lucide-code-2',\r\n      desc: 'Tags, structure, and layout practice',\r\n    },\r\n    {\r\n      name: 'CSS',\r\n      slug: 'css',\r\n      icon: 'lucide lucide-paintbrush',\r\n      desc: 'Styling, flexbox, grid and more',\r\n    },\r\n    {\r\n      name: 'JavaScript',\r\n      slug: 'javascript',\r\n      icon: 'lucide lucide-bug-play',\r\n      desc: 'ES6, DOM, functions, and logic',\r\n    },\r\n    {\r\n      name: 'TypeScript',\r\n      slug: 'typescript',\r\n      icon: 'lucide lucide-file-code-2',\r\n      desc: 'Types, interfaces, and OOP in TS',\r\n    },\r\n    {\r\n      name: 'Python',\r\n      slug: 'python',\r\n      icon: 'lucide lucide-rocket',\r\n      desc: 'Syntax, logic, and data structures',\r\n    },\r\n    {\r\n      name: '.NET',\r\n      slug: 'dotnet',\r\n      icon: 'lucide lucide-server-cog',\r\n      desc: 'C#, ASP.NET Core backend practice',\r\n    },\r\n    {\r\n      name: 'C#',\r\n      slug: 'csharp',\r\n      icon: 'lucide lucide-terminal',\r\n      desc: 'OOP, LINQ, and async logic',\r\n    },\r\n  ];\r\n\r\n  goToAssignments(tech: string) {\r\n    this.router.navigate(['/practice/all-assignments'], {\r\n      queryParams: { tech }\r\n    });\r\n  }\r\n}\r\n","<div class=\"min-h-screen bg-gray-900 text-white p-6\">\r\n  <div class=\"max-w-6xl mx-auto\">\r\n    <h1 class=\"text-3xl font-bold mb-6\">ðŸ§  Practice by Technology</h1>\r\n    <p class=\"mb-10 text-gray-300\">Choose your favorite tech and explore available practice sets.</p>\r\n\r\n    <div class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n      <div\r\n        *ngFor=\"let tech of technologies\"\r\n        class=\"bg-gray-800 rounded-2xl p-5 hover:bg-gray-700 transition cursor-pointer\"\r\n        (click)=\"goToAssignments(tech.slug)\">\r\n        <div class=\"flex items-center justify-between mb-3\">\r\n          <h2 class=\"text-xl font-semibold\">{{ tech.name }}</h2>\r\n          <i [class]=\"tech.icon + ' text-orange-500 text-2xl'\"></i>\r\n        </div>\r\n        <p class=\"text-sm text-gray-400\">{{ tech.desc }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}