{"ast":null,"code":"import { provideBrowserGlobalErrorListeners } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing-module';\nimport { App } from './app';\nimport { HomeModule } from './features/home/home-module';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { RefreshTokenInterceptor } from './core/interceptors/refresh.interceptor';\nimport { StoreModule } from '@ngrx/store';\nimport { authReducer } from './core/services/auth.reducer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@ngrx/store\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static ɵfac = function AppModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [App]\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [provideBrowserGlobalErrorListeners(), provideHttpClient(withInterceptorsFromDi()),\n      // replaces HttpClientModule\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: RefreshTokenInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, AppRoutingModule, HomeModule, BrowserAnimationsModule, ToastrModule.forRoot({\n        positionClass: 'toast-top-right',\n        timeOut: 3500,\n        closeButton: true,\n        progressBar: true,\n        tapToDismiss: true\n      }), StoreModule.forRoot({\n        auth: authReducer\n      })]\n    });\n  }\n  return AppModule;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [App],\n    imports: [BrowserModule, AppRoutingModule, HomeModule, BrowserAnimationsModule, i1.ToastrModule, i2.StoreRootModule]\n  });\n})();","map":{"version":3,"names":["provideBrowserGlobalErrorListeners","BrowserModule","AppRoutingModule","App","HomeModule","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","ToastrModule","BrowserAnimationsModule","AuthInterceptor","RefreshTokenInterceptor","StoreModule","authReducer","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","positionClass","timeOut","closeButton","progressBar","tapToDismiss","auth","declarations","i1","i2","StoreRootModule"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\app-module.ts"],"sourcesContent":["import { NgModule, provideBrowserGlobalErrorListeners } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing-module';\r\nimport { App } from './app';\r\nimport { HomeModule } from './features/home/home-module';\r\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\r\nimport { RefreshTokenInterceptor } from './core/interceptors/refresh.interceptor';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { authReducer } from './core/services/auth.reducer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    App,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HomeModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n        positionClass: 'toast-top-right',\r\n        timeOut: 3500,\r\n        closeButton: true,\r\n        progressBar: true,\r\n        tapToDismiss: true,\r\n      }),\r\n    StoreModule.forRoot({ auth: authReducer }),\r\n\r\n  ],\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideHttpClient(withInterceptorsFromDi()), // replaces HttpClientModule\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    {  provide: HTTP_INTERCEPTORS, useClass: RefreshTokenInterceptor, multi: true },\r\n\r\n  ],\r\n  bootstrap: [App]\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AAAA,SAAmBA,kCAAkC,QAAQ,eAAe;AAC5E,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,sBAAsB,QAAQ,sBAAsB;AACnG,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,8BAA8B;;;;AA8B1D,WAAaC,SAAS;EAAhB,MAAOA,SAAS;;uCAATA,SAAS;IAAA;;YAATA,SAAS;MAAAC,SAAA,GAFRZ,GAAG;IAAA;;iBAPJ,CACTH,kCAAkC,EAAE,EACpCM,iBAAiB,CAACC,sBAAsB,EAAE,CAAC;MAAE;MAC7C;QAAES,OAAO,EAAEX,iBAAiB;QAAEY,QAAQ,EAAEP,eAAe;QAAEQ,KAAK,EAAE;MAAI,CAAE,EACtE;QAAGF,OAAO,EAAEX,iBAAiB;QAAEY,QAAQ,EAAEN,uBAAuB;QAAEO,KAAK,EAAE;MAAI,CAAE,CAEhF;MAAAC,OAAA,GApBClB,aAAa,EACbC,gBAAgB,EAChBE,UAAU,EACVK,uBAAuB,EACvBD,YAAY,CAACY,OAAO,CAAC;QACjBC,aAAa,EAAE,iBAAiB;QAChCC,OAAO,EAAE,IAAI;QACbC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE;OACf,CAAC,EACJb,WAAW,CAACQ,OAAO,CAAC;QAAEM,IAAI,EAAEb;MAAW,CAAE,CAAC;IAAA;;SAYjCC,SAAS;AAAA;;2EAATA,SAAS;IAAAa,YAAA,GA1BlBxB,GAAG;IAAAgB,OAAA,GAGHlB,aAAa,EACbC,gBAAgB,EAChBE,UAAU,EACVK,uBAAuB,EAAAmB,EAAA,CAAApB,YAAA,EAAAqB,EAAA,CAAAC,eAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}