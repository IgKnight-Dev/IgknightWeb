{"ast":null,"code":"import { TabType } from '../../../models/Enums';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../components/editor-pane/editor-pane\";\nimport * as i3 from \"../components/question-tabs/question-tabs\";\nimport * as i4 from \"../components/meta-info/meta-info\";\nexport let CodingQuestionDetail = /*#__PURE__*/(() => {\n  class CodingQuestionDetail {\n    route;\n    challenge;\n    activeTab = TabType.Description;\n    tabTypes = TabType;\n    constructor(route) {\n      this.route = route;\n    }\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n      if (id) {\n        this.challenge = this.getMockChallenge();\n      }\n    }\n    getMockChallenge() {\n      return {\n        id: 'demo-1',\n        title: 'Two Sum',\n        slug: 'two-sum',\n        description: `Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.`,\n        difficulty: 'Easy',\n        category: 'Arrays',\n        acceptance: 87.3,\n        likes: 1243,\n        languageTemplates: {\n          python: 'def twoSum(nums, target):\\n    pass',\n          javascript: 'function twoSum(nums, target) {\\n  // your code\\n}',\n          cpp: 'vector<int> twoSum(vector<int>& nums, int target) {\\n  // your code\\n}',\n          java: 'public int[] twoSum(int[] nums, int target) {\\n  // your code\\n}'\n        },\n        sampleInput: 'nums = [2, 7, 11, 15], target = 9',\n        sampleOutput: '[0, 1]',\n        constraints: '2 <= nums.length <= 10^4\\n-10^9 <= nums[i] <= 10^9',\n        hints: ['Use a hashmap to store complement values']\n      };\n    }\n    selectTab(tab) {\n      this.activeTab = tab;\n    }\n    static ɵfac = function CodingQuestionDetail_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CodingQuestionDetail)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CodingQuestionDetail,\n      selectors: [[\"app-coding-question-detail\"]],\n      standalone: false,\n      decls: 8,\n      vars: 2,\n      consts: [[1, \"px-6\", \"py-6\", \"max-w-7xl\", \"mx-auto\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-2\", \"gap-6\"], [1, \"space-y-6\"], [3, \"challenge\"], [\"tabName\", \"Description\", 3, \"challenge\"], [1, \"space-y-4\"]],\n      template: function CodingQuestionDetail_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"app-meta-info\", 3);\n          i0.ɵɵelementStart(4, \"app-question-tabs\");\n          i0.ɵɵelement(5, \"app-question-tabs\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵelement(7, \"app-editor-pane\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"challenge\", ctx.challenge);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"challenge\", ctx.challenge);\n        }\n      },\n      dependencies: [i2.EditorPane, i3.QuestionTabs, i4.MetaInfo],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return CodingQuestionDetail;\n})();","map":{"version":3,"names":["TabType","CodingQuestionDetail","route","challenge","activeTab","Description","tabTypes","constructor","ngOnInit","id","snapshot","paramMap","get","getMockChallenge","title","slug","description","difficulty","category","acceptance","likes","languageTemplates","python","javascript","cpp","java","sampleInput","sampleOutput","constraints","hints","selectTab","tab","i0","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","standalone","decls","vars","consts","template","CodingQuestionDetail_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\coding\\coding-question-detail\\coding-question-detail.ts","C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\coding\\coding-question-detail\\coding-question-detail.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { TabType } from '../../../models/Enums';\r\nimport { CodingChallenge } from '../../../models/coding-challenge.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-coding-question-detail',\r\n  standalone: false,\r\n  templateUrl: './coding-question-detail.html',\r\n  styleUrl: './coding-question-detail.scss'\r\n})\r\nexport class CodingQuestionDetail {\r\n  challenge!: CodingChallenge;\r\n  activeTab: TabType = TabType.Description;\r\n  tabTypes = TabType;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      this.challenge = this.getMockChallenge();\r\n    }\r\n  }\r\n\r\n  getMockChallenge(): CodingChallenge {\r\n    return {\r\n      id: 'demo-1',\r\n      title: 'Two Sum',\r\n      slug: 'two-sum',\r\n      description: `Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.`,\r\n      difficulty: 'Easy',\r\n      category: 'Arrays',\r\n      acceptance: 87.3,\r\n      likes: 1243,\r\n      languageTemplates: {\r\n        python: 'def twoSum(nums, target):\\n    pass',\r\n        javascript: 'function twoSum(nums, target) {\\n  // your code\\n}',\r\n        cpp: 'vector<int> twoSum(vector<int>& nums, int target) {\\n  // your code\\n}',\r\n        java: 'public int[] twoSum(int[] nums, int target) {\\n  // your code\\n}',\r\n      },\r\n      sampleInput: 'nums = [2, 7, 11, 15], target = 9',\r\n      sampleOutput: '[0, 1]',\r\n      constraints: '2 <= nums.length <= 10^4\\n-10^9 <= nums[i] <= 10^9',\r\n      hints: ['Use a hashmap to store complement values']\r\n    };\r\n  }\r\n\r\n  selectTab(tab: TabType) {\r\n    this.activeTab = tab;\r\n  }\r\n}\r\n","<div class=\"px-6 py-6 max-w-7xl mx-auto text-white\">\r\n  <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n    <!-- Left side: Question -->\r\n    <div class=\"space-y-6\">\r\n      <app-meta-info [challenge]=\"challenge\" />\r\n      <app-question-tabs>\r\n        <app-question-tabs [challenge]=\"challenge\" tabName=\"Description\" />\r\n        <!-- Future: constraints / hints / examples can be other tab contents -->\r\n      </app-question-tabs>\r\n    </div>\r\n\r\n    <!-- Right side: Code Editor -->\r\n    <div class=\"space-y-4\">\r\n      <app-editor-pane />\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,uBAAuB;;;;;;AAU/C,WAAaC,oBAAoB;EAA3B,MAAOA,oBAAoB;IAMrBC,KAAA;IALVC,SAAS;IACTC,SAAS,GAAYJ,OAAO,CAACK,WAAW;IACxCC,QAAQ,GAAGN,OAAO;IAElBO,YACUL,KAAqB;MAArB,KAAAA,KAAK,GAALA,KAAK;IACZ;IAEHM,QAAQA,CAAA;MACN,MAAMC,EAAE,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;MACjD,IAAIH,EAAE,EAAE;QACN,IAAI,CAACN,SAAS,GAAG,IAAI,CAACU,gBAAgB,EAAE;MAC1C;IACF;IAEAA,gBAAgBA,CAAA;MACd,OAAO;QACLJ,EAAE,EAAE,QAAQ;QACZK,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE,2HAA2H;QACxIC,UAAU,EAAE,MAAM;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE,IAAI;QACXC,iBAAiB,EAAE;UACjBC,MAAM,EAAE,qCAAqC;UAC7CC,UAAU,EAAE,oDAAoD;UAChEC,GAAG,EAAE,wEAAwE;UAC7EC,IAAI,EAAE;SACP;QACDC,WAAW,EAAE,mCAAmC;QAChDC,YAAY,EAAE,QAAQ;QACtBC,WAAW,EAAE,oDAAoD;QACjEC,KAAK,EAAE,CAAC,0CAA0C;OACnD;IACH;IAEAC,SAASA,CAACC,GAAY;MACpB,IAAI,CAAC3B,SAAS,GAAG2B,GAAG;IACtB;;uCAzCW9B,oBAAoB,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;;YAApBlC,oBAAoB;MAAAmC,SAAA;MAAAC,UAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR7BX,EAHJ,CAAAa,cAAA,aAAoD,aACC,aAE1B;UACrBb,EAAA,CAAAc,SAAA,uBAAyC;UACzCd,EAAA,CAAAa,cAAA,wBAAmB;UACjBb,EAAA,CAAAc,SAAA,2BAAmE;UAGvEd,EADE,CAAAe,YAAA,EAAoB,EAChB;UAGNf,EAAA,CAAAa,cAAA,aAAuB;UACrBb,EAAA,CAAAc,SAAA,sBAAmB;UAGzBd,EAFI,CAAAe,YAAA,EAAM,EACF,EACF;;;UAZef,EAAA,CAAAgB,SAAA,GAAuB;UAAvBhB,EAAA,CAAAiB,UAAA,cAAAL,GAAA,CAAAzC,SAAA,CAAuB;UAEjB6B,EAAA,CAAAgB,SAAA,GAAuB;UAAvBhB,EAAA,CAAAiB,UAAA,cAAAL,GAAA,CAAAzC,SAAA,CAAuB;;;;;;;SDKrCF,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}