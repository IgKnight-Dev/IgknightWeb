{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n  constructor(other) {\n    this.left = other.left;\n    this.width = other.width;\n    this.startStyle = null;\n    this.endStyle = null;\n  }\n}\nclass LineVisibleRangesWithStyle {\n  constructor(lineNumber, ranges) {\n    this.lineNumber = lineNumber;\n    this.ranges = ranges;\n  }\n}\nfunction toStyledRange(item) {\n  return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n  return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport let SelectionsOverlay = /*#__PURE__*/(() => {\n  class SelectionsOverlay extends DynamicViewOverlay {\n    static #_ = this.SELECTION_CLASS_NAME = 'selected-text';\n    static #_2 = this.SELECTION_TOP_LEFT = 'top-left-radius';\n    static #_3 = this.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n    static #_4 = this.SELECTION_TOP_RIGHT = 'top-right-radius';\n    static #_5 = this.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n    static #_6 = this.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n    static #_7 = this.ROUNDED_PIECE_WIDTH = 10;\n    constructor(context) {\n      super();\n      this._previousFrameVisibleRangesWithStyle = [];\n      this._context = context;\n      const options = this._context.configuration.options;\n      this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n      this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n      this._selections = [];\n      this._renderResult = null;\n      this._context.addEventHandler(this);\n    }\n    dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n      const options = this._context.configuration.options;\n      this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n      this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n      return true;\n    }\n    onCursorStateChanged(e) {\n      this._selections = e.selections.slice(0);\n      return true;\n    }\n    onDecorationsChanged(e) {\n      // true for inline decorations that can end up relayouting text\n      return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n      return true;\n    }\n    onLinesChanged(e) {\n      return true;\n    }\n    onLinesDeleted(e) {\n      return true;\n    }\n    onLinesInserted(e) {\n      return true;\n    }\n    onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n      return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n      for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n        const lineVisibleRanges = linesVisibleRanges[i];\n        if (lineVisibleRanges.ranges.length > 1) {\n          // There are two ranges on the same line\n          return true;\n        }\n      }\n      return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n      const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n      let previousFrameTop = null;\n      let previousFrameBottom = null;\n      if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n        const topLineNumber = linesVisibleRanges[0].lineNumber;\n        if (topLineNumber === viewport.startLineNumber) {\n          for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n            if (previousFrame[i].lineNumber === topLineNumber) {\n              previousFrameTop = previousFrame[i].ranges[0];\n            }\n          }\n        }\n        const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n        if (bottomLineNumber === viewport.endLineNumber) {\n          for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n            if (previousFrame[i].lineNumber === bottomLineNumber) {\n              previousFrameBottom = previousFrame[i].ranges[0];\n            }\n          }\n        }\n        if (previousFrameTop && !previousFrameTop.startStyle) {\n          previousFrameTop = null;\n        }\n        if (previousFrameBottom && !previousFrameBottom.startStyle) {\n          previousFrameBottom = null;\n        }\n      }\n      for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n        // We know for a fact that there is precisely one range on each line\n        const curLineRange = linesVisibleRanges[i].ranges[0];\n        const curLeft = curLineRange.left;\n        const curRight = curLineRange.left + curLineRange.width;\n        const startStyle = {\n          top: 0 /* CornerStyle.EXTERN */,\n          bottom: 0 /* CornerStyle.EXTERN */\n        };\n        const endStyle = {\n          top: 0 /* CornerStyle.EXTERN */,\n          bottom: 0 /* CornerStyle.EXTERN */\n        };\n        if (i > 0) {\n          // Look above\n          const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n          const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n          if (abs(curLeft - prevLeft) < epsilon) {\n            startStyle.top = 2 /* CornerStyle.FLAT */;\n          } else if (curLeft > prevLeft) {\n            startStyle.top = 1 /* CornerStyle.INTERN */;\n          }\n          if (abs(curRight - prevRight) < epsilon) {\n            endStyle.top = 2 /* CornerStyle.FLAT */;\n          } else if (prevLeft < curRight && curRight < prevRight) {\n            endStyle.top = 1 /* CornerStyle.INTERN */;\n          }\n        } else if (previousFrameTop) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.top = previousFrameTop.startStyle.top;\n          endStyle.top = previousFrameTop.endStyle.top;\n        }\n        if (i + 1 < len) {\n          // Look below\n          const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n          const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n          if (abs(curLeft - nextLeft) < epsilon) {\n            startStyle.bottom = 2 /* CornerStyle.FLAT */;\n          } else if (nextLeft < curLeft && curLeft < nextRight) {\n            startStyle.bottom = 1 /* CornerStyle.INTERN */;\n          }\n          if (abs(curRight - nextRight) < epsilon) {\n            endStyle.bottom = 2 /* CornerStyle.FLAT */;\n          } else if (curRight < nextRight) {\n            endStyle.bottom = 1 /* CornerStyle.INTERN */;\n          }\n        } else if (previousFrameBottom) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.bottom = previousFrameBottom.startStyle.bottom;\n          endStyle.bottom = previousFrameBottom.endStyle.bottom;\n        }\n        curLineRange.startStyle = startStyle;\n        curLineRange.endStyle = endStyle;\n      }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n      const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n      const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n      const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n      if (!visibleRangesHaveGaps && this._roundedSelection) {\n        this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n      }\n      // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n      return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, bottom, className, left, width) {\n      return '<div class=\"cslr ' + className + '\" style=\"' + 'top:' + top.toString() + 'px;' + 'bottom:' + bottom.toString() + 'px;' + 'left:' + left.toString() + 'px;' + 'width:' + width.toString() + 'px;' + '\"></div>';\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n      if (visibleRanges.length === 0) {\n        return;\n      }\n      const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n      const firstLineNumber = visibleRanges[0].lineNumber;\n      const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n      for (let i = 0, len = visibleRanges.length; i < len; i++) {\n        const lineVisibleRanges = visibleRanges[i];\n        const lineNumber = lineVisibleRanges.lineNumber;\n        const lineIndex = lineNumber - visibleStartLineNumber;\n        const top = hasMultipleSelections ? lineNumber === firstLineNumber ? 1 : 0 : 0;\n        const bottom = hasMultipleSelections ? lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0 : 0;\n        let innerCornerOutput = '';\n        let restOfSelectionOutput = '';\n        for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n          const visibleRange = lineVisibleRanges.ranges[j];\n          if (visibleRangesHaveStyle) {\n            const startStyle = visibleRange.startStyle;\n            const endStyle = visibleRange.endStyle;\n            if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n              // Reverse rounded corner to the left\n              // First comes the selection (blue layer)\n              innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              // Second comes the background (white layer) with inverse border radius\n              let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n              if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n              }\n              if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n              }\n              innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            }\n            if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n              // Reverse rounded corner to the right\n              // First comes the selection (blue layer)\n              innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              // Second comes the background (white layer) with inverse border radius\n              let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n              if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n              }\n              if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n              }\n              innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            }\n          }\n          let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n          if (visibleRangesHaveStyle) {\n            const startStyle = visibleRange.startStyle;\n            const endStyle = visibleRange.endStyle;\n            if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n            }\n            if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n            }\n            if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n            }\n            if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n            }\n          }\n          restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n        }\n        output2[lineIndex][0] += innerCornerOutput;\n        output2[lineIndex][1] += restOfSelectionOutput;\n      }\n    }\n    prepareRender(ctx) {\n      // Build HTML for inner corners separate from HTML for the rest of selections,\n      // as the inner corner HTML can interfere with that of other selections.\n      // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n      const output = [];\n      const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        const lineIndex = lineNumber - visibleStartLineNumber;\n        output[lineIndex] = ['', ''];\n      }\n      const thisFrameVisibleRangesWithStyle = [];\n      for (let i = 0, len = this._selections.length; i < len; i++) {\n        const selection = this._selections[i];\n        if (selection.isEmpty()) {\n          thisFrameVisibleRangesWithStyle[i] = null;\n          continue;\n        }\n        const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n        thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n        this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n      }\n      this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n      this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      const lineIndex = lineNumber - startLineNumber;\n      if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n        return '';\n      }\n      return this._renderResult[lineIndex];\n    }\n  }\n  return SelectionsOverlay;\n})();\nregisterThemingParticipant((theme, collector) => {\n  const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n  if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n    collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n  }\n});\nfunction abs(n) {\n  return n < 0 ? -n : n;\n}","map":{"version":3,"names":["DynamicViewOverlay","editorSelectionForeground","registerThemingParticipant","HorizontalRangeWithStyle","constructor","other","left","width","startStyle","endStyle","LineVisibleRangesWithStyle","lineNumber","ranges","toStyledRange","item","toStyled","map","SelectionsOverlay","_","SELECTION_CLASS_NAME","_2","SELECTION_TOP_LEFT","_3","SELECTION_BOTTOM_LEFT","_4","SELECTION_TOP_RIGHT","_5","SELECTION_BOTTOM_RIGHT","_6","EDITOR_BACKGROUND_CLASS_NAME","_7","ROUNDED_PIECE_WIDTH","context","_previousFrameVisibleRangesWithStyle","_context","options","configuration","_roundedSelection","get","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_selections","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","selections","slice","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_visibleRangesHaveGaps","linesVisibleRanges","i","len","length","lineVisibleRanges","_enrichVisibleRangesWithStyle","viewport","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","startLineNumber","bottomLineNumber","endLineNumber","curLineRange","curLeft","curRight","top","bottom","prevLeft","prevRight","abs","nextLeft","nextRight","_getVisibleRangesWithStyle","selection","ctx","_linesVisibleRanges","linesVisibleRangesForRange","visibleRangesHaveGaps","visibleRange","_createSelectionPiece","className","toString","_actualRenderOneSelection","output2","visibleStartLineNumber","hasMultipleSelections","visibleRanges","visibleRangesHaveStyle","firstLineNumber","lastLineNumber","lineIndex","innerCornerOutput","restOfSelectionOutput","j","lenJ","prepareRender","output","visibleEndLineNumber","thisFrameVisibleRangesWithStyle","isEmpty","visibleRangesWithStyle","internalCorners","restOfSelection","render","theme","collector","editorSelectionForegroundColor","getColor","isTransparent","addRule","n"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    static { this.SELECTION_CLASS_NAME = 'selected-text'; }\n    static { this.SELECTION_TOP_LEFT = 'top-left-radius'; }\n    static { this.SELECTION_BOTTOM_LEFT = 'bottom-left-radius'; }\n    static { this.SELECTION_TOP_RIGHT = 'top-right-radius'; }\n    static { this.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius'; }\n    static { this.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background'; }\n    static { this.ROUNDED_PIECE_WIDTH = 10; }\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, bottom, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"'\n            + 'top:' + top.toString() + 'px;'\n            + 'bottom:' + bottom.toString() + 'px;'\n            + 'left:' + left.toString() + 'px;'\n            + 'width:' + width.toString() + 'px;'\n            + '\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            const bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}