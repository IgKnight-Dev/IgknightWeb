{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from '../../../environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/apiservice\";\nexport let AssignmentQuestionsApiService = /*#__PURE__*/(() => {\n  class AssignmentQuestionsApiService {\n    http;\n    constructor(http) {\n      this.http = http;\n    }\n    baseUrl = environment.contentApiUrl;\n    addQuestion(assignmentId, data) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.http.post(_this.baseUrl, `assignments/${assignmentId}/questions/add`, data);\n      })();\n    }\n    updateQuestion(assignmentId, questionId, data) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        yield _this2.http.put(_this2.baseUrl, `assignments/${assignmentId}/questions/${questionId}/update`, data);\n      })();\n    }\n    deleteQuestion(assignmentId, questionId) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        yield _this3.http.delete(_this3.baseUrl, `assignments/${assignmentId}/questions/${questionId}/delete`);\n      })();\n    }\n    getAssignmentQuestions(assignmentId) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this4.http.get(_this4.baseUrl, `assignments/${assignmentId}/questions`);\n      })();\n    }\n    static ɵfac = function AssignmentQuestionsApiService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AssignmentQuestionsApiService)(i0.ɵɵinject(i1.ApiService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AssignmentQuestionsApiService,\n      factory: AssignmentQuestionsApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AssignmentQuestionsApiService;\n})();","map":{"version":3,"names":["environment","AssignmentQuestionsApiService","http","constructor","baseUrl","contentApiUrl","addQuestion","assignmentId","data","_this","_asyncToGenerator","post","updateQuestion","questionId","_this2","put","deleteQuestion","_this3","delete","getAssignmentQuestions","_this4","get","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\content\\services\\assignment-questions-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../core/services/apiservice';\r\nimport { AssignmentQuestionDto, CreateAssignmentQuestionDto, UpdateAssignmentQuestionDto } from '../../models/assignment-question.model';\r\nimport { environment } from '../../../environment';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AssignmentQuestionsApiService {\r\n  constructor(private http: ApiService) {}\r\n  private baseUrl = environment.contentApiUrl;\r\n\r\n\r\n  async addQuestion(assignmentId: string, data: CreateAssignmentQuestionDto): Promise<void> {\r\n    await this.http.post(this.baseUrl, `assignments/${assignmentId}/questions/add`, data);\r\n  }\r\n\r\n  async updateQuestion(\r\n    assignmentId: string,\r\n    questionId: string,\r\n    data: UpdateAssignmentQuestionDto\r\n  ): Promise<void> {\r\n    await this.http.put(this.baseUrl, `assignments/${assignmentId}/questions/${questionId}/update`, data);\r\n  }\r\n\r\n  async deleteQuestion(assignmentId: string, questionId: string): Promise<void> {\r\n    await this.http.delete(this.baseUrl, `assignments/${assignmentId}/questions/${questionId}/delete`);\r\n  }\r\n\r\n  async getAssignmentQuestions(assignmentId: string): Promise<AssignmentQuestionDto[]> {\r\n    return await this.http.get(this.baseUrl, `assignments/${assignmentId}/questions`);\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;AAIlD,WAAaC,6BAA6B;EAApC,MAAOA,6BAA6B;IACpBC,IAAA;IAApBC,YAAoBD,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAC/BE,OAAO,GAAGJ,WAAW,CAACK,aAAa;IAGrCC,WAAWA,CAACC,YAAoB,EAAEC,IAAiC;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QACvE,MAAMD,KAAI,CAACP,IAAI,CAACS,IAAI,CAACF,KAAI,CAACL,OAAO,EAAE,eAAeG,YAAY,gBAAgB,EAAEC,IAAI,CAAC;MAAC;IACxF;IAEMI,cAAcA,CAClBL,YAAoB,EACpBM,UAAkB,EAClBL,IAAiC;MAAA,IAAAM,MAAA;MAAA,OAAAJ,iBAAA;QAEjC,MAAMI,MAAI,CAACZ,IAAI,CAACa,GAAG,CAACD,MAAI,CAACV,OAAO,EAAE,eAAeG,YAAY,cAAcM,UAAU,SAAS,EAAEL,IAAI,CAAC;MAAC;IACxG;IAEMQ,cAAcA,CAACT,YAAoB,EAAEM,UAAkB;MAAA,IAAAI,MAAA;MAAA,OAAAP,iBAAA;QAC3D,MAAMO,MAAI,CAACf,IAAI,CAACgB,MAAM,CAACD,MAAI,CAACb,OAAO,EAAE,eAAeG,YAAY,cAAcM,UAAU,SAAS,CAAC;MAAC;IACrG;IAEMM,sBAAsBA,CAACZ,YAAoB;MAAA,IAAAa,MAAA;MAAA,OAAAV,iBAAA;QAC/C,aAAaU,MAAI,CAAClB,IAAI,CAACmB,GAAG,CAACD,MAAI,CAAChB,OAAO,EAAE,eAAeG,YAAY,YAAY,CAAC;MAAC;IACpF;;uCAvBWN,6BAA6B,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAA7BxB,6BAA6B;MAAAyB,OAAA,EAA7BzB,6BAA6B,CAAA0B,IAAA;MAAAC,UAAA,EADhB;IAAM;;SACnB3B,6BAA6B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}