{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CodingQuestionList_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"Easy\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CodingQuestionList_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Medium\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CodingQuestionList_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Hard\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CodingQuestionList_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tag_r1, \" \");\n  }\n}\nexport let CodingQuestionList = /*#__PURE__*/(() => {\n  class CodingQuestionList {\n    challenge; // ✅ Make sure this is declared!\n    static ɵfac = function CodingQuestionList_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CodingQuestionList)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CodingQuestionList,\n      selectors: [[\"app-coding-question-list\"]],\n      inputs: {\n        challenge: \"challenge\"\n      },\n      standalone: false,\n      decls: 27,\n      vars: 11,\n      consts: [[1, \"bg-[#131c2b]\", \"mb-3\", \"p-5\", \"rounded-xl\", \"border\", \"border-[#2d3748]\", \"hover:border-cyan-500\", \"transition-all\"], [1, \"flex\", \"justify-between\", \"items-start\"], [1, \"text-white\", \"font-semibold\", \"text-[16px]\", \"leading-tight\"], [1, \"flex\", \"items-center\", \"gap-2\", \"mt-1\"], [\"class\", \"text-xs text-green-300 rounded-full bg-green-900 px-2 py-0.5 rounded\", 4, \"ngIf\"], [\"class\", \"text-xs text-yellow-300 rounded-full bg-yellow-800 px-2 py-0.5 rounded\", 4, \"ngIf\"], [\"class\", \"text-xs text-red-300 rounded-full bg-red-800 px-2 py-0.5 rounded\", 4, \"ngIf\"], [1, \"text-xs\", \"text-gray-200\", \"bg-gray-700\", \"px-2\", \"py-0.5\", \"rounded-full\"], [1, \"flex\", \"flex-col\", \"items-end\", \"text-xs\", \"text-gray-400\", \"gap-1\"], [1, \"flex\", \"items-center\", \"gap-1\"], [1, \"lucide\", \"lucide-thumbs-up\", \"w-4\", \"h-4\"], [1, \"flex\", \"items-center\", \"gap-2\", \"px-4\", \"py-1.5\", \"rounded-md\", \"font-semibold\", \"text-white\", \"bg-gradient-to-r\", \"from-green-400\", \"to-blue-500\", \"hover:from-green-500\", \"hover:to-blue-600\", \"transition\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-4\", \"h-4\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M16 18l6-6-6-6M8 6l-6 6 6 6\"], [1, \"text-sm\", \"text-gray-400\", \"mt-3\", \"leading-snug\"], [1, \"mt-3\", \"flex\", \"flex-wrap\", \"gap-2\", \"text-xs\"], [\"class\", \"bg-gray-700 text-gray-300 px-2 py-1 rounded-full\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-xs\", \"text-green-300\", \"rounded-full\", \"bg-green-900\", \"px-2\", \"py-0.5\", \"rounded\"], [1, \"text-xs\", \"text-yellow-300\", \"rounded-full\", \"bg-yellow-800\", \"px-2\", \"py-0.5\", \"rounded\"], [1, \"text-xs\", \"text-red-300\", \"rounded-full\", \"bg-red-800\", \"px-2\", \"py-0.5\", \"rounded\"], [1, \"bg-gray-700\", \"text-gray-300\", \"px-2\", \"py-1\", \"rounded-full\"]],\n      template: function CodingQuestionList_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h2\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵtemplate(6, CodingQuestionList_span_6_Template, 2, 0, \"span\", 4)(7, CodingQuestionList_span_7_Template, 2, 0, \"span\", 5)(8, CodingQuestionList_span_8_Template, 2, 0, \"span\", 6);\n          i0.ɵɵelementStart(9, \"span\", 7);\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9);\n          i0.ɵɵelement(13, \"i\", 10);\n          i0.ɵɵelementStart(14, \"span\");\n          i0.ɵɵtext(15);\n          i0.ɵɵpipe(16, \"number\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"span\");\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 11);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(20, \"svg\", 12);\n          i0.ɵɵelement(21, \"path\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(22, \" Solve \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(23, \"p\", 14);\n          i0.ɵɵtext(24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 15);\n          i0.ɵɵtemplate(26, CodingQuestionList_span_26_Template, 2, 1, \"span\", 16);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.challenge.title, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.challenge.difficulty === \"Easy\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.challenge.difficulty === \"Medium\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.challenge.difficulty === \"Hard\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.challenge.category);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 9, ctx.challenge.likes));\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.challenge.acceptance, \"%\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\" \", ctx.challenge.description, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.challenge.tags);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i1.DecimalPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return CodingQuestionList;\n})();","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","tag_r1","CodingQuestionList","challenge","selectors","inputs","standalone","decls","vars","consts","template","CodingQuestionList_Template","rf","ctx","ɵɵtemplate","CodingQuestionList_span_6_Template","CodingQuestionList_span_7_Template","CodingQuestionList_span_8_Template","ɵɵelement","CodingQuestionList_span_26_Template","title","ɵɵproperty","difficulty","ɵɵtextInterpolate","category","ɵɵpipeBind1","likes","acceptance","description","tags"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\coding\\coding-question-list\\coding-question-list.ts","C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\coding\\coding-question-list\\coding-question-list.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-coding-question-list',\r\n  standalone: false,\r\n  templateUrl: './coding-question-list.html',\r\n  styleUrl: './coding-question-list.scss'\r\n})\r\nexport class CodingQuestionList {\r\n    @Input() challenge: any;  // ✅ Make sure this is declared!\r\n}","<div class=\"bg-[#131c2b] mb-3  p-5 rounded-xl border border-[#2d3748] hover:border-cyan-500 transition-all\">\r\n  <!-- Header Row -->\r\n  <div class=\"flex justify-between items-start\">\r\n    <!-- Left: Title + Tags -->\r\n    <div>\r\n      <h2 class=\"text-white font-semibold text-[16px] leading-tight\">\r\n        {{ challenge.title }}\r\n      </h2>\r\n\r\n      <div class=\"flex items-center gap-2 mt-1\">\r\n        <span *ngIf=\"challenge.difficulty === 'Easy'\" class=\"text-xs text-green-300 rounded-full bg-green-900 px-2 py-0.5 rounded\">Easy</span>\r\n        <span *ngIf=\"challenge.difficulty === 'Medium'\" class=\"text-xs text-yellow-300 rounded-full bg-yellow-800 px-2 py-0.5 rounded\">Medium</span>\r\n        <span *ngIf=\"challenge.difficulty === 'Hard'\" class=\"text-xs text-red-300 rounded-full bg-red-800 px-2 py-0.5 rounded\">Hard</span>\r\n        <span class=\"text-xs text-gray-200 bg-gray-700 px-2 py-0.5 rounded-full\">{{ challenge.category }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Right: Stats + Solve -->\r\n    <div class=\"flex flex-col items-end text-xs text-gray-400 gap-1\">\r\n      <div class=\"flex items-center gap-1\">\r\n        <i class=\"lucide lucide-thumbs-up w-4 h-4\"></i>\r\n        <span>{{ challenge.likes | number }}</span>\r\n      </div>\r\n      <span>{{ challenge.acceptance }}%</span>\r\n\r\n      <button class=\"flex items-center gap-2 px-4 py-1.5 rounded-md font-semibold text-white bg-gradient-to-r from-green-400 to-blue-500 hover:from-green-500 hover:to-blue-600 transition\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 18l6-6-6-6M8 6l-6 6 6 6\"/>\r\n        </svg>\r\n        Solve\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Description -->\r\n  <p class=\"text-sm text-gray-400 mt-3 leading-snug\">\r\n    {{ challenge.description }}\r\n  </p>\r\n\r\n  <!-- Tags -->\r\n  <div class=\"mt-3 flex flex-wrap gap-2 text-xs\">\r\n    <span *ngFor=\"let tag of challenge.tags\" class=\"bg-gray-700 text-gray-300 px-2 py-1 rounded-full\">\r\n      {{ tag }}\r\n    </span>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}