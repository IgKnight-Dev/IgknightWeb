{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport let EditorSettingMigration = /*#__PURE__*/(() => {\n  class EditorSettingMigration {\n    static #_ = this.items = [];\n    constructor(key, migrate) {\n      this.key = key;\n      this.migrate = migrate;\n    }\n    apply(options) {\n      const value = EditorSettingMigration._read(options, this.key);\n      const read = key => EditorSettingMigration._read(options, key);\n      const write = (key, value) => EditorSettingMigration._write(options, key, value);\n      this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n      if (typeof source === 'undefined') {\n        return undefined;\n      }\n      const firstDotIndex = key.indexOf('.');\n      if (firstDotIndex >= 0) {\n        const firstSegment = key.substring(0, firstDotIndex);\n        return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n      }\n      return source[key];\n    }\n    static _write(target, key, value) {\n      const firstDotIndex = key.indexOf('.');\n      if (firstDotIndex >= 0) {\n        const firstSegment = key.substring(0, firstDotIndex);\n        target[firstSegment] = target[firstSegment] || {};\n        this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n        return;\n      }\n      target[key] = value;\n    }\n  }\n  return EditorSettingMigration;\n})();\nfunction registerEditorSettingMigration(key, migrate) {\n  EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n  registerEditorSettingMigration(key, (value, read, write) => {\n    if (typeof value !== 'undefined') {\n      for (const [oldValue, newValue] of values) {\n        if (value === oldValue) {\n          write(key, newValue);\n          return;\n        }\n      }\n    }\n  });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n  EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, {\n  enabled: true\n}], [false, {\n  enabled: false\n}]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, {\n  enabled: true\n}], [false, {\n  enabled: false\n}]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('occurrencesHighlight', [[true, 'singleFile'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('wordBasedSuggestions', [[true, 'matchingDocuments'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n  if (value === false) {\n    write('autoClosingBrackets', 'never');\n    if (typeof read('autoClosingQuotes') === 'undefined') {\n      write('autoClosingQuotes', 'never');\n    }\n    if (typeof read('autoSurround') === 'undefined') {\n      write('autoSurround', 'never');\n    }\n  }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n  if (typeof value !== 'undefined') {\n    write('renderIndentGuides', undefined);\n    if (typeof read('guides.indentation') === 'undefined') {\n      write('guides.indentation', !!value);\n    }\n  }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n  if (typeof value !== 'undefined') {\n    write('highlightActiveIndentGuide', undefined);\n    if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n      write('guides.highlightActiveIndentation', !!value);\n    }\n  }\n});\nconst suggestFilteredTypesMapping = {\n  method: 'showMethods',\n  function: 'showFunctions',\n  constructor: 'showConstructors',\n  deprecated: 'showDeprecated',\n  field: 'showFields',\n  variable: 'showVariables',\n  class: 'showClasses',\n  struct: 'showStructs',\n  interface: 'showInterfaces',\n  module: 'showModules',\n  property: 'showProperties',\n  event: 'showEvents',\n  operator: 'showOperators',\n  unit: 'showUnits',\n  value: 'showValues',\n  constant: 'showConstants',\n  enum: 'showEnums',\n  enumMember: 'showEnumMembers',\n  keyword: 'showKeywords',\n  text: 'showWords',\n  color: 'showColors',\n  file: 'showFiles',\n  reference: 'showReferences',\n  folder: 'showFolders',\n  typeParameter: 'showTypeParameters',\n  snippet: 'showSnippets'\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n  if (value && typeof value === 'object') {\n    for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n      const v = value[entry[0]];\n      if (v === false) {\n        if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n          write(`suggest.${entry[1]}`, false);\n        }\n      }\n    }\n    write('suggest.filteredTypes', undefined);\n  }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n  if (typeof input === 'boolean') {\n    const value = input ? 'on' : 'off';\n    const newValue = {\n      comments: value,\n      strings: value,\n      other: value\n    };\n    write('quickSuggestions', newValue);\n  }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n  if (typeof value === 'boolean') {\n    write('experimental.stickyScroll.enabled', undefined);\n    if (typeof read('stickyScroll.enabled') === 'undefined') {\n      write('stickyScroll.enabled', value);\n    }\n  }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n  if (typeof value === 'number') {\n    write('experimental.stickyScroll.maxLineCount', undefined);\n    if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n      write('stickyScroll.maxLineCount', value);\n    }\n  }\n});\n// Code Actions on Save\nregisterEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n  if (value && typeof value === 'object') {\n    let toBeModified = false;\n    const newValue = {};\n    for (const entry of Object.entries(value)) {\n      if (typeof entry[1] === 'boolean') {\n        toBeModified = true;\n        newValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n      } else {\n        newValue[entry[0]] = entry[1];\n      }\n    }\n    if (toBeModified) {\n      write(`codeActionsOnSave`, newValue);\n    }\n  }\n});\n// Migrate Quick Fix Settings\nregisterEditorSettingMigration('codeActionWidget.includeNearbyQuickfixes', (value, read, write) => {\n  if (typeof value === 'boolean') {\n    write('codeActionWidget.includeNearbyQuickfixes', undefined);\n    if (typeof read('codeActionWidget.includeNearbyQuickFixes') === 'undefined') {\n      write('codeActionWidget.includeNearbyQuickFixes', value);\n    }\n  }\n});\n// Migrate the lightbulb settings\nregisterEditorSettingMigration('lightbulb.enabled', (value, read, write) => {\n  if (typeof value === 'boolean') {\n    write('lightbulb.enabled', value ? undefined : 'off');\n  }\n});","map":{"version":3,"names":["EditorSettingMigration","_","items","constructor","key","migrate","apply","options","value","_read","read","write","_write","source","undefined","firstDotIndex","indexOf","firstSegment","substring","target","registerEditorSettingMigration","push","registerSimpleEditorSettingMigration","values","oldValue","newValue","migrateOptions","forEach","migration","enabled","suggestFilteredTypesMapping","method","function","deprecated","field","variable","class","struct","interface","module","property","event","operator","unit","constant","enum","enumMember","keyword","text","color","file","reference","folder","typeParameter","snippet","entry","Object","entries","v","input","comments","strings","other","toBeModified"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorSettingMigration {\n    static { this.items = []; }\n    constructor(key, migrate) {\n        this.key = key;\n        this.migrate = migrate;\n    }\n    apply(options) {\n        const value = EditorSettingMigration._read(options, this.key);\n        const read = (key) => EditorSettingMigration._read(options, key);\n        const write = (key, value) => EditorSettingMigration._write(options, key, value);\n        this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n        }\n        return source[key];\n    }\n    static _write(target, key, value) {\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            target[firstSegment] = target[firstSegment] || {};\n            this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n            return;\n        }\n        target[key] = value;\n    }\n}\nfunction registerEditorSettingMigration(key, migrate) {\n    EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n    registerEditorSettingMigration(key, (value, read, write) => {\n        if (typeof value !== 'undefined') {\n            for (const [oldValue, newValue] of values) {\n                if (value === oldValue) {\n                    write(key, newValue);\n                    return;\n                }\n            }\n        }\n    });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('occurrencesHighlight', [[true, 'singleFile'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('wordBasedSuggestions', [[true, 'matchingDocuments'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n    if (value === false) {\n        write('autoClosingBrackets', 'never');\n        if (typeof read('autoClosingQuotes') === 'undefined') {\n            write('autoClosingQuotes', 'never');\n        }\n        if (typeof read('autoSurround') === 'undefined') {\n            write('autoSurround', 'never');\n        }\n    }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('renderIndentGuides', undefined);\n        if (typeof read('guides.indentation') === 'undefined') {\n            write('guides.indentation', !!value);\n        }\n    }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('highlightActiveIndentGuide', undefined);\n        if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n            write('guides.highlightActiveIndentation', !!value);\n        }\n    }\n});\nconst suggestFilteredTypesMapping = {\n    method: 'showMethods',\n    function: 'showFunctions',\n    constructor: 'showConstructors',\n    deprecated: 'showDeprecated',\n    field: 'showFields',\n    variable: 'showVariables',\n    class: 'showClasses',\n    struct: 'showStructs',\n    interface: 'showInterfaces',\n    module: 'showModules',\n    property: 'showProperties',\n    event: 'showEvents',\n    operator: 'showOperators',\n    unit: 'showUnits',\n    value: 'showValues',\n    constant: 'showConstants',\n    enum: 'showEnums',\n    enumMember: 'showEnumMembers',\n    keyword: 'showKeywords',\n    text: 'showWords',\n    color: 'showColors',\n    file: 'showFiles',\n    reference: 'showReferences',\n    folder: 'showFolders',\n    typeParameter: 'showTypeParameters',\n    snippet: 'showSnippets',\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n            const v = value[entry[0]];\n            if (v === false) {\n                if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n                    write(`suggest.${entry[1]}`, false);\n                }\n            }\n        }\n        write('suggest.filteredTypes', undefined);\n    }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n    if (typeof input === 'boolean') {\n        const value = input ? 'on' : 'off';\n        const newValue = { comments: value, strings: value, other: value };\n        write('quickSuggestions', newValue);\n    }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('experimental.stickyScroll.enabled', undefined);\n        if (typeof read('stickyScroll.enabled') === 'undefined') {\n            write('stickyScroll.enabled', value);\n        }\n    }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n    if (typeof value === 'number') {\n        write('experimental.stickyScroll.maxLineCount', undefined);\n        if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n            write('stickyScroll.maxLineCount', value);\n        }\n    }\n});\n// Code Actions on Save\nregisterEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        let toBeModified = false;\n        const newValue = {};\n        for (const entry of Object.entries(value)) {\n            if (typeof entry[1] === 'boolean') {\n                toBeModified = true;\n                newValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n            }\n            else {\n                newValue[entry[0]] = entry[1];\n            }\n        }\n        if (toBeModified) {\n            write(`codeActionsOnSave`, newValue);\n        }\n    }\n});\n// Migrate Quick Fix Settings\nregisterEditorSettingMigration('codeActionWidget.includeNearbyQuickfixes', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('codeActionWidget.includeNearbyQuickfixes', undefined);\n        if (typeof read('codeActionWidget.includeNearbyQuickFixes') === 'undefined') {\n            write('codeActionWidget.includeNearbyQuickFixes', value);\n        }\n    }\n});\n// Migrate the lightbulb settings\nregisterEditorSettingMigration('lightbulb.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('lightbulb.enabled', value ? undefined : 'off');\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}