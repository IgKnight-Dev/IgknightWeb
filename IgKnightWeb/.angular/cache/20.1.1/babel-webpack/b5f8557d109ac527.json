{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ContentHoverController_1;\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID, SHOW_OR_FOCUS_HOVER_ACTION_ID } from './hoverActionIds.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { isMousePositionWithinElement } from './hoverUtils.js';\nimport { ContentHoverWidgetWrapper } from './contentHoverWidgetWrapper.js';\nimport './hover.css';\nimport { Emitter } from '../../../../base/common/event.js';\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false;\nlet ContentHoverController = /*#__PURE__*/(() => {\n  let ContentHoverController = class ContentHoverController extends Disposable {\n    static #_ = ContentHoverController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.contentHover';\n    constructor(_editor, _instantiationService, _keybindingService) {\n      super();\n      this._editor = _editor;\n      this._instantiationService = _instantiationService;\n      this._keybindingService = _keybindingService;\n      this._onHoverContentsChanged = this._register(new Emitter());\n      this.shouldKeepOpenOnEditorMouseMoveOrLeave = false;\n      this._listenersStore = new DisposableStore();\n      this._hoverState = {\n        mouseDown: false,\n        activatedByDecoratorClick: false\n      };\n      this._reactToEditorMouseMoveRunner = this._register(new RunOnceScheduler(() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0));\n      this._hookListeners();\n      this._register(this._editor.onDidChangeConfiguration(e => {\n        if (e.hasChanged(60 /* EditorOption.hover */)) {\n          this._unhookListeners();\n          this._hookListeners();\n        }\n      }));\n    }\n    static get(editor) {\n      return editor.getContribution(ContentHoverController_1.ID);\n    }\n    _hookListeners() {\n      const hoverOpts = this._editor.getOption(60 /* EditorOption.hover */);\n      this._hoverSettings = {\n        enabled: hoverOpts.enabled,\n        sticky: hoverOpts.sticky,\n        hidingDelay: hoverOpts.hidingDelay\n      };\n      if (hoverOpts.enabled) {\n        this._listenersStore.add(this._editor.onMouseDown(e => this._onEditorMouseDown(e)));\n        this._listenersStore.add(this._editor.onMouseUp(() => this._onEditorMouseUp()));\n        this._listenersStore.add(this._editor.onMouseMove(e => this._onEditorMouseMove(e)));\n        this._listenersStore.add(this._editor.onKeyDown(e => this._onKeyDown(e)));\n      } else {\n        this._listenersStore.add(this._editor.onMouseMove(e => this._onEditorMouseMove(e)));\n        this._listenersStore.add(this._editor.onKeyDown(e => this._onKeyDown(e)));\n      }\n      this._listenersStore.add(this._editor.onMouseLeave(e => this._onEditorMouseLeave(e)));\n      this._listenersStore.add(this._editor.onDidChangeModel(() => {\n        this._cancelScheduler();\n        this._hideWidgets();\n      }));\n      this._listenersStore.add(this._editor.onDidChangeModelContent(() => this._cancelScheduler()));\n      this._listenersStore.add(this._editor.onDidScrollChange(e => this._onEditorScrollChanged(e)));\n    }\n    _unhookListeners() {\n      this._listenersStore.clear();\n    }\n    _cancelScheduler() {\n      this._mouseMoveEvent = undefined;\n      this._reactToEditorMouseMoveRunner.cancel();\n    }\n    _onEditorScrollChanged(e) {\n      if (e.scrollTopChanged || e.scrollLeftChanged) {\n        this._hideWidgets();\n      }\n    }\n    _onEditorMouseDown(mouseEvent) {\n      this._hoverState.mouseDown = true;\n      const shouldNotHideCurrentHoverWidget = this._shouldNotHideCurrentHoverWidget(mouseEvent);\n      if (shouldNotHideCurrentHoverWidget) {\n        return;\n      }\n      this._hideWidgets();\n    }\n    _shouldNotHideCurrentHoverWidget(mouseEvent) {\n      return this._isMouseOnContentHoverWidget(mouseEvent) || this._isContentWidgetResizing();\n    }\n    _isMouseOnContentHoverWidget(mouseEvent) {\n      const contentWidgetNode = this._contentWidget?.getDomNode();\n      if (contentWidgetNode) {\n        return isMousePositionWithinElement(contentWidgetNode, mouseEvent.event.posx, mouseEvent.event.posy);\n      }\n      return false;\n    }\n    _onEditorMouseUp() {\n      this._hoverState.mouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n      if (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n        return;\n      }\n      this._cancelScheduler();\n      const shouldNotHideCurrentHoverWidget = this._shouldNotHideCurrentHoverWidget(mouseEvent);\n      if (shouldNotHideCurrentHoverWidget) {\n        return;\n      }\n      if (_sticky) {\n        return;\n      }\n      this._hideWidgets();\n    }\n    _shouldNotRecomputeCurrentHoverWidget(mouseEvent) {\n      const isHoverSticky = this._hoverSettings.sticky;\n      const isMouseOnStickyContentHoverWidget = (mouseEvent, isHoverSticky) => {\n        const isMouseOnContentHoverWidget = this._isMouseOnContentHoverWidget(mouseEvent);\n        return isHoverSticky && isMouseOnContentHoverWidget;\n      };\n      const isMouseOnColorPicker = mouseEvent => {\n        const isMouseOnContentHoverWidget = this._isMouseOnContentHoverWidget(mouseEvent);\n        const isColorPickerVisible = this._contentWidget?.isColorPickerVisible ?? false;\n        return isMouseOnContentHoverWidget && isColorPickerVisible;\n      };\n      // TODO@aiday-mar verify if the following is necessary code\n      const isTextSelectedWithinContentHoverWidget = (mouseEvent, sticky) => {\n        return (sticky && this._contentWidget?.containsNode(mouseEvent.event.browserEvent.view?.document.activeElement) && !mouseEvent.event.browserEvent.view?.getSelection()?.isCollapsed) ?? false;\n      };\n      return isMouseOnStickyContentHoverWidget(mouseEvent, isHoverSticky) || isMouseOnColorPicker(mouseEvent) || isTextSelectedWithinContentHoverWidget(mouseEvent, isHoverSticky);\n    }\n    _onEditorMouseMove(mouseEvent) {\n      if (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n        return;\n      }\n      this._mouseMoveEvent = mouseEvent;\n      if (this._contentWidget?.isFocused || this._contentWidget?.isResizing) {\n        return;\n      }\n      const sticky = this._hoverSettings.sticky;\n      if (sticky && this._contentWidget?.isVisibleFromKeyboard) {\n        // Sticky mode is on and the hover has been shown via keyboard\n        // so moving the mouse has no effect\n        return;\n      }\n      const shouldNotRecomputeCurrentHoverWidget = this._shouldNotRecomputeCurrentHoverWidget(mouseEvent);\n      if (shouldNotRecomputeCurrentHoverWidget) {\n        this._reactToEditorMouseMoveRunner.cancel();\n        return;\n      }\n      const hidingDelay = this._hoverSettings.hidingDelay;\n      const isContentHoverWidgetVisible = this._contentWidget?.isVisible;\n      // If the mouse is not over the widget, and if sticky is on,\n      // then give it a grace period before reacting to the mouse event\n      const shouldRescheduleHoverComputation = isContentHoverWidgetVisible && sticky && hidingDelay > 0;\n      if (shouldRescheduleHoverComputation) {\n        if (!this._reactToEditorMouseMoveRunner.isScheduled()) {\n          this._reactToEditorMouseMoveRunner.schedule(hidingDelay);\n        }\n        return;\n      }\n      this._reactToEditorMouseMove(mouseEvent);\n    }\n    _reactToEditorMouseMove(mouseEvent) {\n      if (!mouseEvent) {\n        return;\n      }\n      const target = mouseEvent.target;\n      const mouseOnDecorator = target.element?.classList.contains('colorpicker-color-decoration');\n      const decoratorActivatedOn = this._editor.getOption(149 /* EditorOption.colorDecoratorsActivatedOn */);\n      const enabled = this._hoverSettings.enabled;\n      const activatedByDecoratorClick = this._hoverState.activatedByDecoratorClick;\n      if (mouseOnDecorator && (decoratorActivatedOn === 'click' && !activatedByDecoratorClick || decoratorActivatedOn === 'hover' && !enabled && !_sticky || decoratorActivatedOn === 'clickAndHover' && !enabled && !activatedByDecoratorClick) || !mouseOnDecorator && !enabled && !activatedByDecoratorClick) {\n        this._hideWidgets();\n        return;\n      }\n      const contentHoverShowsOrWillShow = this._tryShowHoverWidget(mouseEvent);\n      if (contentHoverShowsOrWillShow) {\n        return;\n      }\n      if (_sticky) {\n        return;\n      }\n      this._hideWidgets();\n    }\n    _tryShowHoverWidget(mouseEvent) {\n      const contentWidget = this._getOrCreateContentWidget();\n      return contentWidget.showsOrWillShow(mouseEvent);\n    }\n    _onKeyDown(e) {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n      // If the beginning of a multi-chord keybinding is pressed,\n      // or the command aims to focus the hover,\n      // set the variable to true, otherwise false\n      const shouldKeepHoverVisible = resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && (resolvedKeyboardEvent.commandId === SHOW_OR_FOCUS_HOVER_ACTION_ID || resolvedKeyboardEvent.commandId === INCREASE_HOVER_VERBOSITY_ACTION_ID || resolvedKeyboardEvent.commandId === DECREASE_HOVER_VERBOSITY_ACTION_ID) && this._contentWidget?.isVisible;\n      if (e.keyCode === 5 /* KeyCode.Ctrl */ || e.keyCode === 6 /* KeyCode.Alt */ || e.keyCode === 57 /* KeyCode.Meta */ || e.keyCode === 4 /* KeyCode.Shift */ || shouldKeepHoverVisible) {\n        // Do not hide hover when a modifier key is pressed\n        return;\n      }\n      this._hideWidgets();\n    }\n    _hideWidgets() {\n      if (_sticky) {\n        return;\n      }\n      if (this._hoverState.mouseDown && this._contentWidget?.isColorPickerVisible || InlineSuggestionHintsContentWidget.dropDownVisible) {\n        return;\n      }\n      this._hoverState.activatedByDecoratorClick = false;\n      this._contentWidget?.hide();\n    }\n    _getOrCreateContentWidget() {\n      if (!this._contentWidget) {\n        this._contentWidget = this._instantiationService.createInstance(ContentHoverWidgetWrapper, this._editor);\n        this._listenersStore.add(this._contentWidget.onContentsChanged(() => this._onHoverContentsChanged.fire()));\n      }\n      return this._contentWidget;\n    }\n    showContentHover(range, mode, source, focus, activatedByColorDecoratorClick = false) {\n      this._hoverState.activatedByDecoratorClick = activatedByColorDecoratorClick;\n      this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    _isContentWidgetResizing() {\n      return this._contentWidget?.widget.isResizing || false;\n    }\n    focusedHoverPartIndex() {\n      return this._getOrCreateContentWidget().focusedHoverPartIndex();\n    }\n    updateHoverVerbosityLevel(action, index, focus) {\n      this._getOrCreateContentWidget().updateHoverVerbosityLevel(action, index, focus);\n    }\n    focus() {\n      this._contentWidget?.focus();\n    }\n    scrollUp() {\n      this._contentWidget?.scrollUp();\n    }\n    scrollDown() {\n      this._contentWidget?.scrollDown();\n    }\n    scrollLeft() {\n      this._contentWidget?.scrollLeft();\n    }\n    scrollRight() {\n      this._contentWidget?.scrollRight();\n    }\n    pageUp() {\n      this._contentWidget?.pageUp();\n    }\n    pageDown() {\n      this._contentWidget?.pageDown();\n    }\n    goToTop() {\n      this._contentWidget?.goToTop();\n    }\n    goToBottom() {\n      this._contentWidget?.goToBottom();\n    }\n    get isColorPickerVisible() {\n      return this._contentWidget?.isColorPickerVisible;\n    }\n    get isHoverVisible() {\n      return this._contentWidget?.isVisible;\n    }\n    dispose() {\n      super.dispose();\n      this._unhookListeners();\n      this._listenersStore.dispose();\n      this._contentWidget?.dispose();\n    }\n  };\n  return ContentHoverController;\n})();\nContentHoverController = ContentHoverController_1 = __decorate([__param(1, IInstantiationService), __param(2, IKeybindingService)], ContentHoverController);\nexport { ContentHoverController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ContentHoverController_1","DECREASE_HOVER_VERBOSITY_ACTION_ID","INCREASE_HOVER_VERBOSITY_ACTION_ID","SHOW_OR_FOCUS_HOVER_ACTION_ID","Disposable","DisposableStore","IInstantiationService","InlineSuggestionHintsContentWidget","IKeybindingService","RunOnceScheduler","isMousePositionWithinElement","ContentHoverWidgetWrapper","Emitter","_sticky","ContentHoverController","_","_2","ID","constructor","_editor","_instantiationService","_keybindingService","_onHoverContentsChanged","_register","shouldKeepOpenOnEditorMouseMoveOrLeave","_listenersStore","_hoverState","mouseDown","activatedByDecoratorClick","_reactToEditorMouseMoveRunner","_reactToEditorMouseMove","_mouseMoveEvent","_hookListeners","onDidChangeConfiguration","e","hasChanged","_unhookListeners","get","editor","getContribution","hoverOpts","getOption","_hoverSettings","enabled","sticky","hidingDelay","add","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_cancelScheduler","_hideWidgets","onDidChangeModelContent","onDidScrollChange","_onEditorScrollChanged","clear","undefined","cancel","scrollTopChanged","scrollLeftChanged","mouseEvent","shouldNotHideCurrentHoverWidget","_shouldNotHideCurrentHoverWidget","_isMouseOnContentHoverWidget","_isContentWidgetResizing","contentWidgetNode","_contentWidget","getDomNode","event","posx","posy","_shouldNotRecomputeCurrentHoverWidget","isHoverSticky","isMouseOnStickyContentHoverWidget","isMouseOnContentHoverWidget","isMouseOnColorPicker","isColorPickerVisible","isTextSelectedWithinContentHoverWidget","containsNode","browserEvent","view","document","activeElement","getSelection","isCollapsed","isFocused","isResizing","isVisibleFromKeyboard","shouldNotRecomputeCurrentHoverWidget","isContentHoverWidgetVisible","isVisible","shouldRescheduleHoverComputation","isScheduled","schedule","mouseOnDecorator","element","classList","contains","decoratorActivatedOn","contentHoverShowsOrWillShow","_tryShowHoverWidget","contentWidget","_getOrCreateContentWidget","showsOrWillShow","hasModel","resolvedKeyboardEvent","softDispatch","shouldKeepHoverVisible","kind","commandId","keyCode","dropDownVisible","hide","createInstance","onContentsChanged","fire","showContentHover","range","mode","source","focus","activatedByColorDecoratorClick","startShowingAtRange","widget","focusedHoverPartIndex","updateHoverVerbosityLevel","action","index","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","isHoverVisible","dispose"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHoverController2.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverController_1;\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID, SHOW_OR_FOCUS_HOVER_ACTION_ID } from './hoverActionIds.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { isMousePositionWithinElement } from './hoverUtils.js';\nimport { ContentHoverWidgetWrapper } from './contentHoverWidgetWrapper.js';\nimport './hover.css';\nimport { Emitter } from '../../../../base/common/event.js';\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    static { ContentHoverController_1 = this; }\n    static { this.ID = 'editor.contrib.contentHover'; }\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._onHoverContentsChanged = this._register(new Emitter());\n        this.shouldKeepOpenOnEditorMouseMoveOrLeave = false;\n        this._listenersStore = new DisposableStore();\n        this._hoverState = {\n            mouseDown: false,\n            activatedByDecoratorClick: false\n        };\n        this._reactToEditorMouseMoveRunner = this._register(new RunOnceScheduler(() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0));\n        this._hookListeners();\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(60 /* EditorOption.hover */)) {\n                this._unhookListeners();\n                this._hookListeners();\n            }\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(ContentHoverController_1.ID);\n    }\n    _hookListeners() {\n        const hoverOpts = this._editor.getOption(60 /* EditorOption.hover */);\n        this._hoverSettings = {\n            enabled: hoverOpts.enabled,\n            sticky: hoverOpts.sticky,\n            hidingDelay: hoverOpts.hidingDelay\n        };\n        if (hoverOpts.enabled) {\n            this._listenersStore.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._listenersStore.add(this._editor.onMouseUp(() => this._onEditorMouseUp()));\n            this._listenersStore.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._listenersStore.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._listenersStore.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._listenersStore.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._listenersStore.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._listenersStore.add(this._editor.onDidChangeModel(() => {\n            this._cancelScheduler();\n            this._hideWidgets();\n        }));\n        this._listenersStore.add(this._editor.onDidChangeModelContent(() => this._cancelScheduler()));\n        this._listenersStore.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookListeners() {\n        this._listenersStore.clear();\n    }\n    _cancelScheduler() {\n        this._mouseMoveEvent = undefined;\n        this._reactToEditorMouseMoveRunner.cancel();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._hoverState.mouseDown = true;\n        const shouldNotHideCurrentHoverWidget = this._shouldNotHideCurrentHoverWidget(mouseEvent);\n        if (shouldNotHideCurrentHoverWidget) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _shouldNotHideCurrentHoverWidget(mouseEvent) {\n        return this._isMouseOnContentHoverWidget(mouseEvent) || this._isContentWidgetResizing();\n    }\n    _isMouseOnContentHoverWidget(mouseEvent) {\n        const contentWidgetNode = this._contentWidget?.getDomNode();\n        if (contentWidgetNode) {\n            return isMousePositionWithinElement(contentWidgetNode, mouseEvent.event.posx, mouseEvent.event.posy);\n        }\n        return false;\n    }\n    _onEditorMouseUp() {\n        this._hoverState.mouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        if (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n            return;\n        }\n        this._cancelScheduler();\n        const shouldNotHideCurrentHoverWidget = this._shouldNotHideCurrentHoverWidget(mouseEvent);\n        if (shouldNotHideCurrentHoverWidget) {\n            return;\n        }\n        if (_sticky) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _shouldNotRecomputeCurrentHoverWidget(mouseEvent) {\n        const isHoverSticky = this._hoverSettings.sticky;\n        const isMouseOnStickyContentHoverWidget = (mouseEvent, isHoverSticky) => {\n            const isMouseOnContentHoverWidget = this._isMouseOnContentHoverWidget(mouseEvent);\n            return isHoverSticky && isMouseOnContentHoverWidget;\n        };\n        const isMouseOnColorPicker = (mouseEvent) => {\n            const isMouseOnContentHoverWidget = this._isMouseOnContentHoverWidget(mouseEvent);\n            const isColorPickerVisible = this._contentWidget?.isColorPickerVisible ?? false;\n            return isMouseOnContentHoverWidget && isColorPickerVisible;\n        };\n        // TODO@aiday-mar verify if the following is necessary code\n        const isTextSelectedWithinContentHoverWidget = (mouseEvent, sticky) => {\n            return (sticky\n                && this._contentWidget?.containsNode(mouseEvent.event.browserEvent.view?.document.activeElement)\n                && !mouseEvent.event.browserEvent.view?.getSelection()?.isCollapsed) ?? false;\n        };\n        return isMouseOnStickyContentHoverWidget(mouseEvent, isHoverSticky)\n            || isMouseOnColorPicker(mouseEvent)\n            || isTextSelectedWithinContentHoverWidget(mouseEvent, isHoverSticky);\n    }\n    _onEditorMouseMove(mouseEvent) {\n        if (this.shouldKeepOpenOnEditorMouseMoveOrLeave) {\n            return;\n        }\n        this._mouseMoveEvent = mouseEvent;\n        if (this._contentWidget?.isFocused || this._contentWidget?.isResizing) {\n            return;\n        }\n        const sticky = this._hoverSettings.sticky;\n        if (sticky && this._contentWidget?.isVisibleFromKeyboard) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        const shouldNotRecomputeCurrentHoverWidget = this._shouldNotRecomputeCurrentHoverWidget(mouseEvent);\n        if (shouldNotRecomputeCurrentHoverWidget) {\n            this._reactToEditorMouseMoveRunner.cancel();\n            return;\n        }\n        const hidingDelay = this._hoverSettings.hidingDelay;\n        const isContentHoverWidgetVisible = this._contentWidget?.isVisible;\n        // If the mouse is not over the widget, and if sticky is on,\n        // then give it a grace period before reacting to the mouse event\n        const shouldRescheduleHoverComputation = isContentHoverWidgetVisible && sticky && hidingDelay > 0;\n        if (shouldRescheduleHoverComputation) {\n            if (!this._reactToEditorMouseMoveRunner.isScheduled()) {\n                this._reactToEditorMouseMoveRunner.schedule(hidingDelay);\n            }\n            return;\n        }\n        this._reactToEditorMouseMove(mouseEvent);\n    }\n    _reactToEditorMouseMove(mouseEvent) {\n        if (!mouseEvent) {\n            return;\n        }\n        const target = mouseEvent.target;\n        const mouseOnDecorator = target.element?.classList.contains('colorpicker-color-decoration');\n        const decoratorActivatedOn = this._editor.getOption(149 /* EditorOption.colorDecoratorsActivatedOn */);\n        const enabled = this._hoverSettings.enabled;\n        const activatedByDecoratorClick = this._hoverState.activatedByDecoratorClick;\n        if ((mouseOnDecorator && ((decoratorActivatedOn === 'click' && !activatedByDecoratorClick) ||\n            (decoratorActivatedOn === 'hover' && !enabled && !_sticky) ||\n            (decoratorActivatedOn === 'clickAndHover' && !enabled && !activatedByDecoratorClick))) || (!mouseOnDecorator && !enabled && !activatedByDecoratorClick)) {\n            this._hideWidgets();\n            return;\n        }\n        const contentHoverShowsOrWillShow = this._tryShowHoverWidget(mouseEvent);\n        if (contentHoverShowsOrWillShow) {\n            return;\n        }\n        if (_sticky) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _tryShowHoverWidget(mouseEvent) {\n        const contentWidget = this._getOrCreateContentWidget();\n        return contentWidget.showsOrWillShow(mouseEvent);\n    }\n    _onKeyDown(e) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed,\n        // or the command aims to focus the hover,\n        // set the variable to true, otherwise false\n        const shouldKeepHoverVisible = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ ||\n            (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */\n                && (resolvedKeyboardEvent.commandId === SHOW_OR_FOCUS_HOVER_ACTION_ID\n                    || resolvedKeyboardEvent.commandId === INCREASE_HOVER_VERBOSITY_ACTION_ID\n                    || resolvedKeyboardEvent.commandId === DECREASE_HOVER_VERBOSITY_ACTION_ID)\n                && this._contentWidget?.isVisible));\n        if (e.keyCode === 5 /* KeyCode.Ctrl */\n            || e.keyCode === 6 /* KeyCode.Alt */\n            || e.keyCode === 57 /* KeyCode.Meta */\n            || e.keyCode === 4 /* KeyCode.Shift */\n            || shouldKeepHoverVisible) {\n            // Do not hide hover when a modifier key is pressed\n            return;\n        }\n        this._hideWidgets();\n    }\n    _hideWidgets() {\n        if (_sticky) {\n            return;\n        }\n        if ((this._hoverState.mouseDown\n            && this._contentWidget?.isColorPickerVisible) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverState.activatedByDecoratorClick = false;\n        this._contentWidget?.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverWidgetWrapper, this._editor);\n            this._listenersStore.add(this._contentWidget.onContentsChanged(() => this._onHoverContentsChanged.fire()));\n        }\n        return this._contentWidget;\n    }\n    showContentHover(range, mode, source, focus, activatedByColorDecoratorClick = false) {\n        this._hoverState.activatedByDecoratorClick = activatedByColorDecoratorClick;\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    _isContentWidgetResizing() {\n        return this._contentWidget?.widget.isResizing || false;\n    }\n    focusedHoverPartIndex() {\n        return this._getOrCreateContentWidget().focusedHoverPartIndex();\n    }\n    updateHoverVerbosityLevel(action, index, focus) {\n        this._getOrCreateContentWidget().updateHoverVerbosityLevel(action, index, focus);\n    }\n    focus() {\n        this._contentWidget?.focus();\n    }\n    scrollUp() {\n        this._contentWidget?.scrollUp();\n    }\n    scrollDown() {\n        this._contentWidget?.scrollDown();\n    }\n    scrollLeft() {\n        this._contentWidget?.scrollLeft();\n    }\n    scrollRight() {\n        this._contentWidget?.scrollRight();\n    }\n    pageUp() {\n        this._contentWidget?.pageUp();\n    }\n    pageDown() {\n        this._contentWidget?.pageDown();\n    }\n    goToTop() {\n        this._contentWidget?.goToTop();\n    }\n    goToBottom() {\n        this._contentWidget?.goToBottom();\n    }\n    get isColorPickerVisible() {\n        return this._contentWidget?.isColorPickerVisible;\n    }\n    get isHoverVisible() {\n        return this._contentWidget?.isVisible;\n    }\n    dispose() {\n        super.dispose();\n        this._unhookListeners();\n        this._listenersStore.dispose();\n        this._contentWidget?.dispose();\n    }\n};\nContentHoverController = ContentHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}