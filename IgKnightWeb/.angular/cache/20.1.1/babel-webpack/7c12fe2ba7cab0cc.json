{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './iPadShowKeyboard.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { isIOS } from '../../../../base/common/platform.js';\nexport let IPadShowKeyboard = /*#__PURE__*/(() => {\n  class IPadShowKeyboard extends Disposable {\n    static #_ = this.ID = 'editor.contrib.iPadShowKeyboard';\n    constructor(editor) {\n      super();\n      this.editor = editor;\n      this.widget = null;\n      if (isIOS) {\n        this._register(editor.onDidChangeConfiguration(() => this.update()));\n        this.update();\n      }\n    }\n    update() {\n      const shouldHaveWidget = !this.editor.getOption(92 /* EditorOption.readOnly */);\n      if (!this.widget && shouldHaveWidget) {\n        this.widget = new ShowKeyboardWidget(this.editor);\n      } else if (this.widget && !shouldHaveWidget) {\n        this.widget.dispose();\n        this.widget = null;\n      }\n    }\n    dispose() {\n      super.dispose();\n      if (this.widget) {\n        this.widget.dispose();\n        this.widget = null;\n      }\n    }\n  }\n  return IPadShowKeyboard;\n})();\nlet ShowKeyboardWidget = /*#__PURE__*/(() => {\n  class ShowKeyboardWidget extends Disposable {\n    static #_ = this.ID = 'editor.contrib.ShowKeyboardWidget';\n    constructor(editor) {\n      super();\n      this.editor = editor;\n      this._domNode = document.createElement('textarea');\n      this._domNode.className = 'iPadShowKeyboard';\n      this._register(dom.addDisposableListener(this._domNode, 'touchstart', e => {\n        this.editor.focus();\n      }));\n      this._register(dom.addDisposableListener(this._domNode, 'focus', e => {\n        this.editor.focus();\n      }));\n      this.editor.addOverlayWidget(this);\n    }\n    dispose() {\n      this.editor.removeOverlayWidget(this);\n      super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n      return ShowKeyboardWidget.ID;\n    }\n    getDomNode() {\n      return this._domNode;\n    }\n    getPosition() {\n      return {\n        preference: 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */\n      };\n    }\n  }\n  return ShowKeyboardWidget;\n})();\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard, 3 /* EditorContributionInstantiation.Eventually */);","map":{"version":3,"names":["dom","Disposable","registerEditorContribution","isIOS","IPadShowKeyboard","_","ID","constructor","editor","widget","_register","onDidChangeConfiguration","update","shouldHaveWidget","getOption","ShowKeyboardWidget","dispose","_domNode","document","createElement","className","addDisposableListener","e","focus","addOverlayWidget","removeOverlayWidget","getId","getDomNode","getPosition","preference"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './iPadShowKeyboard.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { isIOS } from '../../../../base/common/platform.js';\nexport class IPadShowKeyboard extends Disposable {\n    static { this.ID = 'editor.contrib.iPadShowKeyboard'; }\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this.widget = null;\n        if (isIOS) {\n            this._register(editor.onDidChangeConfiguration(() => this.update()));\n            this.update();\n        }\n    }\n    update() {\n        const shouldHaveWidget = (!this.editor.getOption(92 /* EditorOption.readOnly */));\n        if (!this.widget && shouldHaveWidget) {\n            this.widget = new ShowKeyboardWidget(this.editor);\n        }\n        else if (this.widget && !shouldHaveWidget) {\n            this.widget.dispose();\n            this.widget = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        if (this.widget) {\n            this.widget.dispose();\n            this.widget = null;\n        }\n    }\n}\nclass ShowKeyboardWidget extends Disposable {\n    static { this.ID = 'editor.contrib.ShowKeyboardWidget'; }\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._domNode = document.createElement('textarea');\n        this._domNode.className = 'iPadShowKeyboard';\n        this._register(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\n            this.editor.focus();\n        }));\n        this._register(dom.addDisposableListener(this._domNode, 'focus', (e) => {\n            this.editor.focus();\n        }));\n        this.editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this.editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return ShowKeyboardWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */\n        };\n    }\n}\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard, 3 /* EditorContributionInstantiation.Eventually */);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}