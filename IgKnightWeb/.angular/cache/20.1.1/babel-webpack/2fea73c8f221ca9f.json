{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { CodingRoutingModule } from './coding-routing-module';\nimport { FormsModule } from '@angular/forms';\nimport { CodingQuestionList } from './coding-question-list/coding-question-list';\nimport { CodingQuestionDetail } from './coding-question-detail/coding-question-detail';\nimport { CodingChallengesPage } from './coding-challenges.page/coding-challenges.page';\nimport { CodingChallengesHeader } from './coding-challenges-header/coding-challenges-header';\nimport { EditorPane } from './components/editor-pane/editor-pane';\nimport { QuestionTabs } from './components/question-tabs/question-tabs';\nimport { MetaInfo } from './components/meta-info/meta-info';\nimport { ActionButtons } from './components/action-buttons/action-buttons';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-monaco-editor\";\nexport let CodingModule = /*#__PURE__*/(() => {\n  class CodingModule {\n    static ɵfac = function CodingModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CodingModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: CodingModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule, CodingRoutingModule, FormsModule, MonacoEditorModule.forRoot()]\n    });\n  }\n  return CodingModule;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CodingModule, {\n    declarations: [\n    // Add your components here\n    CodingQuestionList, CodingQuestionDetail, CodingChallengesPage, CodingChallengesHeader, EditorPane, QuestionTabs, MetaInfo, ActionButtons],\n    imports: [CommonModule, CodingRoutingModule, FormsModule, i1.MonacoEditorModule]\n  });\n})();","map":{"version":3,"names":["CommonModule","CodingRoutingModule","FormsModule","CodingQuestionList","CodingQuestionDetail","CodingChallengesPage","CodingChallengesHeader","EditorPane","QuestionTabs","MetaInfo","ActionButtons","MonacoEditorModule","CodingModule","forRoot","declarations","imports","i1"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\features\\coding\\coding-module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CodingRoutingModule } from './coding-routing-module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CodingQuestionList } from './coding-question-list/coding-question-list';\r\nimport { CodingQuestionDetail } from './coding-question-detail/coding-question-detail';\r\nimport { CodingChallengesPage } from './coding-challenges.page/coding-challenges.page';\r\nimport { CodingChallengesHeader } from './coding-challenges-header/coding-challenges-header';\r\nimport { EditorPane } from './components/editor-pane/editor-pane';\r\nimport { QuestionTabs } from './components/question-tabs/question-tabs';\r\nimport { MetaInfo } from './components/meta-info/meta-info';\r\nimport { ActionButtons } from './components/action-buttons/action-buttons';\r\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Add your components here\r\n    CodingQuestionList,\r\n    CodingQuestionDetail,\r\n    CodingChallengesPage,\r\n    CodingChallengesHeader,\r\n    EditorPane,\r\n    QuestionTabs,\r\n    MetaInfo,\r\n    ActionButtons\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CodingRoutingModule,\r\n    FormsModule,\r\n    MonacoEditorModule.forRoot()\r\n  ]\r\n})\r\nexport class CodingModule { }\r\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,kBAAkB,QAAQ,6CAA6C;AAChF,SAASC,oBAAoB,QAAQ,iDAAiD;AACtF,SAASC,oBAAoB,QAAQ,iDAAiD;AACtF,SAASC,sBAAsB,QAAQ,qDAAqD;AAC5F,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,YAAY,QAAQ,0CAA0C;AACvE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,kBAAkB,QAAQ,mBAAmB;;;AAsBtD,WAAaC,YAAY;EAAnB,MAAOA,YAAY;;uCAAZA,YAAY;IAAA;;YAAZA;IAAY;;gBANrBZ,YAAY,EACZC,mBAAmB,EACnBC,WAAW,EACXS,kBAAkB,CAACE,OAAO,EAAE;IAAA;;SAGnBD,YAAY;AAAA;;2EAAZA,YAAY;IAAAE,YAAA;IAjBrB;IACAX,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,EACpBC,sBAAsB,EACtBC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,aAAa;IAAAK,OAAA,GAGbf,YAAY,EACZC,mBAAmB,EACnBC,WAAW,EAAAc,EAAA,CAAAL,kBAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}