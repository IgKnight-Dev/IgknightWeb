{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SmartSelectController_1;\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nclass SelectionRanges {\n  constructor(index, ranges) {\n    this.index = index;\n    this.ranges = ranges;\n  }\n  mov(fwd) {\n    const index = this.index + (fwd ? 1 : -1);\n    if (index < 0 || index >= this.ranges.length) {\n      return this;\n    }\n    const res = new SelectionRanges(index, this.ranges);\n    if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n      // next range equals this range, retry with next-next\n      return res.mov(fwd);\n    }\n    return res;\n  }\n}\nlet SmartSelectController = /*#__PURE__*/(() => {\n  let SmartSelectController = class SmartSelectController {\n    static #_ = SmartSelectController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.smartSelectController';\n    static get(editor) {\n      return editor.getContribution(SmartSelectController_1.ID);\n    }\n    constructor(_editor, _languageFeaturesService) {\n      this._editor = _editor;\n      this._languageFeaturesService = _languageFeaturesService;\n      this._ignoreSelection = false;\n    }\n    dispose() {\n      this._selectionListener?.dispose();\n    }\n    run(forward) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!_this._editor.hasModel()) {\n          return;\n        }\n        const selections = _this._editor.getSelections();\n        const model = _this._editor.getModel();\n        if (!_this._state) {\n          yield provideSelectionRanges(_this._languageFeaturesService.selectionRangeProvider, model, selections.map(s => s.getPosition()), _this._editor.getOption(114 /* EditorOption.smartSelect */), CancellationToken.None).then(ranges => {\n            if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n              // invalid result\n              return;\n            }\n            if (!_this._editor.hasModel() || !arrays.equals(_this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n              // invalid editor state\n              return;\n            }\n            for (let i = 0; i < ranges.length; i++) {\n              ranges[i] = ranges[i].filter(range => {\n                // filter ranges inside the selection\n                return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n              });\n              // prepend current selection\n              ranges[i].unshift(selections[i]);\n            }\n            _this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n            // listen to caret move and forget about state\n            _this._selectionListener?.dispose();\n            _this._selectionListener = _this._editor.onDidChangeCursorPosition(() => {\n              if (!_this._ignoreSelection) {\n                _this._selectionListener?.dispose();\n                _this._state = undefined;\n              }\n            });\n          });\n        }\n        if (!_this._state) {\n          // no state\n          return;\n        }\n        _this._state = _this._state.map(state => state.mov(forward));\n        const newSelections = _this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n        _this._ignoreSelection = true;\n        try {\n          _this._editor.setSelections(newSelections);\n        } finally {\n          _this._ignoreSelection = false;\n        }\n      })();\n    }\n  };\n  return SmartSelectController;\n})();\nSmartSelectController = SmartSelectController_1 = __decorate([__param(1, ILanguageFeaturesService)], SmartSelectController);\nexport { SmartSelectController };\nclass AbstractSmartSelect extends EditorAction {\n  constructor(forward, opts) {\n    super(opts);\n    this._forward = forward;\n  }\n  run(_accessor, editor) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const controller = SmartSelectController.get(editor);\n      if (controller) {\n        yield controller.run(_this2._forward);\n      }\n    })();\n  }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(true, {\n      id: 'editor.action.smartSelect.expand',\n      label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n      alias: 'Expand Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */,\n          secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectGrow',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Expand Selection\"),\n        order: 2\n      }\n    });\n  }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(false, {\n      id: 'editor.action.smartSelect.shrink',\n      label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n      alias: 'Shrink Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */,\n          secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectShrink',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Shrink Selection\"),\n        order: 3\n      }\n    });\n  }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\nexport function provideSelectionRanges(_x, _x2, _x3, _x4, _x5) {\n  return _provideSelectionRanges.apply(this, arguments);\n}\nfunction _provideSelectionRanges() {\n  _provideSelectionRanges = _asyncToGenerator(function* (registry, model, positions, options, token) {\n    const providers = registry.all(model).concat(new WordSelectionRangeProvider(options.selectSubwords)); // ALWAYS have word based selection range\n    if (providers.length === 1) {\n      // add word selection and bracket selection when no provider exists\n      providers.unshift(new BracketSelectionRangeProvider());\n    }\n    const work = [];\n    const allRawRanges = [];\n    for (const provider of providers) {\n      work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n        if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n          for (let i = 0; i < positions.length; i++) {\n            if (!allRawRanges[i]) {\n              allRawRanges[i] = [];\n            }\n            for (const oneProviderRanges of allProviderRanges[i]) {\n              if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n              }\n            }\n          }\n        }\n      }, onUnexpectedExternalError));\n    }\n    yield Promise.all(work);\n    return allRawRanges.map(oneRawRanges => {\n      if (oneRawRanges.length === 0) {\n        return [];\n      }\n      // sort all by start/end position\n      oneRawRanges.sort((a, b) => {\n        if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n          return 1;\n        } else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n          return -1;\n        } else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n          return -1;\n        } else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      // remove ranges that don't contain the former range or that are equal to the\n      // former range\n      const oneRanges = [];\n      let last;\n      for (const range of oneRawRanges) {\n        if (!last || Range.containsRange(range, last) && !Range.equalsRange(range, last)) {\n          oneRanges.push(range);\n          last = range;\n        }\n      }\n      if (!options.selectLeadingAndTrailingWhitespace) {\n        return oneRanges;\n      }\n      // add ranges that expand trivia at line starts and ends whenever a range\n      // wraps onto the a new line\n      const oneRangesWithTrivia = [oneRanges[0]];\n      for (let i = 1; i < oneRanges.length; i++) {\n        const prev = oneRanges[i - 1];\n        const cur = oneRanges[i];\n        if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n          // add line/block range without leading/failing whitespace\n          const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n          if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n            oneRangesWithTrivia.push(rangeNoWhitespace);\n          }\n          // add line/block range\n          const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n          if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n            oneRangesWithTrivia.push(rangeFull);\n          }\n        }\n        oneRangesWithTrivia.push(cur);\n      }\n      return oneRangesWithTrivia;\n    });\n  });\n  return _provideSelectionRanges.apply(this, arguments);\n}\nCommandsRegistry.registerCommand('_executeSelectionRangeProvider', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (accessor, ...args) {\n    const [resource, positions] = args;\n    assertType(URI.isUri(resource));\n    const registry = accessor.get(ILanguageFeaturesService).selectionRangeProvider;\n    const reference = yield accessor.get(ITextModelService).createModelReference(resource);\n    try {\n      return provideSelectionRanges(registry, reference.object.textEditorModel, positions, {\n        selectLeadingAndTrailingWhitespace: true,\n        selectSubwords: true\n      }, CancellationToken.None);\n    } finally {\n      reference.dispose();\n    }\n  });\n  return function (_x6) {\n    return _ref.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SmartSelectController_1","arrays","CancellationToken","onUnexpectedExternalError","EditorAction","registerEditorAction","registerEditorContribution","Position","Range","Selection","EditorContextKeys","BracketSelectionRangeProvider","WordSelectionRangeProvider","nls","MenuId","CommandsRegistry","ILanguageFeaturesService","ITextModelService","assertType","URI","SelectionRanges","constructor","index","ranges","mov","fwd","res","equalsRange","SmartSelectController","_","_2","ID","get","editor","getContribution","_editor","_languageFeaturesService","_ignoreSelection","dispose","_selectionListener","run","forward","_this","_asyncToGenerator","hasModel","selections","getSelections","model","getModel","_state","provideSelectionRanges","selectionRangeProvider","map","s","getPosition","getOption","None","then","isNonEmptyArray","equals","a","b","equalsSelection","filter","range","containsPosition","getStartPosition","getEndPosition","unshift","onDidChangeCursorPosition","undefined","state","newSelections","fromPositions","setSelections","AbstractSmartSelect","opts","_forward","_accessor","_this2","controller","GrowSelectionAction","id","label","localize","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","mac","secondary","weight","menuOpts","menuId","MenubarSelectionMenu","group","title","comment","order","registerCommandAlias","ShrinkSelectionAction","_x","_x2","_x3","_x4","_x5","_provideSelectionRanges","apply","registry","positions","options","token","providers","all","concat","selectSubwords","work","allRawRanges","provider","push","Promise","resolve","allProviderRanges","oneProviderRanges","isIRange","lift","oneRawRanges","sort","isBefore","oneRanges","last","containsRange","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","prev","cur","startLineNumber","endLineNumber","rangeNoWhitespace","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","rangeFull","getLineMaxColumn","registerCommand","_ref","accessor","args","resource","isUri","reference","createModelReference","object","textEditorModel","_x6"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/smartSelect.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SmartSelectController_1;\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nclass SelectionRanges {\n    constructor(index, ranges) {\n        this.index = index;\n        this.ranges = ranges;\n    }\n    mov(fwd) {\n        const index = this.index + (fwd ? 1 : -1);\n        if (index < 0 || index >= this.ranges.length) {\n            return this;\n        }\n        const res = new SelectionRanges(index, this.ranges);\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n            // next range equals this range, retry with next-next\n            return res.mov(fwd);\n        }\n        return res;\n    }\n}\nlet SmartSelectController = class SmartSelectController {\n    static { SmartSelectController_1 = this; }\n    static { this.ID = 'editor.contrib.smartSelectController'; }\n    static get(editor) {\n        return editor.getContribution(SmartSelectController_1.ID);\n    }\n    constructor(_editor, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._ignoreSelection = false;\n    }\n    dispose() {\n        this._selectionListener?.dispose();\n    }\n    async run(forward) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const selections = this._editor.getSelections();\n        const model = this._editor.getModel();\n        if (!this._state) {\n            await provideSelectionRanges(this._languageFeaturesService.selectionRangeProvider, model, selections.map(s => s.getPosition()), this._editor.getOption(114 /* EditorOption.smartSelect */), CancellationToken.None).then(ranges => {\n                if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n                    // invalid result\n                    return;\n                }\n                if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n                    // invalid editor state\n                    return;\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    ranges[i] = ranges[i].filter(range => {\n                        // filter ranges inside the selection\n                        return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n                    });\n                    // prepend current selection\n                    ranges[i].unshift(selections[i]);\n                }\n                this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n                // listen to caret move and forget about state\n                this._selectionListener?.dispose();\n                this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n                    if (!this._ignoreSelection) {\n                        this._selectionListener?.dispose();\n                        this._state = undefined;\n                    }\n                });\n            });\n        }\n        if (!this._state) {\n            // no state\n            return;\n        }\n        this._state = this._state.map(state => state.mov(forward));\n        const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n        this._ignoreSelection = true;\n        try {\n            this._editor.setSelections(newSelections);\n        }\n        finally {\n            this._ignoreSelection = false;\n        }\n    }\n};\nSmartSelectController = SmartSelectController_1 = __decorate([\n    __param(1, ILanguageFeaturesService)\n], SmartSelectController);\nexport { SmartSelectController };\nclass AbstractSmartSelect extends EditorAction {\n    constructor(forward, opts) {\n        super(opts);\n        this._forward = forward;\n    }\n    async run(_accessor, editor) {\n        const controller = SmartSelectController.get(editor);\n        if (controller) {\n            await controller.run(this._forward);\n        }\n    }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(true, {\n            id: 'editor.action.smartSelect.expand',\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n            alias: 'Expand Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n                order: 2\n            }\n        });\n    }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(false, {\n            id: 'editor.action.smartSelect.shrink',\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n            alias: 'Shrink Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n                order: 3\n            }\n        });\n    }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\nexport async function provideSelectionRanges(registry, model, positions, options, token) {\n    const providers = registry.all(model)\n        .concat(new WordSelectionRangeProvider(options.selectSubwords)); // ALWAYS have word based selection range\n    if (providers.length === 1) {\n        // add word selection and bracket selection when no provider exists\n        providers.unshift(new BracketSelectionRangeProvider());\n    }\n    const work = [];\n    const allRawRanges = [];\n    for (const provider of providers) {\n        work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n            if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n                for (let i = 0; i < positions.length; i++) {\n                    if (!allRawRanges[i]) {\n                        allRawRanges[i] = [];\n                    }\n                    for (const oneProviderRanges of allProviderRanges[i]) {\n                        if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                            allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n                        }\n                    }\n                }\n            }\n        }, onUnexpectedExternalError));\n    }\n    await Promise.all(work);\n    return allRawRanges.map(oneRawRanges => {\n        if (oneRawRanges.length === 0) {\n            return [];\n        }\n        // sort all by start/end position\n        oneRawRanges.sort((a, b) => {\n            if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n                return 1;\n            }\n            else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n                return -1;\n            }\n            else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n                return -1;\n            }\n            else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        // remove ranges that don't contain the former range or that are equal to the\n        // former range\n        const oneRanges = [];\n        let last;\n        for (const range of oneRawRanges) {\n            if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n                oneRanges.push(range);\n                last = range;\n            }\n        }\n        if (!options.selectLeadingAndTrailingWhitespace) {\n            return oneRanges;\n        }\n        // add ranges that expand trivia at line starts and ends whenever a range\n        // wraps onto the a new line\n        const oneRangesWithTrivia = [oneRanges[0]];\n        for (let i = 1; i < oneRanges.length; i++) {\n            const prev = oneRanges[i - 1];\n            const cur = oneRanges[i];\n            if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n                // add line/block range without leading/failing whitespace\n                const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n                if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n                    oneRangesWithTrivia.push(rangeNoWhitespace);\n                }\n                // add line/block range\n                const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n                if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n                    oneRangesWithTrivia.push(rangeFull);\n                }\n            }\n            oneRangesWithTrivia.push(cur);\n        }\n        return oneRangesWithTrivia;\n    });\n}\nCommandsRegistry.registerCommand('_executeSelectionRangeProvider', async function (accessor, ...args) {\n    const [resource, positions] = args;\n    assertType(URI.isUri(resource));\n    const registry = accessor.get(ILanguageFeaturesService).selectionRangeProvider;\n    const reference = await accessor.get(ITextModelService).createModelReference(resource);\n    try {\n        return provideSelectionRanges(registry, reference.object.textEditorModel, positions, { selectLeadingAndTrailingWhitespace: true, selectSubwords: true }, CancellationToken.None);\n    }\n    finally {\n        reference.dispose();\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}