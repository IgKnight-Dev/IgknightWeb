{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domObservable.js';\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { derivedObservableWithCache, mapObservableArrayCached } from '../../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { observableCodeEditor, reactToChange, reactToChangeWithStore } from '../../../../browser/observableCodeEditor.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextView } from '../view/ghostTextView.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from '../model/suggestWidgetAdaptor.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = /*#__PURE__*/(() => {\n  let InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static #_ = InlineCompletionsController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.inlineCompletionsController';\n    static get(editor) {\n      return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n      var _this;\n      super();\n      _this = this;\n      this.editor = editor;\n      this._instantiationService = _instantiationService;\n      this._contextKeyService = _contextKeyService;\n      this._configurationService = _configurationService;\n      this._commandService = _commandService;\n      this._debounceService = _debounceService;\n      this._languageFeaturesService = _languageFeaturesService;\n      this._accessibilitySignalService = _accessibilitySignalService;\n      this._keybindingService = _keybindingService;\n      this._accessibilityService = _accessibilityService;\n      this._editorObs = observableCodeEditor(this.editor);\n      this._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n      this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n        this._editorObs.forceUpdate();\n        return this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined);\n      }, item => this._editorObs.forceUpdate(_tx => {\n        /** @description InlineCompletionsController.handleSuggestAccepted */\n        this.model.get()?.handleSuggestAccepted(item);\n      })));\n      this._suggestWidgetSelectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n        this._editorObs.forceUpdate(_tx => cb(undefined));\n      }), () => this._suggestWidgetAdaptor.selectedItem);\n      this._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n      this._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n      this._editorDictationInProgress = observableFromEvent(this, this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n      this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n      this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', {\n        min: 50,\n        max: 50\n      });\n      this.model = derivedDisposable(this, reader => {\n        if (this._editorObs.isReadonly.read(reader)) {\n          return undefined;\n        }\n        const textModel = this._editorObs.model.read(reader);\n        if (!textModel) {\n          return undefined;\n        }\n        const model = this._instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetSelectedItem, this._editorObs.versionId, this._positions, this._debounceValue, observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).preview), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).previewMode), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n        return model;\n      }).recomputeInitiallyAndOnChange(this._store);\n      this._ghostTexts = derived(this, reader => {\n        const model = this.model.read(reader);\n        return model?.ghostTexts.read(reader) ?? [];\n      });\n      this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n      this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => store.add(this._instantiationService.createInstance(GhostTextView, this.editor, {\n        ghostText: ghostText,\n        minReservedLineCount: constObservable(0),\n        targetTextModel: this.model.map(v => v?.textModel)\n      }))).recomputeInitiallyAndOnChange(this._store);\n      this._playAccessibilitySignal = observableSignal(this);\n      this._fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n      this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n      this._register(reactToChange(this._editorObs.onDidType, (_value, _changes) => {\n        if (this._enabled.get()) {\n          this.model.get()?.trigger();\n        }\n      }));\n      this._register(this._commandService.onDidExecuteCommand(e => {\n        // These commands don't trigger onDidType.\n        const commands = new Set([CoreEditingCommands.Tab.id, CoreEditingCommands.DeleteLeft.id, CoreEditingCommands.DeleteRight.id, inlineSuggestCommitId, 'acceptSelectedSuggestion']);\n        if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n          this._editorObs.forceUpdate(tx => {\n            /** @description onDidExecuteCommand */\n            this.model.get()?.trigger(tx);\n          });\n        }\n      }));\n      this._register(reactToChange(this._editorObs.selections, (_value, changes) => {\n        if (changes.some(e => e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api')) {\n          this.model.get()?.stop();\n        }\n      }));\n      this._register(this.editor.onDidBlurEditorWidget(() => {\n        // This is a hidden setting very useful for debugging\n        if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur || InlineSuggestionHintsContentWidget.dropDownVisible) {\n          return;\n        }\n        transaction(tx => {\n          /** @description InlineCompletionsController.onDidBlurEditorWidget */\n          this.model.get()?.stop(tx);\n        });\n      }));\n      this._register(autorun(reader => {\n        /** @description InlineCompletionsController.forceRenderingAbove */\n        const state = this.model.read(reader)?.state.read(reader);\n        if (state?.suggestItem) {\n          if (state.primaryGhostText.lineCount >= 2) {\n            this._suggestWidgetAdaptor.forceRenderingAbove();\n          }\n        } else {\n          this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }\n      }));\n      this._register(toDisposable(() => {\n        this._suggestWidgetAdaptor.stopForceRenderingAbove();\n      }));\n      const currentInlineCompletionBySemanticId = derivedObservableWithCache(this, (reader, last) => {\n        const model = this.model.read(reader);\n        const state = model?.state.read(reader);\n        if (this._suggestWidgetSelectedItem.get()) {\n          return last;\n        }\n        return state?.inlineCompletion?.semanticId;\n      });\n      this._register(reactToChangeWithStore(derived(reader => {\n        this._playAccessibilitySignal.read(reader);\n        currentInlineCompletionBySemanticId.read(reader);\n        return {};\n      }), /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (_value, _deltas, store) {\n          /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n          const model = _this.model.get();\n          const state = model?.state.get();\n          if (!state || !model) {\n            return;\n          }\n          const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n          yield timeout(50, cancelOnDispose(store));\n          yield waitForState(_this._suggestWidgetSelectedItem, isUndefined, () => false, cancelOnDispose(store));\n          yield _this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n          if (_this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            _this._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n          }\n        });\n        return function (_x, _x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n      this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n      this._register(createStyleSheetFromObservable(derived(reader => {\n        const fontFamily = this._fontFamily.read(reader);\n        if (fontFamily === '' || fontFamily === 'default') {\n          return '';\n        }\n        return `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n      })));\n      // TODO@hediet\n      this._register(this._configurationService.onDidChangeConfiguration(e => {\n        if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n          this.editor.updateOptions({\n            inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n          });\n        }\n      }));\n      this.editor.updateOptions({\n        inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n      });\n    }\n    playAccessibilitySignal(tx) {\n      this._playAccessibilitySignal.trigger(tx);\n    }\n    _provideScreenReaderUpdate(content) {\n      const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n      const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n      let hint;\n      if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n        hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n      }\n      alert(hint ? content + ', ' + hint : content);\n    }\n    shouldShowHoverAt(range) {\n      const ghostText = this.model.get()?.primaryGhostText.get();\n      if (ghostText) {\n        return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n      }\n      return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n      return this._ghostTextWidgets.get()[0]?.ownsViewZone(viewZoneId) ?? false;\n    }\n  };\n  return InlineCompletionsController;\n})();\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IConfigurationService), __param(4, ICommandService), __param(5, ILanguageFeatureDebounceService), __param(6, ILanguageFeaturesService), __param(7, IAccessibilitySignalService), __param(8, IKeybindingService), __param(9, IAccessibilityService)], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n  const result = observableValue('result', []);\n  const innerObservables = [];\n  store.add(autorun(reader => {\n    const itemsValue = items.read(reader);\n    transaction(tx => {\n      if (itemsValue.length !== innerObservables.length) {\n        innerObservables.length = itemsValue.length;\n        for (let i = 0; i < innerObservables.length; i++) {\n          if (!innerObservables[i]) {\n            innerObservables[i] = observableValue('item', itemsValue[i]);\n          }\n        }\n        result.set([...innerObservables], tx);\n      }\n      innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n    });\n  }));\n  return result;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineCompletionsController_1","createStyleSheetFromObservable","alert","timeout","cancelOnDispose","Disposable","toDisposable","autorun","constObservable","derived","observableFromEvent","observableSignal","observableValue","transaction","waitForState","derivedDisposable","derivedObservableWithCache","mapObservableArrayCached","isUndefined","CoreEditingCommands","observableCodeEditor","reactToChange","reactToChangeWithStore","Position","ILanguageFeatureDebounceService","ILanguageFeaturesService","inlineSuggestCommitId","GhostTextView","InlineCompletionContextKeys","InlineCompletionsHintsWidget","InlineSuggestionHintsContentWidget","InlineCompletionsModel","SuggestWidgetAdaptor","localize","IAccessibilityService","AccessibilitySignal","IAccessibilitySignalService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","IKeybindingService","InlineCompletionsController","_","_2","ID","get","editor","getContribution","constructor","_instantiationService","_contextKeyService","_configurationService","_commandService","_debounceService","_languageFeaturesService","_accessibilitySignalService","_keybindingService","_accessibilityService","_this","this","_editorObs","_positions","reader","selections","read","map","s","getEndPosition","_suggestWidgetAdaptor","_register","forceUpdate","model","selectedInlineCompletion","toSingleTextEdit","undefined","item","_tx","handleSuggestAccepted","_suggestWidgetSelectedItem","cb","onDidSelectedItemChange","selectedItem","_enabledInConfig","onDidChangeConfiguration","getOption","enabled","_isScreenReaderEnabled","onDidChangeScreenReaderOptimized","isScreenReaderOptimized","_editorDictationInProgress","onDidChangeContext","getContext","getDomNode","getValue","_enabled","_debounceValue","for","inlineCompletionsProvider","min","max","isReadonly","textModel","createInstance","versionId","preview","previewMode","mode","recomputeInitiallyAndOnChange","_store","_ghostTexts","ghostTexts","_stablizedGhostTexts","convertItemsToStableObservables","_ghostTextWidgets","ghostText","store","add","minReservedLineCount","targetTextModel","v","_playAccessibilitySignal","_fontFamily","fontFamily","onDidType","_value","_changes","trigger","onDidExecuteCommand","e","commands","Set","Tab","id","DeleteLeft","DeleteRight","has","commandId","hasTextFocus","tx","changes","some","reason","source","stop","onDidBlurEditorWidget","getContextKeyValue","keepOnBlur","dropDownVisible","state","suggestItem","primaryGhostText","lineCount","forceRenderingAbove","stopForceRenderingAbove","currentInlineCompletionBySemanticId","last","inlineCompletion","semanticId","_ref","_asyncToGenerator","_deltas","lineText","getLineContent","lineNumber","playSignal","inlineSuggestion","_provideScreenReaderUpdate","renderForScreenReader","_x","_x2","_x3","apply","affectsConfiguration","updateOptions","inlineCompletionsAccessibilityVerbose","playAccessibilitySignal","content","accessibleViewShowing","accessibleViewKeybinding","lookupKeybinding","hint","getAriaLabel","shouldShowHoverAt","range","parts","p","containsPosition","column","shouldShowHoverAtViewZone","viewZoneId","ownsViewZone","items","result","innerObservables","itemsValue","set","forEach","o"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domObservable.js';\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { derivedObservableWithCache, mapObservableArrayCached } from '../../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { observableCodeEditor, reactToChange, reactToChangeWithStore } from '../../../../browser/observableCodeEditor.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextView } from '../view/ghostTextView.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from '../model/suggestWidgetAdaptor.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static { InlineCompletionsController_1 = this; }\n    static { this.ID = 'editor.contrib.inlineCompletionsController'; }\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n        super();\n        this.editor = editor;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._commandService = _commandService;\n        this._debounceService = _debounceService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._keybindingService = _keybindingService;\n        this._accessibilityService = _accessibilityService;\n        this._editorObs = observableCodeEditor(this.editor);\n        this._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n            this._editorObs.forceUpdate();\n            return this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined);\n        }, (item) => this._editorObs.forceUpdate(_tx => {\n            /** @description InlineCompletionsController.handleSuggestAccepted */\n            this.model.get()?.handleSuggestAccepted(item);\n        })));\n        this._suggestWidgetSelectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n            this._editorObs.forceUpdate(_tx => cb(undefined));\n        }), () => this._suggestWidgetAdaptor.selectedItem);\n        this._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n        this._editorDictationInProgress = observableFromEvent(this, this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n        this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this.model = derivedDisposable(this, reader => {\n            if (this._editorObs.isReadonly.read(reader)) {\n                return undefined;\n            }\n            const textModel = this._editorObs.model.read(reader);\n            if (!textModel) {\n                return undefined;\n            }\n            const model = this._instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetSelectedItem, this._editorObs.versionId, this._positions, this._debounceValue, observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).preview), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).previewMode), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n            return model;\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._ghostTexts = derived(this, (reader) => {\n            const model = this.model.read(reader);\n            return model?.ghostTexts.read(reader) ?? [];\n        });\n        this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n        this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => store.add(this._instantiationService.createInstance(GhostTextView, this.editor, {\n            ghostText: ghostText,\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v?.textModel),\n        }))).recomputeInitiallyAndOnChange(this._store);\n        this._playAccessibilitySignal = observableSignal(this);\n        this._fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n        this._register(reactToChange(this._editorObs.onDidType, (_value, _changes) => {\n            if (this._enabled.get()) {\n                this.model.get()?.trigger();\n            }\n        }));\n        this._register(this._commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                this._editorObs.forceUpdate(tx => {\n                    /** @description onDidExecuteCommand */\n                    this.model.get()?.trigger(tx);\n                });\n            }\n        }));\n        this._register(reactToChange(this._editorObs.selections, (_value, changes) => {\n            if (changes.some(e => e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api')) {\n                this.model.get()?.stop();\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown')\n                || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur')\n                || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur\n                || InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\n                this.model.get()?.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description InlineCompletionsController.forceRenderingAbove */\n            const state = this.model.read(reader)?.state.read(reader);\n            if (state?.suggestItem) {\n                if (state.primaryGhostText.lineCount >= 2) {\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        const currentInlineCompletionBySemanticId = derivedObservableWithCache(this, (reader, last) => {\n            const model = this.model.read(reader);\n            const state = model?.state.read(reader);\n            if (this._suggestWidgetSelectedItem.get()) {\n                return last;\n            }\n            return state?.inlineCompletion?.semanticId;\n        });\n        this._register(reactToChangeWithStore(derived(reader => {\n            this._playAccessibilitySignal.read(reader);\n            currentInlineCompletionBySemanticId.read(reader);\n            return {};\n        }), async (_value, _deltas, store) => {\n            /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n            const model = this.model.get();\n            const state = model?.state.get();\n            if (!state || !model) {\n                return;\n            }\n            const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n            await timeout(50, cancelOnDispose(store));\n            await waitForState(this._suggestWidgetSelectedItem, isUndefined, () => false, cancelOnDispose(store));\n            await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n            if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                this._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n        this._register(createStyleSheetFromObservable(derived(reader => {\n            const fontFamily = this._fontFamily.read(reader);\n            if (fontFamily === '' || fontFamily === 'default') {\n                return '';\n            }\n            return `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n        })));\n        // TODO@hediet\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    playAccessibilitySignal(tx) {\n        this._playAccessibilitySignal.trigger(tx);\n    }\n    _provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        alert(hint ? content + ', ' + hint : content);\n    }\n    shouldShowHoverAt(range) {\n        const ghostText = this.model.get()?.primaryGhostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this._ghostTextWidgets.get()[0]?.ownsViewZone(viewZoneId) ?? false;\n    }\n};\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAccessibilitySignalService),\n    __param(8, IKeybindingService),\n    __param(9, IAccessibilityService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n    const result = observableValue('result', []);\n    const innerObservables = [];\n    store.add(autorun(reader => {\n        const itemsValue = items.read(reader);\n        transaction(tx => {\n            if (itemsValue.length !== innerObservables.length) {\n                innerObservables.length = itemsValue.length;\n                for (let i = 0; i < innerObservables.length; i++) {\n                    if (!innerObservables[i]) {\n                        innerObservables[i] = observableValue('item', itemsValue[i]);\n                    }\n                }\n                result.set([...innerObservables], tx);\n            }\n            innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n        });\n    }));\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}