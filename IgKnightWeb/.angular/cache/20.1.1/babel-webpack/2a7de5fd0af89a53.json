{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n  if (!editor.hasModel()) {\n    return null;\n  }\n  const selection = editor.getSelection();\n  // if selection spans multiple lines, default search string to empty\n  if (seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber || seedSearchStringFromSelection === 'multiple') {\n    if (selection.isEmpty()) {\n      const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n      if (wordAtPosition && false === seedSearchStringFromNonEmptySelection) {\n        return wordAtPosition.word;\n      }\n    } else {\n      if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n        return editor.getModel().getValueInRange(selection);\n      }\n    }\n  }\n  return null;\n}\nlet CommonFindController = /*#__PURE__*/(() => {\n  let CommonFindController = class CommonFindController extends Disposable {\n    static #_ = CommonFindController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.findController';\n    get editor() {\n      return this._editor;\n    }\n    static get(editor) {\n      return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService, hoverService) {\n      super();\n      this._editor = editor;\n      this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n      this._contextKeyService = contextKeyService;\n      this._storageService = storageService;\n      this._clipboardService = clipboardService;\n      this._notificationService = notificationService;\n      this._hoverService = hoverService;\n      this._updateHistoryDelayer = new Delayer(500);\n      this._state = this._register(new FindReplaceState());\n      this.loadQueryState();\n      this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n      this._model = null;\n      this._register(this._editor.onDidChangeModel(() => {\n        const shouldRestartFind = this._editor.getModel() && this._state.isRevealed;\n        this.disposeModel();\n        this._state.change({\n          searchScope: null,\n          matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n          wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n          isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n          preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n        }, false);\n        if (shouldRestartFind) {\n          this._start({\n            forceRevealReplace: false,\n            seedSearchStringFromSelection: 'none',\n            seedSearchStringFromNonEmptySelection: false,\n            seedSearchStringFromGlobalClipboard: false,\n            shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n            shouldAnimate: false,\n            updateSearchScope: false,\n            loop: this._editor.getOption(41 /* EditorOption.find */).loop\n          });\n        }\n      }));\n    }\n    dispose() {\n      this.disposeModel();\n      super.dispose();\n    }\n    disposeModel() {\n      if (this._model) {\n        this._model.dispose();\n        this._model = null;\n      }\n    }\n    _onStateChanged(e) {\n      this.saveQueryState(e);\n      if (e.isRevealed) {\n        if (this._state.isRevealed) {\n          this._findWidgetVisible.set(true);\n        } else {\n          this._findWidgetVisible.reset();\n          this.disposeModel();\n        }\n      }\n      if (e.searchString) {\n        this.setGlobalBufferTerm(this._state.searchString);\n      }\n    }\n    saveQueryState(e) {\n      if (e.isRegex) {\n        this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.wholeWord) {\n        this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.matchCase) {\n        this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.preserveCase) {\n        this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n    }\n    loadQueryState() {\n      this._state.change({\n        matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n        wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n        isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n        preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n      }, false);\n    }\n    isFindInputFocused() {\n      return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n      return this._state;\n    }\n    closeFindWidget() {\n      this._state.change({\n        isRevealed: false,\n        searchScope: null\n      }, false);\n      this._editor.focus();\n    }\n    toggleCaseSensitive() {\n      this._state.change({\n        matchCase: !this._state.matchCase\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n    toggleWholeWords() {\n      this._state.change({\n        wholeWord: !this._state.wholeWord\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n    toggleRegex() {\n      this._state.change({\n        isRegex: !this._state.isRegex\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n    togglePreserveCase() {\n      this._state.change({\n        preserveCase: !this._state.preserveCase\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n    toggleSearchScope() {\n      if (this._state.searchScope) {\n        this._state.change({\n          searchScope: null\n        }, true);\n      } else {\n        if (this._editor.hasModel()) {\n          let selections = this._editor.getSelections();\n          selections = selections.map(selection => {\n            if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n              selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n            }\n            if (!selection.isEmpty()) {\n              return selection;\n            }\n            return null;\n          }).filter(element => !!element);\n          if (selections.length) {\n            this._state.change({\n              searchScope: selections\n            }, true);\n          }\n        }\n      }\n    }\n    setSearchString(searchString) {\n      if (this._state.isRegex) {\n        searchString = strings.escapeRegExpCharacters(searchString);\n      }\n      this._state.change({\n        searchString: searchString\n      }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n      // overwritten in subclass\n    }\n    _start(opts, newState) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.disposeModel();\n        if (!_this._editor.hasModel()) {\n          // cannot do anything with an editor that doesn't have a model...\n          return;\n        }\n        const stateChanges = {\n          ...newState,\n          isRevealed: true\n        };\n        if (opts.seedSearchStringFromSelection === 'single') {\n          const selectionSearchString = getSelectionSearchString(_this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n          if (selectionSearchString) {\n            if (_this._state.isRegex) {\n              stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n            } else {\n              stateChanges.searchString = selectionSearchString;\n            }\n          }\n        } else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n          const selectionSearchString = getSelectionSearchString(_this._editor, opts.seedSearchStringFromSelection);\n          if (selectionSearchString) {\n            stateChanges.searchString = selectionSearchString;\n          }\n        }\n        if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n          const selectionSearchString = yield _this.getGlobalBufferTerm();\n          if (!_this._editor.hasModel()) {\n            // the editor has lost its model in the meantime\n            return;\n          }\n          if (selectionSearchString) {\n            stateChanges.searchString = selectionSearchString;\n          }\n        }\n        // Overwrite isReplaceRevealed\n        if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n          stateChanges.isReplaceRevealed = true;\n        } else if (!_this._findWidgetVisible.get()) {\n          stateChanges.isReplaceRevealed = false;\n        }\n        if (opts.updateSearchScope) {\n          const currentSelections = _this._editor.getSelections();\n          if (currentSelections.some(selection => !selection.isEmpty())) {\n            stateChanges.searchScope = currentSelections;\n          }\n        }\n        stateChanges.loop = opts.loop;\n        _this._state.change(stateChanges, false);\n        if (!_this._model) {\n          _this._model = new FindModelBoundToEditorModel(_this._editor, _this._state);\n        }\n      })();\n    }\n    start(opts, newState) {\n      return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n      if (this._model) {\n        this._model.moveToNextMatch();\n        return true;\n      }\n      return false;\n    }\n    moveToPrevMatch() {\n      if (this._model) {\n        this._model.moveToPrevMatch();\n        return true;\n      }\n      return false;\n    }\n    goToMatch(index) {\n      if (this._model) {\n        this._model.moveToMatch(index);\n        return true;\n      }\n      return false;\n    }\n    replace() {\n      if (this._model) {\n        this._model.replace();\n        return true;\n      }\n      return false;\n    }\n    replaceAll() {\n      if (this._model) {\n        if (this._editor.getModel()?.isTooLargeForHeapOperation()) {\n          this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n          return false;\n        }\n        this._model.replaceAll();\n        return true;\n      }\n      return false;\n    }\n    selectAllMatches() {\n      if (this._model) {\n        this._model.selectAllMatches();\n        this._editor.focus();\n        return true;\n      }\n      return false;\n    }\n    getGlobalBufferTerm() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && _this2._editor.hasModel() && !_this2._editor.getModel().isTooLargeForSyncing()) {\n          return _this2._clipboardService.readFindText();\n        }\n        return '';\n      })();\n    }\n    setGlobalBufferTerm(text) {\n      if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n        // intentionally not awaited\n        this._clipboardService.writeFindText(text);\n      }\n    }\n  };\n  return CommonFindController;\n})();\nCommonFindController = CommonFindController_1 = __decorate([__param(1, IContextKeyService), __param(2, IStorageService), __param(3, IClipboardService), __param(4, INotificationService), __param(5, IHoverService)], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n  constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService, hoverService) {\n    super(editor, _contextKeyService, _storageService, clipboardService, notificationService, hoverService);\n    this._contextViewService = _contextViewService;\n    this._keybindingService = _keybindingService;\n    this._themeService = _themeService;\n    this._widget = null;\n    this._findOptionsWidget = null;\n  }\n  _start(opts, newState) {\n    var _superprop_get_start = () => super._start,\n      _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3._widget) {\n        _this3._createFindWidget();\n      }\n      const selection = _this3._editor.getSelection();\n      let updateSearchScope = false;\n      switch (_this3._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n        case 'always':\n          updateSearchScope = true;\n          break;\n        case 'never':\n          updateSearchScope = false;\n          break;\n        case 'multiline':\n          {\n            const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n            updateSearchScope = isSelectionMultipleLine;\n            break;\n          }\n        default:\n          break;\n      }\n      opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n      yield _superprop_get_start().call(_this3, opts, newState);\n      if (_this3._widget) {\n        if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n          _this3._widget.focusReplaceInput();\n        } else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n          _this3._widget.focusFindInput();\n        }\n      }\n    })();\n  }\n  highlightFindOptions(ignoreWhenVisible = false) {\n    if (!this._widget) {\n      this._createFindWidget();\n    }\n    if (this._state.isRevealed && !ignoreWhenVisible) {\n      this._widget.highlightFindOptions();\n    } else {\n      this._findOptionsWidget.highlightFindOptions();\n    }\n  }\n  _createFindWidget() {\n    this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService, this._hoverService));\n    this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n  }\n};\nFindController = __decorate([__param(1, IContextViewService), __param(2, IContextKeyService), __param(3, IKeybindingService), __param(4, IThemeService), __param(5, INotificationService), __param(6, IStorageService), __param(7, IClipboardService), __param(8, IHoverService)], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindAction,\n  label: nls.localize('startFindAction', \"Find\"),\n  alias: 'Find',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miFind',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Find\"),\n    order: 1\n  }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n  const controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  return controller.start({\n    forceRevealReplace: false,\n    seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nconst findArgDescription = {\n  description: 'Open a new In-Editor Find Widget.',\n  args: [{\n    name: 'Open a new In-Editor Find Widget args',\n    schema: {\n      properties: {\n        searchString: {\n          type: 'string'\n        },\n        replaceString: {\n          type: 'string'\n        },\n        isRegex: {\n          type: 'boolean'\n        },\n        matchWholeWord: {\n          type: 'boolean'\n        },\n        isCaseSensitive: {\n          type: 'boolean'\n        },\n        preserveCase: {\n          type: 'boolean'\n        },\n        findInSelection: {\n          type: 'boolean'\n        }\n      }\n    }\n  }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindWithArgs,\n      label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n      alias: 'Find With Arguments',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: findArgDescription\n    });\n  }\n  run(accessor, editor, args) {\n    return _asyncToGenerator(function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller) {\n        const newState = args ? {\n          searchString: args.searchString,\n          replaceString: args.replaceString,\n          isReplaceRevealed: args.replaceString !== undefined,\n          isRegex: args.isRegex,\n          // isRegexOverride: args.regexOverride,\n          wholeWord: args.matchWholeWord,\n          // wholeWordOverride: args.wholeWordOverride,\n          matchCase: args.isCaseSensitive,\n          // matchCaseOverride: args.matchCaseOverride,\n          preserveCase: args.preserveCase\n          // preserveCaseOverride: args.preserveCaseOverride,\n        } : {};\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n          seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n          seedSearchStringFromGlobalClipboard: true,\n          shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n          shouldAnimate: true,\n          updateSearchScope: args?.findInSelection || false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        }, newState);\n        controller.setGlobalBufferTerm(controller.getState().searchString);\n      }\n    })();\n  }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindWithSelection,\n      label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n      alias: 'Find With Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    return _asyncToGenerator(function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'multiple',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        controller.setGlobalBufferTerm(controller.getState().searchString);\n      }\n    })();\n  }\n}\nexport class MatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller && !_this4._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n          seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n          seedSearchStringFromGlobalClipboard: true,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        _this4._run(controller);\n      }\n    })();\n  }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextMatchFindAction,\n      label: nls.localize('findNextMatchAction', \"Find Next\"),\n      alias: 'Find Next',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */,\n          secondary: [61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n  }\n  _run(controller) {\n    const result = controller.moveToNextMatch();\n    if (result) {\n      controller.editor.pushUndoStop();\n      return true;\n    }\n    return false;\n  }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousMatchFindAction,\n      label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n      alias: 'Find Previous',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */,\n          secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n  }\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.GoToMatchFindAction,\n      label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n      alias: 'Go to Match...',\n      precondition: CONTEXT_FIND_WIDGET_VISIBLE\n    });\n    this._highlightDecorations = [];\n  }\n  run(accessor, editor, args) {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n      return;\n    }\n    const matchesCount = controller.getState().matchesCount;\n    if (matchesCount < 1) {\n      const notificationService = accessor.get(INotificationService);\n      notificationService.notify({\n        severity: Severity.Warning,\n        message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n      });\n      return;\n    }\n    const quickInputService = accessor.get(IQuickInputService);\n    const disposables = new DisposableStore();\n    const inputBox = disposables.add(quickInputService.createInputBox());\n    inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n    const toFindMatchIndex = value => {\n      const index = parseInt(value);\n      if (isNaN(index)) {\n        return undefined;\n      }\n      const matchCount = controller.getState().matchesCount;\n      if (index > 0 && index <= matchCount) {\n        return index - 1; // zero based\n      } else if (index < 0 && index >= -matchCount) {\n        return matchCount + index;\n      }\n      return undefined;\n    };\n    const updatePickerAndEditor = value => {\n      const index = toFindMatchIndex(value);\n      if (typeof index === 'number') {\n        // valid\n        inputBox.validationMessage = undefined;\n        controller.goToMatch(index);\n        const currentMatch = controller.getState().currentMatch;\n        if (currentMatch) {\n          this.addDecorations(editor, currentMatch);\n        }\n      } else {\n        inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n        this.clearDecorations(editor);\n      }\n    };\n    disposables.add(inputBox.onDidChangeValue(value => {\n      updatePickerAndEditor(value);\n    }));\n    disposables.add(inputBox.onDidAccept(() => {\n      const index = toFindMatchIndex(inputBox.value);\n      if (typeof index === 'number') {\n        controller.goToMatch(index);\n        inputBox.hide();\n      } else {\n        inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n      }\n    }));\n    disposables.add(inputBox.onDidHide(() => {\n      this.clearDecorations(editor);\n      disposables.dispose();\n    }));\n    inputBox.show();\n  }\n  clearDecorations(editor) {\n    editor.changeDecorations(changeAccessor => {\n      this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n    });\n  }\n  addDecorations(editor, range) {\n    editor.changeDecorations(changeAccessor => {\n      this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [{\n        range,\n        options: {\n          description: 'find-match-quick-access-range-highlight',\n          className: 'rangeHighlight',\n          isWholeLine: true\n        }\n      }, {\n        range,\n        options: {\n          description: 'find-match-quick-access-range-highlight-overview',\n          overviewRuler: {\n            color: themeColorFromId(overviewRulerRangeHighlight),\n            position: OverviewRulerLane.Full\n          }\n        }\n      }]);\n    });\n  }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const controller = CommonFindController.get(editor);\n      if (!controller) {\n        return;\n      }\n      const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n      if (selectionSearchString) {\n        controller.setSearchString(selectionSearchString);\n      }\n      if (!_this5._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'none',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        _this5._run(controller);\n      }\n    })();\n  }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextSelectionMatchFindAction,\n      label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n      alias: 'Find Next Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  _run(controller) {\n    return controller.moveToNextMatch();\n  }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousSelectionMatchFindAction,\n      label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n      alias: 'Find Previous Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindReplaceAction,\n  label: nls.localize('startReplace', \"Replace\"),\n  alias: 'Replace',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */\n    },\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miReplace',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Replace\"),\n    order: 2\n  }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n  if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */)) {\n    return false;\n  }\n  const controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  const currentSelection = editor.getSelection();\n  const findInputFocused = controller.isFindInputFocused();\n  // we only seed search string from selection when the current selection is single line and not empty,\n  // + the find input is not focused\n  const seedSearchStringFromSelection = !currentSelection.isEmpty() && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' && !findInputFocused;\n  /*\n  * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n   * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n  * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n  * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n  */\n  const shouldFocus = findInputFocused || seedSearchStringFromSelection ? 2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n  return controller.start({\n    forceRevealReplace: true,\n    seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n    shouldFocus: shouldFocus,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.CloseFindWidgetCommand,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.closeFindWidget(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleCaseSensitiveCommand,\n  precondition: undefined,\n  handler: x => x.toggleCaseSensitive(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleCaseSensitiveKeybinding.primary,\n    mac: ToggleCaseSensitiveKeybinding.mac,\n    win: ToggleCaseSensitiveKeybinding.win,\n    linux: ToggleCaseSensitiveKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleWholeWordCommand,\n  precondition: undefined,\n  handler: x => x.toggleWholeWords(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleWholeWordKeybinding.primary,\n    mac: ToggleWholeWordKeybinding.mac,\n    win: ToggleWholeWordKeybinding.win,\n    linux: ToggleWholeWordKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleRegexCommand,\n  precondition: undefined,\n  handler: x => x.toggleRegex(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleRegexKeybinding.primary,\n    mac: ToggleRegexKeybinding.mac,\n    win: ToggleRegexKeybinding.win,\n    linux: ToggleRegexKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleSearchScopeCommand,\n  precondition: undefined,\n  handler: x => x.toggleSearchScope(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleSearchScopeKeybinding.primary,\n    mac: ToggleSearchScopeKeybinding.mac,\n    win: ToggleSearchScopeKeybinding.win,\n    linux: ToggleSearchScopeKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.TogglePreserveCaseCommand,\n  precondition: undefined,\n  handler: x => x.togglePreserveCase(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: TogglePreserveCaseKeybinding.primary,\n    mac: TogglePreserveCaseKeybinding.mac,\n    win: TogglePreserveCaseKeybinding.win,\n    linux: TogglePreserveCaseKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: undefined,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */\n    }\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.SelectAllMatchesAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.selectAllMatches(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","CommonFindController_1","Delayer","Disposable","DisposableStore","strings","EditorAction","EditorCommand","MultiEditorAction","registerEditorAction","registerEditorCommand","registerEditorContribution","registerMultiEditorAction","overviewRulerRangeHighlight","EditorContextKeys","OverviewRulerLane","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_REPLACE_INPUT_FOCUSED","FindModelBoundToEditorModel","FIND_IDS","ToggleCaseSensitiveKeybinding","TogglePreserveCaseKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","ToggleWholeWordKeybinding","FindOptionsWidget","FindReplaceState","FindWidget","nls","MenuId","IClipboardService","ContextKeyExpr","IContextKeyService","IContextViewService","IKeybindingService","INotificationService","Severity","IQuickInputService","IStorageService","IThemeService","themeColorFromId","IHoverService","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","editor","seedSearchStringFromSelection","seedSearchStringFromNonEmptySelection","hasModel","selection","getSelection","startLineNumber","endLineNumber","isEmpty","wordAtPosition","getConfiguredWordAtPosition","getStartPosition","word","getModel","getValueLengthInRange","getValueInRange","CommonFindController","_","_2","ID","_editor","get","getContribution","constructor","contextKeyService","storageService","clipboardService","notificationService","hoverService","_findWidgetVisible","bindTo","_contextKeyService","_storageService","_clipboardService","_notificationService","_hoverService","_updateHistoryDelayer","_state","_register","loadQueryState","onFindReplaceStateChange","e","_onStateChanged","_model","onDidChangeModel","shouldRestartFind","isRevealed","disposeModel","change","searchScope","matchCase","getBoolean","wholeWord","isRegex","preserveCase","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","loop","getOption","dispose","saveQueryState","set","reset","searchString","setGlobalBufferTerm","store","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","isFindInputFocused","getValue","getState","closeFindWidget","focus","toggleCaseSensitive","highlightFindOptions","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","selections","getSelections","map","endColumn","setEndPosition","getLineMaxColumn","filter","element","setSearchString","escapeRegExpCharacters","ignoreWhenVisible","opts","newState","_this","_asyncToGenerator","stateChanges","selectionSearchString","getGlobalBufferTerm","isReplaceRevealed","currentSelections","some","start","moveToNextMatch","moveToPrevMatch","goToMatch","index","moveToMatch","replace","replaceAll","isTooLargeForHeapOperation","warn","localize","selectAllMatches","_this2","globalFindClipboard","isTooLargeForSyncing","readFindText","text","writeFindText","FindController","_contextViewService","_keybindingService","_themeService","_widget","_findOptionsWidget","_superprop_get_start","_this3","_createFindWidget","autoFindInSelection","isSelectionMultipleLine","call","focusReplaceInput","focusFindInput","StartFindAction","id","label","alias","precondition","or","has","kbOpts","kbExpr","primary","weight","menuOpts","menuId","MenubarEditMenu","group","title","comment","order","addImplementation","accessor","args","controller","findArgDescription","description","name","schema","properties","type","replaceString","matchWholeWord","isCaseSensitive","findInSelection","StartFindWithArgsAction","StartFindWithArgs","undefined","metadata","run","StartFindWithSelectionAction","StartFindWithSelection","mac","MatchFindAction","_this4","_run","NextMatchFindAction","secondary","and","result","pushUndoStop","PreviousMatchFindAction","MoveToMatchFindAction","GoToMatchFindAction","_highlightDecorations","matchesCount","notify","severity","Warning","message","quickInputService","disposables","inputBox","add","createInputBox","placeholder","toFindMatchIndex","value","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","currentMatch","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","show","changeDecorations","changeAccessor","deltaDecorations","range","options","className","isWholeLine","overviewRuler","color","position","Full","SelectionMatchFindAction","_this5","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","FindCommand","bindToContribution","CloseFindWidgetCommand","handler","x","not","ToggleCaseSensitiveCommand","win","linux","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n    static { CommonFindController_1 = this; }\n    static { this.ID = 'editor.contrib.findController'; }\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService, hoverService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._notificationService = notificationService;\n        this._hoverService = hoverService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(41 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                let selections = this._editor.getSelections();\n                selections = selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter((element) => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    async _start(opts, newState) {\n        this.disposeModel();\n        if (!this._editor.hasModel()) {\n            // cannot do anything with an editor that doesn't have a model...\n            return;\n        }\n        const stateChanges = {\n            ...newState,\n            isRevealed: true\n        };\n        if (opts.seedSearchStringFromSelection === 'single') {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n            if (selectionSearchString) {\n                if (this._state.isRegex) {\n                    stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                }\n                else {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n        }\n        else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n            const selectionSearchString = await this.getGlobalBufferTerm();\n            if (!this._editor.hasModel()) {\n                // the editor has lost its model in the meantime\n                return;\n            }\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        // Overwrite isReplaceRevealed\n        if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n            stateChanges.isReplaceRevealed = true;\n        }\n        else if (!this._findWidgetVisible.get()) {\n            stateChanges.isReplaceRevealed = false;\n        }\n        if (opts.updateSearchScope) {\n            const currentSelections = this._editor.getSelections();\n            if (currentSelections.some(selection => !selection.isEmpty())) {\n                stateChanges.searchScope = currentSelections;\n            }\n        }\n        stateChanges.loop = opts.loop;\n        this._state.change(stateChanges, false);\n        if (!this._model) {\n            this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n        }\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            if (this._editor.getModel()?.isTooLargeForHeapOperation()) {\n                this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n                return false;\n            }\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    async getGlobalBufferTerm() {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            return this._clipboardService.readFindText();\n        }\n        return '';\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController = CommonFindController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService),\n    __param(4, INotificationService),\n    __param(5, IHoverService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService, hoverService) {\n        super(editor, _contextKeyService, _storageService, clipboardService, notificationService, hoverService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    async _start(opts, newState) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        const selection = this._editor.getSelection();\n        let updateSearchScope = false;\n        switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n            case 'always':\n                updateSearchScope = true;\n                break;\n            case 'never':\n                updateSearchScope = false;\n                break;\n            case 'multiline': {\n                const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                updateSearchScope = isSelectionMultipleLine;\n                break;\n            }\n            default:\n                break;\n        }\n        opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n        await super._start(opts, newState);\n        if (this._widget) {\n            if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                this._widget.focusReplaceInput();\n            }\n            else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                this._widget.focusFindInput();\n            }\n        }\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService, this._hoverService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService),\n    __param(8, IHoverService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    isRegex: { type: 'boolean' },\n                    matchWholeWord: { type: 'boolean' },\n                    isCaseSensitive: { type: 'boolean' },\n                    preserveCase: { type: 'boolean' },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: findArgDescription\n        });\n    }\n    async run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            const newState = args ? {\n                searchString: args.searchString,\n                replaceString: args.replaceString,\n                isReplaceRevealed: args.replaceString !== undefined,\n                isRegex: args.isRegex,\n                // isRegexOverride: args.regexOverride,\n                wholeWord: args.matchWholeWord,\n                // wholeWordOverride: args.wholeWordOverride,\n                matchCase: args.isCaseSensitive,\n                // matchCaseOverride: args.matchCaseOverride,\n                preserveCase: args.preserveCase,\n                // preserveCaseOverride: args.preserveCaseOverride,\n            } : {};\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                shouldAnimate: true,\n                updateSearchScope: args?.findInSelection || false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            }, newState);\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'multiple',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller && !this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const disposables = new DisposableStore();\n        const inputBox = disposables.add(quickInputService.createInputBox());\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        disposables.add(inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        }));\n        disposables.add(inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        }));\n        disposables.add(inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            disposables.dispose();\n        }));\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n        if (selectionSearchString) {\n            controller.setSearchString(selectionSearchString);\n        }\n        if (!this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'none',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}