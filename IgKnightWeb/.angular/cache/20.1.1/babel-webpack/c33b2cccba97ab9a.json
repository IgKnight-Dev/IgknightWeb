{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../base/browser/dom.js';\nimport { structuralEquals } from '../../../../base/common/equals.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derivedObservableWithCache, derivedOpts } from '../../../../base/common/observable.js';\nimport { derivedWithStore } from '../../../../base/common/observableInternal/derived.js';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\n/**\n * Use the editor option to set the placeholder text.\n*/\nexport let PlaceholderTextContribution = /*#__PURE__*/(() => {\n  class PlaceholderTextContribution extends Disposable {\n    static #_ = this.ID = 'editor.contrib.placeholderText';\n    constructor(_editor) {\n      super();\n      this._editor = _editor;\n      this._editorObs = observableCodeEditor(this._editor);\n      this._placeholderText = this._editorObs.getOption(88 /* EditorOption.placeholder */);\n      this._state = derivedOpts({\n        owner: this,\n        equalsFn: structuralEquals\n      }, reader => {\n        const p = this._placeholderText.read(reader);\n        if (!p) {\n          return undefined;\n        }\n        if (!this._editorObs.valueIsEmpty.read(reader)) {\n          return undefined;\n        }\n        return {\n          placeholder: p\n        };\n      });\n      this._shouldViewBeAlive = isOrWasTrue(this, reader => this._state.read(reader)?.placeholder !== undefined);\n      this._view = derivedWithStore((reader, store) => {\n        if (!this._shouldViewBeAlive.read(reader)) {\n          return;\n        }\n        const element = h('div.editorPlaceholder');\n        store.add(autorun(reader => {\n          const data = this._state.read(reader);\n          const shouldBeVisibile = data?.placeholder !== undefined;\n          element.root.style.display = shouldBeVisibile ? 'block' : 'none';\n          element.root.innerText = data?.placeholder ?? '';\n        }));\n        store.add(autorun(reader => {\n          const info = this._editorObs.layoutInfo.read(reader);\n          element.root.style.left = `${info.contentLeft}px`;\n          element.root.style.width = info.contentWidth - info.verticalScrollbarWidth + 'px';\n          element.root.style.top = `${this._editor.getTopForLineNumber(0)}px`;\n        }));\n        store.add(autorun(reader => {\n          element.root.style.fontFamily = this._editorObs.getOption(49 /* EditorOption.fontFamily */).read(reader);\n          element.root.style.fontSize = this._editorObs.getOption(52 /* EditorOption.fontSize */).read(reader) + 'px';\n          element.root.style.lineHeight = this._editorObs.getOption(67 /* EditorOption.lineHeight */).read(reader) + 'px';\n        }));\n        store.add(this._editorObs.createOverlayWidget({\n          allowEditorOverflow: false,\n          minContentWidthInPx: constObservable(0),\n          position: constObservable(null),\n          domNode: element.root\n        }));\n      });\n      this._view.recomputeInitiallyAndOnChange(this._store);\n    }\n  }\n  return PlaceholderTextContribution;\n})();\nfunction isOrWasTrue(owner, fn) {\n  return derivedObservableWithCache(owner, (reader, lastValue) => {\n    if (lastValue === true) {\n      return true;\n    }\n    return fn(reader);\n  });\n}","map":{"version":3,"names":["h","structuralEquals","Disposable","autorun","constObservable","derivedObservableWithCache","derivedOpts","derivedWithStore","observableCodeEditor","PlaceholderTextContribution","_","ID","constructor","_editor","_editorObs","_placeholderText","getOption","_state","owner","equalsFn","reader","p","read","undefined","valueIsEmpty","placeholder","_shouldViewBeAlive","isOrWasTrue","_view","store","element","add","data","shouldBeVisibile","root","style","display","innerText","info","layoutInfo","left","contentLeft","width","contentWidth","verticalScrollbarWidth","top","getTopForLineNumber","fontFamily","fontSize","lineHeight","createOverlayWidget","allowEditorOverflow","minContentWidthInPx","position","domNode","recomputeInitiallyAndOnChange","_store","fn","lastValue"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/placeholderText/browser/placeholderTextContribution.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../base/browser/dom.js';\nimport { structuralEquals } from '../../../../base/common/equals.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derivedObservableWithCache, derivedOpts } from '../../../../base/common/observable.js';\nimport { derivedWithStore } from '../../../../base/common/observableInternal/derived.js';\nimport { observableCodeEditor } from '../../../browser/observableCodeEditor.js';\n/**\n * Use the editor option to set the placeholder text.\n*/\nexport class PlaceholderTextContribution extends Disposable {\n    static { this.ID = 'editor.contrib.placeholderText'; }\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._editorObs = observableCodeEditor(this._editor);\n        this._placeholderText = this._editorObs.getOption(88 /* EditorOption.placeholder */);\n        this._state = derivedOpts({ owner: this, equalsFn: structuralEquals }, reader => {\n            const p = this._placeholderText.read(reader);\n            if (!p) {\n                return undefined;\n            }\n            if (!this._editorObs.valueIsEmpty.read(reader)) {\n                return undefined;\n            }\n            return { placeholder: p };\n        });\n        this._shouldViewBeAlive = isOrWasTrue(this, reader => this._state.read(reader)?.placeholder !== undefined);\n        this._view = derivedWithStore((reader, store) => {\n            if (!this._shouldViewBeAlive.read(reader)) {\n                return;\n            }\n            const element = h('div.editorPlaceholder');\n            store.add(autorun(reader => {\n                const data = this._state.read(reader);\n                const shouldBeVisibile = data?.placeholder !== undefined;\n                element.root.style.display = shouldBeVisibile ? 'block' : 'none';\n                element.root.innerText = data?.placeholder ?? '';\n            }));\n            store.add(autorun(reader => {\n                const info = this._editorObs.layoutInfo.read(reader);\n                element.root.style.left = `${info.contentLeft}px`;\n                element.root.style.width = (info.contentWidth - info.verticalScrollbarWidth) + 'px';\n                element.root.style.top = `${this._editor.getTopForLineNumber(0)}px`;\n            }));\n            store.add(autorun(reader => {\n                element.root.style.fontFamily = this._editorObs.getOption(49 /* EditorOption.fontFamily */).read(reader);\n                element.root.style.fontSize = this._editorObs.getOption(52 /* EditorOption.fontSize */).read(reader) + 'px';\n                element.root.style.lineHeight = this._editorObs.getOption(67 /* EditorOption.lineHeight */).read(reader) + 'px';\n            }));\n            store.add(this._editorObs.createOverlayWidget({\n                allowEditorOverflow: false,\n                minContentWidthInPx: constObservable(0),\n                position: constObservable(null),\n                domNode: element.root,\n            }));\n        });\n        this._view.recomputeInitiallyAndOnChange(this._store);\n    }\n}\nfunction isOrWasTrue(owner, fn) {\n    return derivedObservableWithCache(owner, (reader, lastValue) => {\n        if (lastValue === true) {\n            return true;\n        }\n        return fn(reader);\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}