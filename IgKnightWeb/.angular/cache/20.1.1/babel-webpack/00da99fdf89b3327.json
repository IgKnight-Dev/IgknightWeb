{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', '#A0A0A0', nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\nclass JumpToBracketAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.jumpToBracket',\n      label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n      alias: 'Go to Bracket',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 93 /* KeyCode.Backslash */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    BracketMatchingController.get(editor)?.jumpToBracket();\n  }\n}\nclass SelectToBracketAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.selectToBracket',\n      label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n      alias: 'Select to Bracket',\n      precondition: undefined,\n      metadata: {\n        description: nls.localize2('smartSelect.selectToBracketDescription', \"Select the text inside and including the brackets or curly braces\"),\n        args: [{\n          name: 'args',\n          schema: {\n            type: 'object',\n            properties: {\n              'selectBrackets': {\n                type: 'boolean',\n                default: true\n              }\n            }\n          }\n        }]\n      }\n    });\n  }\n  run(accessor, editor, args) {\n    let selectBrackets = true;\n    if (args && args.selectBrackets === false) {\n      selectBrackets = false;\n    }\n    BracketMatchingController.get(editor)?.selectToBracket(selectBrackets);\n  }\n}\nclass RemoveBracketsAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.removeBrackets',\n      label: nls.localize('smartSelect.removeBrackets', \"Remove Brackets\"),\n      alias: 'Remove Brackets',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1 /* KeyCode.Backspace */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    BracketMatchingController.get(editor)?.removeBrackets(this.id);\n  }\n}\nclass BracketsData {\n  constructor(position, brackets, options) {\n    this.position = position;\n    this.brackets = brackets;\n    this.options = options;\n  }\n}\nexport class BracketMatchingController extends Disposable {\n  static #_ = this.ID = 'editor.contrib.bracketMatchingController';\n  static get(editor) {\n    return editor.getContribution(BracketMatchingController.ID);\n  }\n  constructor(editor) {\n    super();\n    this._editor = editor;\n    this._lastBracketsData = [];\n    this._lastVersionId = 0;\n    this._decorations = this._editor.createDecorationsCollection();\n    this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n    this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n    this._updateBracketsSoon.schedule();\n    this._register(editor.onDidChangeCursorPosition(e => {\n      if (this._matchBrackets === 'never') {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        return;\n      }\n      this._updateBracketsSoon.schedule();\n    }));\n    this._register(editor.onDidChangeModelContent(e => {\n      this._updateBracketsSoon.schedule();\n    }));\n    this._register(editor.onDidChangeModel(e => {\n      this._lastBracketsData = [];\n      this._updateBracketsSoon.schedule();\n    }));\n    this._register(editor.onDidChangeModelLanguageConfiguration(e => {\n      this._lastBracketsData = [];\n      this._updateBracketsSoon.schedule();\n    }));\n    this._register(editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(72 /* EditorOption.matchBrackets */)) {\n        this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n        this._decorations.clear();\n        this._lastBracketsData = [];\n        this._lastVersionId = 0;\n        this._updateBracketsSoon.schedule();\n      }\n    }));\n    this._register(editor.onDidBlurEditorWidget(() => {\n      this._updateBracketsSoon.schedule();\n    }));\n    this._register(editor.onDidFocusEditorWidget(() => {\n      this._updateBracketsSoon.schedule();\n    }));\n  }\n  jumpToBracket() {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    const model = this._editor.getModel();\n    const newSelections = this._editor.getSelections().map(selection => {\n      const position = selection.getStartPosition();\n      // find matching brackets if position is on a bracket\n      const brackets = model.bracketPairs.matchBracket(position);\n      let newCursorPosition = null;\n      if (brackets) {\n        if (brackets[0].containsPosition(position) && !brackets[1].containsPosition(position)) {\n          newCursorPosition = brackets[1].getStartPosition();\n        } else if (brackets[1].containsPosition(position)) {\n          newCursorPosition = brackets[0].getStartPosition();\n        }\n      } else {\n        // find the enclosing brackets if the position isn't on a matching bracket\n        const enclosingBrackets = model.bracketPairs.findEnclosingBrackets(position);\n        if (enclosingBrackets) {\n          newCursorPosition = enclosingBrackets[1].getStartPosition();\n        } else {\n          // no enclosing brackets, try the very first next bracket\n          const nextBracket = model.bracketPairs.findNextBracket(position);\n          if (nextBracket && nextBracket.range) {\n            newCursorPosition = nextBracket.range.getStartPosition();\n          }\n        }\n      }\n      if (newCursorPosition) {\n        return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n      }\n      return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n    });\n    this._editor.setSelections(newSelections);\n    this._editor.revealRange(newSelections[0]);\n  }\n  selectToBracket(selectBrackets) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    const model = this._editor.getModel();\n    const newSelections = [];\n    this._editor.getSelections().forEach(selection => {\n      const position = selection.getStartPosition();\n      let brackets = model.bracketPairs.matchBracket(position);\n      if (!brackets) {\n        brackets = model.bracketPairs.findEnclosingBrackets(position);\n        if (!brackets) {\n          const nextBracket = model.bracketPairs.findNextBracket(position);\n          if (nextBracket && nextBracket.range) {\n            brackets = model.bracketPairs.matchBracket(nextBracket.range.getStartPosition());\n          }\n        }\n      }\n      let selectFrom = null;\n      let selectTo = null;\n      if (brackets) {\n        brackets.sort(Range.compareRangesUsingStarts);\n        const [open, close] = brackets;\n        selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n        selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n        if (close.containsPosition(position)) {\n          // select backwards if the cursor was on the closing bracket\n          const tmp = selectFrom;\n          selectFrom = selectTo;\n          selectTo = tmp;\n        }\n      }\n      if (selectFrom && selectTo) {\n        newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n      }\n    });\n    if (newSelections.length > 0) {\n      this._editor.setSelections(newSelections);\n      this._editor.revealRange(newSelections[0]);\n    }\n  }\n  removeBrackets(editSource) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    const model = this._editor.getModel();\n    this._editor.getSelections().forEach(selection => {\n      const position = selection.getPosition();\n      let brackets = model.bracketPairs.matchBracket(position);\n      if (!brackets) {\n        brackets = model.bracketPairs.findEnclosingBrackets(position);\n      }\n      if (brackets) {\n        this._editor.pushUndoStop();\n        this._editor.executeEdits(editSource, [{\n          range: brackets[0],\n          text: ''\n        }, {\n          range: brackets[1],\n          text: ''\n        }]);\n        this._editor.pushUndoStop();\n      }\n    });\n  }\n  static #_2 = this._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match',\n    overviewRuler: {\n      color: themeColorFromId(overviewRulerBracketMatchForeground),\n      position: OverviewRulerLane.Center\n    }\n  });\n  static #_3 = this._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match'\n  });\n  _updateBrackets() {\n    if (this._matchBrackets === 'never') {\n      return;\n    }\n    this._recomputeBrackets();\n    const newDecorations = [];\n    let newDecorationsLen = 0;\n    for (const bracketData of this._lastBracketsData) {\n      const brackets = bracketData.brackets;\n      if (brackets) {\n        newDecorations[newDecorationsLen++] = {\n          range: brackets[0],\n          options: bracketData.options\n        };\n        newDecorations[newDecorationsLen++] = {\n          range: brackets[1],\n          options: bracketData.options\n        };\n      }\n    }\n    this._decorations.set(newDecorations);\n  }\n  _recomputeBrackets() {\n    if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n      // no model or no focus => no brackets!\n      this._lastBracketsData = [];\n      this._lastVersionId = 0;\n      return;\n    }\n    const selections = this._editor.getSelections();\n    if (selections.length > 100) {\n      // no bracket matching for high numbers of selections\n      this._lastBracketsData = [];\n      this._lastVersionId = 0;\n      return;\n    }\n    const model = this._editor.getModel();\n    const versionId = model.getVersionId();\n    let previousData = [];\n    if (this._lastVersionId === versionId) {\n      // use the previous data only if the model is at the same version id\n      previousData = this._lastBracketsData;\n    }\n    const positions = [];\n    let positionsLen = 0;\n    for (let i = 0, len = selections.length; i < len; i++) {\n      const selection = selections[i];\n      if (selection.isEmpty()) {\n        // will bracket match a cursor only if the selection is collapsed\n        positions[positionsLen++] = selection.getStartPosition();\n      }\n    }\n    // sort positions for `previousData` cache hits\n    if (positions.length > 1) {\n      positions.sort(Position.compare);\n    }\n    const newData = [];\n    let newDataLen = 0;\n    let previousIndex = 0;\n    const previousLen = previousData.length;\n    for (let i = 0, len = positions.length; i < len; i++) {\n      const position = positions[i];\n      while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n        previousIndex++;\n      }\n      if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n        newData[newDataLen++] = previousData[previousIndex];\n      } else {\n        let brackets = model.bracketPairs.matchBracket(position, 20 /* give at most 20ms to compute */);\n        let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n        if (!brackets && this._matchBrackets === 'always') {\n          brackets = model.bracketPairs.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\n          options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n        }\n        newData[newDataLen++] = new BracketsData(position, brackets, options);\n      }\n    }\n    this._lastBracketsData = newData;\n    this._lastVersionId = versionId;\n  }\n}\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterEditorAction(RemoveBracketsAction);\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n  group: '5_infile_nav',\n  command: {\n    id: 'editor.action.jumpToBracket',\n    title: nls.localize({\n      key: 'miGoToBracket',\n      comment: ['&& denotes a mnemonic']\n    }, \"Go to &&Bracket\")\n  },\n  order: 2\n});","map":{"version":3,"names":["RunOnceScheduler","Disposable","EditorAction","registerEditorAction","registerEditorContribution","Position","Range","Selection","EditorContextKeys","OverviewRulerLane","ModelDecorationOptions","nls","MenuId","MenuRegistry","registerColor","themeColorFromId","overviewRulerBracketMatchForeground","localize","JumpToBracketAction","constructor","id","label","alias","precondition","undefined","kbOpts","kbExpr","editorTextFocus","primary","weight","run","accessor","editor","BracketMatchingController","get","jumpToBracket","SelectToBracketAction","metadata","description","localize2","args","name","schema","type","properties","default","selectBrackets","selectToBracket","RemoveBracketsAction","removeBrackets","BracketsData","position","brackets","options","_","ID","getContribution","_editor","_lastBracketsData","_lastVersionId","_decorations","createDecorationsCollection","_updateBracketsSoon","_register","_updateBrackets","_matchBrackets","getOption","schedule","onDidChangeCursorPosition","e","onDidChangeModelContent","onDidChangeModel","onDidChangeModelLanguageConfiguration","onDidChangeConfiguration","hasChanged","clear","onDidBlurEditorWidget","onDidFocusEditorWidget","hasModel","model","getModel","newSelections","getSelections","map","selection","getStartPosition","bracketPairs","matchBracket","newCursorPosition","containsPosition","enclosingBrackets","findEnclosingBrackets","nextBracket","findNextBracket","range","lineNumber","column","setSelections","revealRange","forEach","selectFrom","selectTo","sort","compareRangesUsingStarts","open","close","getEndPosition","tmp","push","length","editSource","getPosition","pushUndoStop","executeEdits","text","_2","_DECORATION_OPTIONS_WITH_OVERVIEW_RULER","register","stickiness","className","overviewRuler","color","Center","_3","_DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER","_recomputeBrackets","newDecorations","newDecorationsLen","bracketData","set","hasWidgetFocus","selections","versionId","getVersionId","previousData","positions","positionsLen","i","len","isEmpty","compare","newData","newDataLen","previousIndex","previousLen","isBefore","equals","appendMenuItem","MenubarGoMenu","group","command","title","key","comment","order"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/browser/bracketMatching.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', '#A0A0A0', nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\nclass JumpToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.jumpToBracket',\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n            alias: 'Go to Bracket',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 93 /* KeyCode.Backslash */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        BracketMatchingController.get(editor)?.jumpToBracket();\n    }\n}\nclass SelectToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectToBracket',\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n            alias: 'Select to Bracket',\n            precondition: undefined,\n            metadata: {\n                description: nls.localize2('smartSelect.selectToBracketDescription', \"Select the text inside and including the brackets or curly braces\"),\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'selectBrackets': {\n                                    type: 'boolean',\n                                    default: true\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        let selectBrackets = true;\n        if (args && args.selectBrackets === false) {\n            selectBrackets = false;\n        }\n        BracketMatchingController.get(editor)?.selectToBracket(selectBrackets);\n    }\n}\nclass RemoveBracketsAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeBrackets',\n            label: nls.localize('smartSelect.removeBrackets', \"Remove Brackets\"),\n            alias: 'Remove Brackets',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1 /* KeyCode.Backspace */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        BracketMatchingController.get(editor)?.removeBrackets(this.id);\n    }\n}\nclass BracketsData {\n    constructor(position, brackets, options) {\n        this.position = position;\n        this.brackets = brackets;\n        this.options = options;\n    }\n}\nexport class BracketMatchingController extends Disposable {\n    static { this.ID = 'editor.contrib.bracketMatchingController'; }\n    static get(editor) {\n        return editor.getContribution(BracketMatchingController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._lastBracketsData = [];\n        this._lastVersionId = 0;\n        this._decorations = this._editor.createDecorationsCollection();\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n        this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n        this._updateBracketsSoon.schedule();\n        this._register(editor.onDidChangeCursorPosition((e) => {\n            if (this._matchBrackets === 'never') {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this._lastBracketsData = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\n            this._lastBracketsData = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(72 /* EditorOption.matchBrackets */)) {\n                this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n                this._decorations.clear();\n                this._lastBracketsData = [];\n                this._lastVersionId = 0;\n                this._updateBracketsSoon.schedule();\n            }\n        }));\n        this._register(editor.onDidBlurEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidFocusEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n    }\n    jumpToBracket() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = this._editor.getSelections().map(selection => {\n            const position = selection.getStartPosition();\n            // find matching brackets if position is on a bracket\n            const brackets = model.bracketPairs.matchBracket(position);\n            let newCursorPosition = null;\n            if (brackets) {\n                if (brackets[0].containsPosition(position) && !brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[1].getStartPosition();\n                }\n                else if (brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[0].getStartPosition();\n                }\n            }\n            else {\n                // find the enclosing brackets if the position isn't on a matching bracket\n                const enclosingBrackets = model.bracketPairs.findEnclosingBrackets(position);\n                if (enclosingBrackets) {\n                    newCursorPosition = enclosingBrackets[1].getStartPosition();\n                }\n                else {\n                    // no enclosing brackets, try the very first next bracket\n                    const nextBracket = model.bracketPairs.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        newCursorPosition = nextBracket.range.getStartPosition();\n                    }\n                }\n            }\n            if (newCursorPosition) {\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n            }\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n        });\n        this._editor.setSelections(newSelections);\n        this._editor.revealRange(newSelections[0]);\n    }\n    selectToBracket(selectBrackets) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = [];\n        this._editor.getSelections().forEach(selection => {\n            const position = selection.getStartPosition();\n            let brackets = model.bracketPairs.matchBracket(position);\n            if (!brackets) {\n                brackets = model.bracketPairs.findEnclosingBrackets(position);\n                if (!brackets) {\n                    const nextBracket = model.bracketPairs.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        brackets = model.bracketPairs.matchBracket(nextBracket.range.getStartPosition());\n                    }\n                }\n            }\n            let selectFrom = null;\n            let selectTo = null;\n            if (brackets) {\n                brackets.sort(Range.compareRangesUsingStarts);\n                const [open, close] = brackets;\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n                if (close.containsPosition(position)) {\n                    // select backwards if the cursor was on the closing bracket\n                    const tmp = selectFrom;\n                    selectFrom = selectTo;\n                    selectTo = tmp;\n                }\n            }\n            if (selectFrom && selectTo) {\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n            }\n        });\n        if (newSelections.length > 0) {\n            this._editor.setSelections(newSelections);\n            this._editor.revealRange(newSelections[0]);\n        }\n    }\n    removeBrackets(editSource) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        this._editor.getSelections().forEach((selection) => {\n            const position = selection.getPosition();\n            let brackets = model.bracketPairs.matchBracket(position);\n            if (!brackets) {\n                brackets = model.bracketPairs.findEnclosingBrackets(position);\n            }\n            if (brackets) {\n                this._editor.pushUndoStop();\n                this._editor.executeEdits(editSource, [\n                    { range: brackets[0], text: '' },\n                    { range: brackets[1], text: '' }\n                ]);\n                this._editor.pushUndoStop();\n            }\n        });\n    }\n    static { this._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n        description: 'bracket-match-overview',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        className: 'bracket-match',\n        overviewRuler: {\n            color: themeColorFromId(overviewRulerBracketMatchForeground),\n            position: OverviewRulerLane.Center\n        }\n    }); }\n    static { this._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n        description: 'bracket-match-no-overview',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        className: 'bracket-match'\n    }); }\n    _updateBrackets() {\n        if (this._matchBrackets === 'never') {\n            return;\n        }\n        this._recomputeBrackets();\n        const newDecorations = [];\n        let newDecorationsLen = 0;\n        for (const bracketData of this._lastBracketsData) {\n            const brackets = bracketData.brackets;\n            if (brackets) {\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\n            }\n        }\n        this._decorations.set(newDecorations);\n    }\n    _recomputeBrackets() {\n        if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n            // no model or no focus => no brackets!\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const selections = this._editor.getSelections();\n        if (selections.length > 100) {\n            // no bracket matching for high numbers of selections\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const model = this._editor.getModel();\n        const versionId = model.getVersionId();\n        let previousData = [];\n        if (this._lastVersionId === versionId) {\n            // use the previous data only if the model is at the same version id\n            previousData = this._lastBracketsData;\n        }\n        const positions = [];\n        let positionsLen = 0;\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (selection.isEmpty()) {\n                // will bracket match a cursor only if the selection is collapsed\n                positions[positionsLen++] = selection.getStartPosition();\n            }\n        }\n        // sort positions for `previousData` cache hits\n        if (positions.length > 1) {\n            positions.sort(Position.compare);\n        }\n        const newData = [];\n        let newDataLen = 0;\n        let previousIndex = 0;\n        const previousLen = previousData.length;\n        for (let i = 0, len = positions.length; i < len; i++) {\n            const position = positions[i];\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n                previousIndex++;\n            }\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n                newData[newDataLen++] = previousData[previousIndex];\n            }\n            else {\n                let brackets = model.bracketPairs.matchBracket(position, 20 /* give at most 20ms to compute */);\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n                if (!brackets && this._matchBrackets === 'always') {\n                    brackets = model.bracketPairs.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n                }\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\n            }\n        }\n        this._lastBracketsData = newData;\n        this._lastVersionId = versionId;\n    }\n}\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterEditorAction(RemoveBracketsAction);\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '5_infile_nav',\n    command: {\n        id: 'editor.action.jumpToBracket',\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n    },\n    order: 2\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}