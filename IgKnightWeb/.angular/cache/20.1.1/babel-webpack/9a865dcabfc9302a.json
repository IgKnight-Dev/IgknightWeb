{"ast":null,"code":"import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n  static register(options) {\n    const sound = new Sound(options.fileName);\n    return sound;\n  }\n  static #_ = this.error = Sound.register({\n    fileName: 'error.mp3'\n  });\n  static #_2 = this.warning = Sound.register({\n    fileName: 'warning.mp3'\n  });\n  static #_3 = this.success = Sound.register({\n    fileName: 'success.mp3'\n  });\n  static #_4 = this.foldedArea = Sound.register({\n    fileName: 'foldedAreas.mp3'\n  });\n  static #_5 = this.break = Sound.register({\n    fileName: 'break.mp3'\n  });\n  static #_6 = this.quickFixes = Sound.register({\n    fileName: 'quickFixes.mp3'\n  });\n  static #_7 = this.taskCompleted = Sound.register({\n    fileName: 'taskCompleted.mp3'\n  });\n  static #_8 = this.taskFailed = Sound.register({\n    fileName: 'taskFailed.mp3'\n  });\n  static #_9 = this.terminalBell = Sound.register({\n    fileName: 'terminalBell.mp3'\n  });\n  static #_10 = this.diffLineInserted = Sound.register({\n    fileName: 'diffLineInserted.mp3'\n  });\n  static #_11 = this.diffLineDeleted = Sound.register({\n    fileName: 'diffLineDeleted.mp3'\n  });\n  static #_12 = this.diffLineModified = Sound.register({\n    fileName: 'diffLineModified.mp3'\n  });\n  static #_13 = this.chatRequestSent = Sound.register({\n    fileName: 'chatRequestSent.mp3'\n  });\n  static #_14 = this.chatResponseReceived1 = Sound.register({\n    fileName: 'chatResponseReceived1.mp3'\n  });\n  static #_15 = this.chatResponseReceived2 = Sound.register({\n    fileName: 'chatResponseReceived2.mp3'\n  });\n  static #_16 = this.chatResponseReceived3 = Sound.register({\n    fileName: 'chatResponseReceived3.mp3'\n  });\n  static #_17 = this.chatResponseReceived4 = Sound.register({\n    fileName: 'chatResponseReceived4.mp3'\n  });\n  static #_18 = this.clear = Sound.register({\n    fileName: 'clear.mp3'\n  });\n  static #_19 = this.save = Sound.register({\n    fileName: 'save.mp3'\n  });\n  static #_20 = this.format = Sound.register({\n    fileName: 'format.mp3'\n  });\n  static #_21 = this.voiceRecordingStarted = Sound.register({\n    fileName: 'voiceRecordingStarted.mp3'\n  });\n  static #_22 = this.voiceRecordingStopped = Sound.register({\n    fileName: 'voiceRecordingStopped.mp3'\n  });\n  static #_23 = this.progress = Sound.register({\n    fileName: 'progress.mp3'\n  });\n  constructor(fileName) {\n    this.fileName = fileName;\n  }\n}\nexport class SoundSource {\n  constructor(randomOneOf) {\n    this.randomOneOf = randomOneOf;\n  }\n}\nexport class AccessibilitySignal {\n  constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n    this.sound = sound;\n    this.name = name;\n    this.legacySoundSettingsKey = legacySoundSettingsKey;\n    this.settingsKey = settingsKey;\n    this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n    this.announcementMessage = announcementMessage;\n  }\n  static #_ = this._signals = new Set();\n  static register(options) {\n    const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n    const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n    AccessibilitySignal._signals.add(signal);\n    return signal;\n  }\n  static #_2 = this.errorAtPosition = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n    sound: Sound.error,\n    announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n    settingsKey: 'accessibility.signals.positionHasError',\n    delaySettingsKey: 'accessibility.signalOptions.delays.errorAtPosition'\n  });\n  static #_3 = this.warningAtPosition = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n    sound: Sound.warning,\n    announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n    settingsKey: 'accessibility.signals.positionHasWarning',\n    delaySettingsKey: 'accessibility.signalOptions.delays.warningAtPosition'\n  });\n  static #_4 = this.errorOnLine = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.lineHasError',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.error',\n    announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n    settingsKey: 'accessibility.signals.lineHasError'\n  });\n  static #_5 = this.warningOnLine = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    legacySoundSettingsKey: 'audioCues.lineHasWarning',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.warning',\n    announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n    settingsKey: 'accessibility.signals.lineHasWarning'\n  });\n  static #_6 = this.foldedArea = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.foldedArea',\n    announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n    settingsKey: 'accessibility.signals.lineHasFoldedArea'\n  });\n  static #_7 = this.break = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.breakpoint',\n    announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n    settingsKey: 'accessibility.signals.lineHasBreakpoint'\n  });\n  static #_8 = this.inlineSuggestion = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n    settingsKey: 'accessibility.signals.lineHasInlineSuggestion'\n  });\n  static #_9 = this.terminalQuickFix = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.terminalQuickFix',\n    announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n    settingsKey: 'accessibility.signals.terminalQuickFix'\n  });\n  static #_10 = this.onDebugBreak = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    legacySoundSettingsKey: 'audioCues.onDebugBreak',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.onDebugBreak',\n    announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n    settingsKey: 'accessibility.signals.onDebugBreak'\n  });\n  static #_11 = this.noInlayHints = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.noInlayHints',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.noInlayHints',\n    announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n    settingsKey: 'accessibility.signals.noInlayHints'\n  });\n  static #_12 = this.taskCompleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    legacySoundSettingsKey: 'audioCues.taskCompleted',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.taskCompleted',\n    announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n    settingsKey: 'accessibility.signals.taskCompleted'\n  });\n  static #_13 = this.taskFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    legacySoundSettingsKey: 'audioCues.taskFailed',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.taskFailed',\n    announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n    settingsKey: 'accessibility.signals.taskFailed'\n  });\n  static #_14 = this.terminalCommandFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.terminalCommandFailed',\n    announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n    settingsKey: 'accessibility.signals.terminalCommandFailed'\n  });\n  static #_15 = this.terminalCommandSucceeded = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalCommandSucceeded', 'Terminal Command Succeeded'),\n    sound: Sound.success,\n    announcementMessage: localize('accessibility.signals.terminalCommandSucceeded', 'Command Succeeded'),\n    settingsKey: 'accessibility.signals.terminalCommandSucceeded'\n  });\n  static #_16 = this.terminalBell = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    legacySoundSettingsKey: 'audioCues.terminalBell',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.terminalBell',\n    announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n    settingsKey: 'accessibility.signals.terminalBell'\n  });\n  static #_17 = this.notebookCellCompleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellCompleted',\n    announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n    settingsKey: 'accessibility.signals.notebookCellCompleted'\n  });\n  static #_18 = this.notebookCellFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellFailed',\n    announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n    settingsKey: 'accessibility.signals.notebookCellFailed'\n  });\n  static #_19 = this.diffLineInserted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    legacySoundSettingsKey: 'audioCues.diffLineInserted',\n    settingsKey: 'accessibility.signals.diffLineInserted'\n  });\n  static #_20 = this.diffLineDeleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n    settingsKey: 'accessibility.signals.diffLineDeleted'\n  });\n  static #_21 = this.diffLineModified = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    legacySoundSettingsKey: 'audioCues.diffLineModified',\n    settingsKey: 'accessibility.signals.diffLineModified'\n  });\n  static #_22 = this.chatRequestSent = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n    sound: Sound.chatRequestSent,\n    legacySoundSettingsKey: 'audioCues.chatRequestSent',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.chatRequestSent',\n    announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n    settingsKey: 'accessibility.signals.chatRequestSent'\n  });\n  static #_23 = this.chatResponseReceived = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n    legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n    sound: {\n      randomOneOf: [Sound.chatResponseReceived1, Sound.chatResponseReceived2, Sound.chatResponseReceived3, Sound.chatResponseReceived4]\n    },\n    settingsKey: 'accessibility.signals.chatResponseReceived'\n  });\n  static #_24 = this.progress = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.progress', 'Progress'),\n    sound: Sound.progress,\n    legacySoundSettingsKey: 'audioCues.chatResponsePending',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.progress',\n    announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n    settingsKey: 'accessibility.signals.progress'\n  });\n  static #_25 = this.clear = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.clear', 'Clear'),\n    sound: Sound.clear,\n    legacySoundSettingsKey: 'audioCues.clear',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.clear',\n    announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n    settingsKey: 'accessibility.signals.clear'\n  });\n  static #_26 = this.save = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.save', 'Save'),\n    sound: Sound.save,\n    legacySoundSettingsKey: 'audioCues.save',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.save',\n    announcementMessage: localize('accessibility.signals.save', 'Save'),\n    settingsKey: 'accessibility.signals.save'\n  });\n  static #_27 = this.format = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.format', 'Format'),\n    sound: Sound.format,\n    legacySoundSettingsKey: 'audioCues.format',\n    legacyAnnouncementSettingsKey: 'accessibility.alert.format',\n    announcementMessage: localize('accessibility.signals.format', 'Format'),\n    settingsKey: 'accessibility.signals.format'\n  });\n  static #_28 = this.voiceRecordingStarted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n    sound: Sound.voiceRecordingStarted,\n    legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n    settingsKey: 'accessibility.signals.voiceRecordingStarted'\n  });\n  static #_29 = this.voiceRecordingStopped = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n    sound: Sound.voiceRecordingStopped,\n    legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n    settingsKey: 'accessibility.signals.voiceRecordingStopped'\n  });\n}","map":{"version":3,"names":["localize","createDecorator","IAccessibilitySignalService","AcknowledgeDocCommentsToken","Symbol","Sound","register","options","sound","fileName","_","error","_2","warning","_3","success","_4","foldedArea","_5","break","_6","quickFixes","_7","taskCompleted","_8","taskFailed","_9","terminalBell","_10","diffLineInserted","_11","diffLineDeleted","_12","diffLineModified","_13","chatRequestSent","_14","chatResponseReceived1","_15","chatResponseReceived2","_16","chatResponseReceived3","_17","chatResponseReceived4","_18","clear","_19","save","_20","format","_21","voiceRecordingStarted","_22","voiceRecordingStopped","_23","progress","constructor","SoundSource","randomOneOf","AccessibilitySignal","name","legacySoundSettingsKey","settingsKey","legacyAnnouncementSettingsKey","announcementMessage","_signals","Set","soundSource","signal","add","errorAtPosition","delaySettingsKey","warningAtPosition","errorOnLine","warningOnLine","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","terminalCommandSucceeded","notebookCellCompleted","notebookCellFailed","chatResponseReceived","_24","_25","_26","_27","_28","_29"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/platform/accessibilitySignal/browser/accessibilitySignalService.js"],"sourcesContent":["import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    static { this.error = Sound.register({ fileName: 'error.mp3' }); }\n    static { this.warning = Sound.register({ fileName: 'warning.mp3' }); }\n    static { this.success = Sound.register({ fileName: 'success.mp3' }); }\n    static { this.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' }); }\n    static { this.break = Sound.register({ fileName: 'break.mp3' }); }\n    static { this.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' }); }\n    static { this.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' }); }\n    static { this.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' }); }\n    static { this.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' }); }\n    static { this.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' }); }\n    static { this.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' }); }\n    static { this.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' }); }\n    static { this.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' }); }\n    static { this.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' }); }\n    static { this.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' }); }\n    static { this.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' }); }\n    static { this.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' }); }\n    static { this.clear = Sound.register({ fileName: 'clear.mp3' }); }\n    static { this.save = Sound.register({ fileName: 'save.mp3' }); }\n    static { this.format = Sound.register({ fileName: 'format.mp3' }); }\n    static { this.voiceRecordingStarted = Sound.register({ fileName: 'voiceRecordingStarted.mp3' }); }\n    static { this.voiceRecordingStopped = Sound.register({ fileName: 'voiceRecordingStopped.mp3' }); }\n    static { this.progress = Sound.register({ fileName: 'progress.mp3' }); }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AccessibilitySignal {\n    constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n        this.sound = sound;\n        this.name = name;\n        this.legacySoundSettingsKey = legacySoundSettingsKey;\n        this.settingsKey = settingsKey;\n        this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n        this.announcementMessage = announcementMessage;\n    }\n    static { this._signals = new Set(); }\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n        AccessibilitySignal._signals.add(signal);\n        return signal;\n    }\n    static { this.errorAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n        sound: Sound.error,\n        announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n        settingsKey: 'accessibility.signals.positionHasError',\n        delaySettingsKey: 'accessibility.signalOptions.delays.errorAtPosition'\n    }); }\n    static { this.warningAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n        sound: Sound.warning,\n        announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n        settingsKey: 'accessibility.signals.positionHasWarning',\n        delaySettingsKey: 'accessibility.signalOptions.delays.warningAtPosition'\n    }); }\n    static { this.errorOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.lineHasError',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.error',\n        announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n        settingsKey: 'accessibility.signals.lineHasError',\n    }); }\n    static { this.warningOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n        sound: Sound.warning,\n        legacySoundSettingsKey: 'audioCues.lineHasWarning',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.warning',\n        announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n        settingsKey: 'accessibility.signals.lineHasWarning',\n    }); }\n    static { this.foldedArea = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n        sound: Sound.foldedArea,\n        legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.foldedArea',\n        announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n        settingsKey: 'accessibility.signals.lineHasFoldedArea',\n    }); }\n    static { this.break = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.breakpoint',\n        announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.lineHasBreakpoint',\n    }); }\n    static { this.inlineSuggestion = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n        settingsKey: 'accessibility.signals.lineHasInlineSuggestion',\n    }); }\n    static { this.terminalQuickFix = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalQuickFix',\n        announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n        settingsKey: 'accessibility.signals.terminalQuickFix',\n    }); }\n    static { this.onDebugBreak = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.onDebugBreak',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.onDebugBreak',\n        announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.onDebugBreak',\n    }); }\n    static { this.noInlayHints = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.noInlayHints',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.noInlayHints',\n        announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n        settingsKey: 'accessibility.signals.noInlayHints',\n    }); }\n    static { this.taskCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.taskCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskCompleted',\n        announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n        settingsKey: 'accessibility.signals.taskCompleted',\n    }); }\n    static { this.taskFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.taskFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskFailed',\n        announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n        settingsKey: 'accessibility.signals.taskFailed',\n    }); }\n    static { this.terminalCommandFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalCommandFailed',\n        announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n        settingsKey: 'accessibility.signals.terminalCommandFailed',\n    }); }\n    static { this.terminalCommandSucceeded = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandSucceeded', 'Terminal Command Succeeded'),\n        sound: Sound.success,\n        announcementMessage: localize('accessibility.signals.terminalCommandSucceeded', 'Command Succeeded'),\n        settingsKey: 'accessibility.signals.terminalCommandSucceeded',\n    }); }\n    static { this.terminalBell = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n        sound: Sound.terminalBell,\n        legacySoundSettingsKey: 'audioCues.terminalBell',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalBell',\n        announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n        settingsKey: 'accessibility.signals.terminalBell',\n    }); }\n    static { this.notebookCellCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellCompleted',\n        announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n        settingsKey: 'accessibility.signals.notebookCellCompleted',\n    }); }\n    static { this.notebookCellFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellFailed',\n        announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n        settingsKey: 'accessibility.signals.notebookCellFailed',\n    }); }\n    static { this.diffLineInserted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n        sound: Sound.diffLineInserted,\n        legacySoundSettingsKey: 'audioCues.diffLineInserted',\n        settingsKey: 'accessibility.signals.diffLineInserted',\n    }); }\n    static { this.diffLineDeleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n        sound: Sound.diffLineDeleted,\n        legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n        settingsKey: 'accessibility.signals.diffLineDeleted',\n    }); }\n    static { this.diffLineModified = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n        sound: Sound.diffLineModified,\n        legacySoundSettingsKey: 'audioCues.diffLineModified',\n        settingsKey: 'accessibility.signals.diffLineModified',\n    }); }\n    static { this.chatRequestSent = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n        sound: Sound.chatRequestSent,\n        legacySoundSettingsKey: 'audioCues.chatRequestSent',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.chatRequestSent',\n        announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n        settingsKey: 'accessibility.signals.chatRequestSent',\n    }); }\n    static { this.chatResponseReceived = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n        legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n        sound: {\n            randomOneOf: [\n                Sound.chatResponseReceived1,\n                Sound.chatResponseReceived2,\n                Sound.chatResponseReceived3,\n                Sound.chatResponseReceived4\n            ]\n        },\n        settingsKey: 'accessibility.signals.chatResponseReceived'\n    }); }\n    static { this.progress = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.progress', 'Progress'),\n        sound: Sound.progress,\n        legacySoundSettingsKey: 'audioCues.chatResponsePending',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.progress',\n        announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n        settingsKey: 'accessibility.signals.progress'\n    }); }\n    static { this.clear = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.clear', 'Clear'),\n        sound: Sound.clear,\n        legacySoundSettingsKey: 'audioCues.clear',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.clear',\n        announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n        settingsKey: 'accessibility.signals.clear'\n    }); }\n    static { this.save = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.save', 'Save'),\n        sound: Sound.save,\n        legacySoundSettingsKey: 'audioCues.save',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.save',\n        announcementMessage: localize('accessibility.signals.save', 'Save'),\n        settingsKey: 'accessibility.signals.save'\n    }); }\n    static { this.format = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.format', 'Format'),\n        sound: Sound.format,\n        legacySoundSettingsKey: 'audioCues.format',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.format',\n        announcementMessage: localize('accessibility.signals.format', 'Format'),\n        settingsKey: 'accessibility.signals.format'\n    }); }\n    static { this.voiceRecordingStarted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n        sound: Sound.voiceRecordingStarted,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n        settingsKey: 'accessibility.signals.voiceRecordingStarted'\n    }); }\n    static { this.voiceRecordingStopped = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n        sound: Sound.voiceRecordingStopped,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n        settingsKey: 'accessibility.signals.voiceRecordingStopped'\n    }); }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}