{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n  return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n  return item.submenu !== undefined;\n}\nexport class MenuId {\n  static #_ = this._instances = new Map();\n  static #_2 = this.CommandPalette = new MenuId('CommandPalette');\n  static #_3 = this.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n  static #_4 = this.DebugCallStackContext = new MenuId('DebugCallStackContext');\n  static #_5 = this.DebugConsoleContext = new MenuId('DebugConsoleContext');\n  static #_6 = this.DebugVariablesContext = new MenuId('DebugVariablesContext');\n  static #_7 = this.NotebookVariablesContext = new MenuId('NotebookVariablesContext');\n  static #_8 = this.DebugHoverContext = new MenuId('DebugHoverContext');\n  static #_9 = this.DebugWatchContext = new MenuId('DebugWatchContext');\n  static #_10 = this.DebugToolBar = new MenuId('DebugToolBar');\n  static #_11 = this.DebugToolBarStop = new MenuId('DebugToolBarStop');\n  static #_12 = this.DebugCallStackToolbar = new MenuId('DebugCallStackToolbar');\n  static #_13 = this.DebugCreateConfiguration = new MenuId('DebugCreateConfiguration');\n  static #_14 = this.EditorContext = new MenuId('EditorContext');\n  static #_15 = this.SimpleEditorContext = new MenuId('SimpleEditorContext');\n  static #_16 = this.EditorContent = new MenuId('EditorContent');\n  static #_17 = this.EditorLineNumberContext = new MenuId('EditorLineNumberContext');\n  static #_18 = this.EditorContextCopy = new MenuId('EditorContextCopy');\n  static #_19 = this.EditorContextPeek = new MenuId('EditorContextPeek');\n  static #_20 = this.EditorContextShare = new MenuId('EditorContextShare');\n  static #_21 = this.EditorTitle = new MenuId('EditorTitle');\n  static #_22 = this.EditorTitleRun = new MenuId('EditorTitleRun');\n  static #_23 = this.EditorTitleContext = new MenuId('EditorTitleContext');\n  static #_24 = this.EditorTitleContextShare = new MenuId('EditorTitleContextShare');\n  static #_25 = this.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\n  static #_26 = this.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n  static #_27 = this.EditorTabsBarContext = new MenuId('EditorTabsBarContext');\n  static #_28 = this.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu');\n  static #_29 = this.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu');\n  static #_30 = this.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu');\n  static #_31 = this.ExplorerContext = new MenuId('ExplorerContext');\n  static #_32 = this.ExplorerContextShare = new MenuId('ExplorerContextShare');\n  static #_33 = this.ExtensionContext = new MenuId('ExtensionContext');\n  static #_34 = this.GlobalActivity = new MenuId('GlobalActivity');\n  static #_35 = this.CommandCenter = new MenuId('CommandCenter');\n  static #_36 = this.CommandCenterCenter = new MenuId('CommandCenterCenter');\n  static #_37 = this.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\n  static #_38 = this.LayoutControlMenu = new MenuId('LayoutControlMenu');\n  static #_39 = this.MenubarMainMenu = new MenuId('MenubarMainMenu');\n  static #_40 = this.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n  static #_41 = this.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n  static #_42 = this.MenubarEditMenu = new MenuId('MenubarEditMenu');\n  static #_43 = this.MenubarCopy = new MenuId('MenubarCopy');\n  static #_44 = this.MenubarFileMenu = new MenuId('MenubarFileMenu');\n  static #_45 = this.MenubarGoMenu = new MenuId('MenubarGoMenu');\n  static #_46 = this.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n  static #_47 = this.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n  static #_48 = this.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n  static #_49 = this.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\n  static #_50 = this.PanelPositionMenu = new MenuId('PanelPositionMenu');\n  static #_51 = this.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu');\n  static #_52 = this.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n  static #_53 = this.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n  static #_54 = this.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n  static #_55 = this.MenubarShare = new MenuId('MenubarShare');\n  static #_56 = this.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n  static #_57 = this.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n  static #_58 = this.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n  static #_59 = this.MenubarViewMenu = new MenuId('MenubarViewMenu');\n  static #_60 = this.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n  static #_61 = this.OpenEditorsContext = new MenuId('OpenEditorsContext');\n  static #_62 = this.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\n  static #_63 = this.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n  static #_64 = this.SCMInputBox = new MenuId('SCMInputBox');\n  static #_65 = this.SCMChangesSeparator = new MenuId('SCMChangesSeparator');\n  static #_66 = this.SCMChangesContext = new MenuId('SCMChangesContext');\n  static #_67 = this.SCMIncomingChanges = new MenuId('SCMIncomingChanges');\n  static #_68 = this.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext');\n  static #_69 = this.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting');\n  static #_70 = this.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges');\n  static #_71 = this.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext');\n  static #_72 = this.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting');\n  static #_73 = this.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext');\n  static #_74 = this.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext');\n  static #_75 = this.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext');\n  static #_76 = this.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext');\n  static #_77 = this.SCMChangeContext = new MenuId('SCMChangeContext');\n  static #_78 = this.SCMResourceContext = new MenuId('SCMResourceContext');\n  static #_79 = this.SCMResourceContextShare = new MenuId('SCMResourceContextShare');\n  static #_80 = this.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n  static #_81 = this.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n  static #_82 = this.SCMSourceControl = new MenuId('SCMSourceControl');\n  static #_83 = this.SCMSourceControlInline = new MenuId('SCMSourceControlInline');\n  static #_84 = this.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle');\n  static #_85 = this.SCMHistoryTitle = new MenuId('SCMHistoryTitle');\n  static #_86 = this.SCMTitle = new MenuId('SCMTitle');\n  static #_87 = this.SearchContext = new MenuId('SearchContext');\n  static #_88 = this.SearchActionMenu = new MenuId('SearchActionContext');\n  static #_89 = this.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n  static #_90 = this.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n  static #_91 = this.StickyScrollContext = new MenuId('StickyScrollContext');\n  static #_92 = this.TestItem = new MenuId('TestItem');\n  static #_93 = this.TestItemGutter = new MenuId('TestItemGutter');\n  static #_94 = this.TestProfilesContext = new MenuId('TestProfilesContext');\n  static #_95 = this.TestMessageContext = new MenuId('TestMessageContext');\n  static #_96 = this.TestMessageContent = new MenuId('TestMessageContent');\n  static #_97 = this.TestPeekElement = new MenuId('TestPeekElement');\n  static #_98 = this.TestPeekTitle = new MenuId('TestPeekTitle');\n  static #_99 = this.TestCallStack = new MenuId('TestCallStack');\n  static #_100 = this.TouchBarContext = new MenuId('TouchBarContext');\n  static #_101 = this.TitleBarContext = new MenuId('TitleBarContext');\n  static #_102 = this.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\n  static #_103 = this.TunnelContext = new MenuId('TunnelContext');\n  static #_104 = this.TunnelPrivacy = new MenuId('TunnelPrivacy');\n  static #_105 = this.TunnelProtocol = new MenuId('TunnelProtocol');\n  static #_106 = this.TunnelPortInline = new MenuId('TunnelInline');\n  static #_107 = this.TunnelTitle = new MenuId('TunnelTitle');\n  static #_108 = this.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n  static #_109 = this.TunnelOriginInline = new MenuId('TunnelOriginInline');\n  static #_110 = this.ViewItemContext = new MenuId('ViewItemContext');\n  static #_111 = this.ViewContainerTitle = new MenuId('ViewContainerTitle');\n  static #_112 = this.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n  static #_113 = this.ViewTitle = new MenuId('ViewTitle');\n  static #_114 = this.ViewTitleContext = new MenuId('ViewTitleContext');\n  static #_115 = this.CommentEditorActions = new MenuId('CommentEditorActions');\n  static #_116 = this.CommentThreadTitle = new MenuId('CommentThreadTitle');\n  static #_117 = this.CommentThreadActions = new MenuId('CommentThreadActions');\n  static #_118 = this.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\n  static #_119 = this.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\n  static #_120 = this.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\n  static #_121 = this.CommentTitle = new MenuId('CommentTitle');\n  static #_122 = this.CommentActions = new MenuId('CommentActions');\n  static #_123 = this.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions');\n  static #_124 = this.InteractiveToolbar = new MenuId('InteractiveToolbar');\n  static #_125 = this.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\n  static #_126 = this.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\n  static #_127 = this.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\n  static #_128 = this.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\n  static #_129 = this.InteractiveInputConfig = new MenuId('InteractiveInputConfig');\n  static #_130 = this.ReplInputExecute = new MenuId('ReplInputExecute');\n  static #_131 = this.IssueReporter = new MenuId('IssueReporter');\n  static #_132 = this.NotebookToolbar = new MenuId('NotebookToolbar');\n  static #_133 = this.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\n  static #_134 = this.NotebookCellTitle = new MenuId('NotebookCellTitle');\n  static #_135 = this.NotebookCellDelete = new MenuId('NotebookCellDelete');\n  static #_136 = this.NotebookCellInsert = new MenuId('NotebookCellInsert');\n  static #_137 = this.NotebookCellBetween = new MenuId('NotebookCellBetween');\n  static #_138 = this.NotebookCellListTop = new MenuId('NotebookCellTop');\n  static #_139 = this.NotebookCellExecute = new MenuId('NotebookCellExecute');\n  static #_140 = this.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo');\n  static #_141 = this.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\n  static #_142 = this.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n  static #_143 = this.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n  static #_144 = this.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n  static #_145 = this.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\n  static #_146 = this.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter');\n  static #_147 = this.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu');\n  static #_148 = this.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\n  static #_149 = this.NotebookKernelSource = new MenuId('NotebookKernelSource');\n  static #_150 = this.BulkEditTitle = new MenuId('BulkEditTitle');\n  static #_151 = this.BulkEditContext = new MenuId('BulkEditContext');\n  static #_152 = this.TimelineItemContext = new MenuId('TimelineItemContext');\n  static #_153 = this.TimelineTitle = new MenuId('TimelineTitle');\n  static #_154 = this.TimelineTitleContext = new MenuId('TimelineTitleContext');\n  static #_155 = this.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\n  static #_156 = this.AccountsContext = new MenuId('AccountsContext');\n  static #_157 = this.SidebarTitle = new MenuId('SidebarTitle');\n  static #_158 = this.PanelTitle = new MenuId('PanelTitle');\n  static #_159 = this.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\n  static #_160 = this.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader');\n  static #_161 = this.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\n  static #_162 = this.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\n  static #_163 = this.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\n  static #_164 = this.TerminalTabContext = new MenuId('TerminalTabContext');\n  static #_165 = this.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\n  static #_166 = this.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext');\n  static #_167 = this.WebviewContext = new MenuId('WebviewContext');\n  static #_168 = this.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\n  static #_169 = this.InlineEditsActions = new MenuId('InlineEditsActions');\n  static #_170 = this.InlineEditActions = new MenuId('InlineEditActions');\n  static #_171 = this.NewFile = new MenuId('NewFile');\n  static #_172 = this.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\n  static #_173 = this.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\n  static #_174 = this.MergeBaseToolbar = new MenuId('MergeBaseToolbar');\n  static #_175 = this.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\n  static #_176 = this.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\n  static #_177 = this.InlineEditToolbar = new MenuId('InlineEditToolbar');\n  static #_178 = this.ChatContext = new MenuId('ChatContext');\n  static #_179 = this.ChatCodeBlock = new MenuId('ChatCodeblock');\n  static #_180 = this.ChatCompareBlock = new MenuId('ChatCompareBlock');\n  static #_181 = this.ChatMessageTitle = new MenuId('ChatMessageTitle');\n  static #_182 = this.ChatExecute = new MenuId('ChatExecute');\n  static #_183 = this.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary');\n  static #_184 = this.ChatInputSide = new MenuId('ChatInputSide');\n  static #_185 = this.AccessibleView = new MenuId('AccessibleView');\n  static #_186 = this.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar');\n  static #_187 = this.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar');\n  static #_188 = this.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar');\n  /**\n   * Create a new `MenuId` with the unique identifier. Will throw if a menu\n   * with the identifier already exists, use `MenuId.for(ident)` or a unique\n   * identifier\n   */\n  constructor(identifier) {\n    if (MenuId._instances.has(identifier)) {\n      throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n    }\n    MenuId._instances.set(identifier, this);\n    this.id = identifier;\n  }\n}\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n  static #_ = this._all = new Map();\n  static for(id) {\n    let value = this._all.get(id);\n    if (!value) {\n      value = new MenuRegistryChangeEvent(id);\n      this._all.set(id, value);\n    }\n    return value;\n  }\n  static merge(events) {\n    const ids = new Set();\n    for (const item of events) {\n      if (item instanceof MenuRegistryChangeEvent) {\n        ids.add(item.id);\n      }\n    }\n    return ids;\n  }\n  constructor(id) {\n    this.id = id;\n    this.has = candidate => candidate === id;\n  }\n}\nexport const MenuRegistry = new class {\n  constructor() {\n    this._commands = new Map();\n    this._menuItems = new Map();\n    this._onDidChangeMenu = new MicrotaskEmitter({\n      merge: MenuRegistryChangeEvent.merge\n    });\n    this.onDidChangeMenu = this._onDidChangeMenu.event;\n  }\n  addCommand(command) {\n    this._commands.set(command.id, command);\n    this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n    return toDisposable(() => {\n      if (this._commands.delete(command.id)) {\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n      }\n    });\n  }\n  getCommand(id) {\n    return this._commands.get(id);\n  }\n  getCommands() {\n    const map = new Map();\n    this._commands.forEach((value, key) => map.set(key, value));\n    return map;\n  }\n  appendMenuItem(id, item) {\n    let list = this._menuItems.get(id);\n    if (!list) {\n      list = new LinkedList();\n      this._menuItems.set(id, list);\n    }\n    const rm = list.push(item);\n    this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n    return toDisposable(() => {\n      rm();\n      this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n    });\n  }\n  appendMenuItems(items) {\n    const result = new DisposableStore();\n    for (const {\n      id,\n      item\n    } of items) {\n      result.add(this.appendMenuItem(id, item));\n    }\n    return result;\n  }\n  getMenuItems(id) {\n    let result;\n    if (this._menuItems.has(id)) {\n      result = [...this._menuItems.get(id)];\n    } else {\n      result = [];\n    }\n    if (id === MenuId.CommandPalette) {\n      // CommandPalette is special because it shows\n      // all commands by default\n      this._appendImplicitItems(result);\n    }\n    return result;\n  }\n  _appendImplicitItems(result) {\n    const set = new Set();\n    for (const item of result) {\n      if (isIMenuItem(item)) {\n        set.add(item.command.id);\n        if (item.alt) {\n          set.add(item.alt.id);\n        }\n      }\n    }\n    this._commands.forEach((command, id) => {\n      if (!set.has(id)) {\n        result.push({\n          command\n        });\n      }\n    });\n  }\n}();\nexport class SubmenuItemAction extends SubmenuAction {\n  constructor(item, hideActions, actions) {\n    super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n    this.item = item;\n    this.hideActions = hideActions;\n  }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n  static label(action, options) {\n    return options?.renderShortTitle && action.shortTitle ? typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value : typeof action.title === 'string' ? action.title : action.title.value;\n  }\n  constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n    this.hideActions = hideActions;\n    this.menuKeybinding = menuKeybinding;\n    this._commandService = _commandService;\n    this.id = item.id;\n    this.label = MenuItemAction_1.label(item, options);\n    this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n    this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n    this.checked = undefined;\n    let icon;\n    if (item.toggled) {\n      const toggled = item.toggled.condition ? item.toggled : {\n        condition: item.toggled\n      };\n      this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n      if (this.checked && toggled.tooltip) {\n        this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n      }\n      if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n        icon = toggled.icon;\n      }\n      if (this.checked && toggled.title) {\n        this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n      }\n    }\n    if (!icon) {\n      icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n    }\n    this.item = item;\n    this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n    this._options = options;\n    this.class = icon && ThemeIcon.asClassName(icon);\n  }\n  run(...args) {\n    let runArgs = [];\n    if (this._options?.arg) {\n      runArgs = [...runArgs, this._options.arg];\n    }\n    if (this._options?.shouldForwardArgs) {\n      runArgs = [...runArgs, ...args];\n    }\n    return this._commandService.executeCommand(this.id, ...runArgs);\n  }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([__param(5, IContextKeyService), __param(6, ICommandService)], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n  constructor(desc) {\n    this.desc = desc;\n  }\n}\nexport function registerAction2(ctor) {\n  const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n  const action = new ctor();\n  const {\n    f1,\n    menu,\n    keybinding,\n    ...command\n  } = action.desc;\n  if (CommandsRegistry.getCommand(command.id)) {\n    throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n  }\n  // command\n  disposables.push(CommandsRegistry.registerCommand({\n    id: command.id,\n    handler: (accessor, ...args) => action.run(accessor, ...args),\n    metadata: command.metadata\n  }));\n  // menu\n  if (Array.isArray(menu)) {\n    for (const item of menu) {\n      disposables.push(MenuRegistry.appendMenuItem(item.id, {\n        command: {\n          ...command,\n          precondition: item.precondition === null ? undefined : command.precondition\n        },\n        ...item\n      }));\n    }\n  } else if (menu) {\n    disposables.push(MenuRegistry.appendMenuItem(menu.id, {\n      command: {\n        ...command,\n        precondition: menu.precondition === null ? undefined : command.precondition\n      },\n      ...menu\n    }));\n  }\n  if (f1) {\n    disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n      command,\n      when: command.precondition\n    }));\n    disposables.push(MenuRegistry.addCommand(command));\n  }\n  // keybinding\n  if (Array.isArray(keybinding)) {\n    for (const item of keybinding) {\n      disposables.push(KeybindingsRegistry.registerKeybindingRule({\n        ...item,\n        id: command.id,\n        when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n      }));\n    }\n  } else if (keybinding) {\n    disposables.push(KeybindingsRegistry.registerKeybindingRule({\n      ...keybinding,\n      id: command.id,\n      when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n    }));\n  }\n  return {\n    dispose() {\n      dispose(disposables);\n    }\n  };\n}\n//#endregion","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","MenuItemAction_1","SubmenuAction","ThemeIcon","MicrotaskEmitter","DisposableStore","dispose","toDisposable","LinkedList","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","createDecorator","KeybindingsRegistry","isIMenuItem","item","command","undefined","isISubmenuItem","submenu","MenuId","_","_instances","Map","_2","CommandPalette","_3","DebugBreakpointsContext","_4","DebugCallStackContext","_5","DebugConsoleContext","_6","DebugVariablesContext","_7","NotebookVariablesContext","_8","DebugHoverContext","_9","DebugWatchContext","_10","DebugToolBar","_11","DebugToolBarStop","_12","DebugCallStackToolbar","_13","DebugCreateConfiguration","_14","EditorContext","_15","SimpleEditorContext","_16","EditorContent","_17","EditorLineNumberContext","_18","EditorContextCopy","_19","EditorContextPeek","_20","EditorContextShare","_21","EditorTitle","_22","EditorTitleRun","_23","EditorTitleContext","_24","EditorTitleContextShare","_25","EmptyEditorGroup","_26","EmptyEditorGroupContext","_27","EditorTabsBarContext","_28","EditorTabsBarShowTabsSubmenu","_29","EditorTabsBarShowTabsZenModeSubmenu","_30","EditorActionsPositionSubmenu","_31","ExplorerContext","_32","ExplorerContextShare","_33","ExtensionContext","_34","GlobalActivity","_35","CommandCenter","_36","CommandCenterCenter","_37","LayoutControlMenuSubmenu","_38","LayoutControlMenu","_39","MenubarMainMenu","_40","MenubarAppearanceMenu","_41","MenubarDebugMenu","_42","MenubarEditMenu","_43","MenubarCopy","_44","MenubarFileMenu","_45","MenubarGoMenu","_46","MenubarHelpMenu","_47","MenubarLayoutMenu","_48","MenubarNewBreakpointMenu","_49","PanelAlignmentMenu","_50","PanelPositionMenu","_51","ActivityBarPositionMenu","_52","MenubarPreferencesMenu","_53","MenubarRecentMenu","_54","MenubarSelectionMenu","_55","MenubarShare","_56","MenubarSwitchEditorMenu","_57","MenubarSwitchGroupMenu","_58","MenubarTerminalMenu","_59","MenubarViewMenu","_60","MenubarHomeMenu","_61","OpenEditorsContext","_62","OpenEditorsContextShare","_63","ProblemsPanelContext","_64","SCMInputBox","_65","SCMChangesSeparator","_66","SCMChangesContext","_67","SCMIncomingChanges","_68","SCMIncomingChangesContext","_69","SCMIncomingChangesSetting","_70","SCMOutgoingChanges","_71","SCMOutgoingChangesContext","_72","SCMOutgoingChangesSetting","_73","SCMIncomingChangesAllChangesContext","_74","SCMIncomingChangesHistoryItemContext","_75","SCMOutgoingChangesAllChangesContext","_76","SCMOutgoingChangesHistoryItemContext","_77","SCMChangeContext","_78","SCMResourceContext","_79","SCMResourceContextShare","_80","SCMResourceFolderContext","_81","SCMResourceGroupContext","_82","SCMSourceControl","_83","SCMSourceControlInline","_84","SCMSourceControlTitle","_85","SCMHistoryTitle","_86","SCMTitle","_87","SearchContext","_88","SearchActionMenu","_89","StatusBarWindowIndicatorMenu","_90","StatusBarRemoteIndicatorMenu","_91","StickyScrollContext","_92","TestItem","_93","TestItemGutter","_94","TestProfilesContext","_95","TestMessageContext","_96","TestMessageContent","_97","TestPeekElement","_98","TestPeekTitle","_99","TestCallStack","_100","TouchBarContext","_101","TitleBarContext","_102","TitleBarTitleContext","_103","TunnelContext","_104","TunnelPrivacy","_105","TunnelProtocol","_106","TunnelPortInline","_107","TunnelTitle","_108","TunnelLocalAddressInline","_109","TunnelOriginInline","_110","ViewItemContext","_111","ViewContainerTitle","_112","ViewContainerTitleContext","_113","ViewTitle","_114","ViewTitleContext","_115","CommentEditorActions","_116","CommentThreadTitle","_117","CommentThreadActions","_118","CommentThreadAdditionalActions","_119","CommentThreadTitleContext","_120","CommentThreadCommentContext","_121","CommentTitle","_122","CommentActions","_123","CommentsViewThreadActions","_124","InteractiveToolbar","_125","InteractiveCellTitle","_126","InteractiveCellDelete","_127","InteractiveCellExecute","_128","InteractiveInputExecute","_129","InteractiveInputConfig","_130","ReplInputExecute","_131","IssueReporter","_132","NotebookToolbar","_133","NotebookStickyScrollContext","_134","NotebookCellTitle","_135","NotebookCellDelete","_136","NotebookCellInsert","_137","NotebookCellBetween","_138","NotebookCellListTop","_139","NotebookCellExecute","_140","NotebookCellExecuteGoTo","_141","NotebookCellExecutePrimary","_142","NotebookDiffCellInputTitle","_143","NotebookDiffCellMetadataTitle","_144","NotebookDiffCellOutputsTitle","_145","NotebookOutputToolbar","_146","NotebookOutlineFilter","_147","NotebookOutlineActionMenu","_148","NotebookEditorLayoutConfigure","_149","NotebookKernelSource","_150","BulkEditTitle","_151","BulkEditContext","_152","TimelineItemContext","_153","TimelineTitle","_154","TimelineTitleContext","_155","TimelineFilterSubMenu","_156","AccountsContext","_157","SidebarTitle","_158","PanelTitle","_159","AuxiliaryBarTitle","_160","AuxiliaryBarHeader","_161","TerminalInstanceContext","_162","TerminalEditorInstanceContext","_163","TerminalNewDropdownContext","_164","TerminalTabContext","_165","TerminalTabEmptyAreaContext","_166","TerminalStickyScrollContext","_167","WebviewContext","_168","InlineCompletionsActions","_169","InlineEditsActions","_170","InlineEditActions","_171","NewFile","_172","MergeInput1Toolbar","_173","MergeInput2Toolbar","_174","MergeBaseToolbar","_175","MergeInputResultToolbar","_176","InlineSuggestionToolbar","_177","InlineEditToolbar","_178","ChatContext","_179","ChatCodeBlock","_180","ChatCompareBlock","_181","ChatMessageTitle","_182","ChatExecute","_183","ChatExecuteSecondary","_184","ChatInputSide","_185","AccessibleView","_186","MultiDiffEditorFileToolbar","_187","DiffEditorHunkToolbar","_188","DiffEditorSelectionToolbar","constructor","identifier","has","TypeError","set","id","IMenuService","MenuRegistryChangeEvent","_all","for","value","get","merge","events","ids","Set","add","candidate","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","onDidChangeMenu","event","addCommand","fire","delete","getCommand","getCommands","map","forEach","appendMenuItem","list","rm","push","appendMenuItems","items","result","getMenuItems","_appendImplicitItems","alt","SubmenuItemAction","hideActions","actions","title","MenuItemAction","label","action","options","renderShortTitle","shortTitle","menuKeybinding","contextKeyService","_commandService","tooltip","enabled","precondition","contextMatchesRules","checked","icon","toggled","condition","isThemeIcon","_options","class","asClassName","run","args","runArgs","arg","shouldForwardArgs","executeCommand","Action2","registerAction2","ctor","disposables","f1","menu","keybinding","Error","registerCommand","handler","accessor","metadata","Array","isArray","when","registerKeybindingRule","and"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    static { this._instances = new Map(); }\n    static { this.CommandPalette = new MenuId('CommandPalette'); }\n    static { this.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext'); }\n    static { this.DebugCallStackContext = new MenuId('DebugCallStackContext'); }\n    static { this.DebugConsoleContext = new MenuId('DebugConsoleContext'); }\n    static { this.DebugVariablesContext = new MenuId('DebugVariablesContext'); }\n    static { this.NotebookVariablesContext = new MenuId('NotebookVariablesContext'); }\n    static { this.DebugHoverContext = new MenuId('DebugHoverContext'); }\n    static { this.DebugWatchContext = new MenuId('DebugWatchContext'); }\n    static { this.DebugToolBar = new MenuId('DebugToolBar'); }\n    static { this.DebugToolBarStop = new MenuId('DebugToolBarStop'); }\n    static { this.DebugCallStackToolbar = new MenuId('DebugCallStackToolbar'); }\n    static { this.DebugCreateConfiguration = new MenuId('DebugCreateConfiguration'); }\n    static { this.EditorContext = new MenuId('EditorContext'); }\n    static { this.SimpleEditorContext = new MenuId('SimpleEditorContext'); }\n    static { this.EditorContent = new MenuId('EditorContent'); }\n    static { this.EditorLineNumberContext = new MenuId('EditorLineNumberContext'); }\n    static { this.EditorContextCopy = new MenuId('EditorContextCopy'); }\n    static { this.EditorContextPeek = new MenuId('EditorContextPeek'); }\n    static { this.EditorContextShare = new MenuId('EditorContextShare'); }\n    static { this.EditorTitle = new MenuId('EditorTitle'); }\n    static { this.EditorTitleRun = new MenuId('EditorTitleRun'); }\n    static { this.EditorTitleContext = new MenuId('EditorTitleContext'); }\n    static { this.EditorTitleContextShare = new MenuId('EditorTitleContextShare'); }\n    static { this.EmptyEditorGroup = new MenuId('EmptyEditorGroup'); }\n    static { this.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext'); }\n    static { this.EditorTabsBarContext = new MenuId('EditorTabsBarContext'); }\n    static { this.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu'); }\n    static { this.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu'); }\n    static { this.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu'); }\n    static { this.ExplorerContext = new MenuId('ExplorerContext'); }\n    static { this.ExplorerContextShare = new MenuId('ExplorerContextShare'); }\n    static { this.ExtensionContext = new MenuId('ExtensionContext'); }\n    static { this.GlobalActivity = new MenuId('GlobalActivity'); }\n    static { this.CommandCenter = new MenuId('CommandCenter'); }\n    static { this.CommandCenterCenter = new MenuId('CommandCenterCenter'); }\n    static { this.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu'); }\n    static { this.LayoutControlMenu = new MenuId('LayoutControlMenu'); }\n    static { this.MenubarMainMenu = new MenuId('MenubarMainMenu'); }\n    static { this.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu'); }\n    static { this.MenubarDebugMenu = new MenuId('MenubarDebugMenu'); }\n    static { this.MenubarEditMenu = new MenuId('MenubarEditMenu'); }\n    static { this.MenubarCopy = new MenuId('MenubarCopy'); }\n    static { this.MenubarFileMenu = new MenuId('MenubarFileMenu'); }\n    static { this.MenubarGoMenu = new MenuId('MenubarGoMenu'); }\n    static { this.MenubarHelpMenu = new MenuId('MenubarHelpMenu'); }\n    static { this.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu'); }\n    static { this.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu'); }\n    static { this.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu'); }\n    static { this.PanelPositionMenu = new MenuId('PanelPositionMenu'); }\n    static { this.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu'); }\n    static { this.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu'); }\n    static { this.MenubarRecentMenu = new MenuId('MenubarRecentMenu'); }\n    static { this.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu'); }\n    static { this.MenubarShare = new MenuId('MenubarShare'); }\n    static { this.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu'); }\n    static { this.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu'); }\n    static { this.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu'); }\n    static { this.MenubarViewMenu = new MenuId('MenubarViewMenu'); }\n    static { this.MenubarHomeMenu = new MenuId('MenubarHomeMenu'); }\n    static { this.OpenEditorsContext = new MenuId('OpenEditorsContext'); }\n    static { this.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare'); }\n    static { this.ProblemsPanelContext = new MenuId('ProblemsPanelContext'); }\n    static { this.SCMInputBox = new MenuId('SCMInputBox'); }\n    static { this.SCMChangesSeparator = new MenuId('SCMChangesSeparator'); }\n    static { this.SCMChangesContext = new MenuId('SCMChangesContext'); }\n    static { this.SCMIncomingChanges = new MenuId('SCMIncomingChanges'); }\n    static { this.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext'); }\n    static { this.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting'); }\n    static { this.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges'); }\n    static { this.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext'); }\n    static { this.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting'); }\n    static { this.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext'); }\n    static { this.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext'); }\n    static { this.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext'); }\n    static { this.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext'); }\n    static { this.SCMChangeContext = new MenuId('SCMChangeContext'); }\n    static { this.SCMResourceContext = new MenuId('SCMResourceContext'); }\n    static { this.SCMResourceContextShare = new MenuId('SCMResourceContextShare'); }\n    static { this.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext'); }\n    static { this.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext'); }\n    static { this.SCMSourceControl = new MenuId('SCMSourceControl'); }\n    static { this.SCMSourceControlInline = new MenuId('SCMSourceControlInline'); }\n    static { this.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle'); }\n    static { this.SCMHistoryTitle = new MenuId('SCMHistoryTitle'); }\n    static { this.SCMTitle = new MenuId('SCMTitle'); }\n    static { this.SearchContext = new MenuId('SearchContext'); }\n    static { this.SearchActionMenu = new MenuId('SearchActionContext'); }\n    static { this.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu'); }\n    static { this.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu'); }\n    static { this.StickyScrollContext = new MenuId('StickyScrollContext'); }\n    static { this.TestItem = new MenuId('TestItem'); }\n    static { this.TestItemGutter = new MenuId('TestItemGutter'); }\n    static { this.TestProfilesContext = new MenuId('TestProfilesContext'); }\n    static { this.TestMessageContext = new MenuId('TestMessageContext'); }\n    static { this.TestMessageContent = new MenuId('TestMessageContent'); }\n    static { this.TestPeekElement = new MenuId('TestPeekElement'); }\n    static { this.TestPeekTitle = new MenuId('TestPeekTitle'); }\n    static { this.TestCallStack = new MenuId('TestCallStack'); }\n    static { this.TouchBarContext = new MenuId('TouchBarContext'); }\n    static { this.TitleBarContext = new MenuId('TitleBarContext'); }\n    static { this.TitleBarTitleContext = new MenuId('TitleBarTitleContext'); }\n    static { this.TunnelContext = new MenuId('TunnelContext'); }\n    static { this.TunnelPrivacy = new MenuId('TunnelPrivacy'); }\n    static { this.TunnelProtocol = new MenuId('TunnelProtocol'); }\n    static { this.TunnelPortInline = new MenuId('TunnelInline'); }\n    static { this.TunnelTitle = new MenuId('TunnelTitle'); }\n    static { this.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline'); }\n    static { this.TunnelOriginInline = new MenuId('TunnelOriginInline'); }\n    static { this.ViewItemContext = new MenuId('ViewItemContext'); }\n    static { this.ViewContainerTitle = new MenuId('ViewContainerTitle'); }\n    static { this.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext'); }\n    static { this.ViewTitle = new MenuId('ViewTitle'); }\n    static { this.ViewTitleContext = new MenuId('ViewTitleContext'); }\n    static { this.CommentEditorActions = new MenuId('CommentEditorActions'); }\n    static { this.CommentThreadTitle = new MenuId('CommentThreadTitle'); }\n    static { this.CommentThreadActions = new MenuId('CommentThreadActions'); }\n    static { this.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions'); }\n    static { this.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext'); }\n    static { this.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext'); }\n    static { this.CommentTitle = new MenuId('CommentTitle'); }\n    static { this.CommentActions = new MenuId('CommentActions'); }\n    static { this.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions'); }\n    static { this.InteractiveToolbar = new MenuId('InteractiveToolbar'); }\n    static { this.InteractiveCellTitle = new MenuId('InteractiveCellTitle'); }\n    static { this.InteractiveCellDelete = new MenuId('InteractiveCellDelete'); }\n    static { this.InteractiveCellExecute = new MenuId('InteractiveCellExecute'); }\n    static { this.InteractiveInputExecute = new MenuId('InteractiveInputExecute'); }\n    static { this.InteractiveInputConfig = new MenuId('InteractiveInputConfig'); }\n    static { this.ReplInputExecute = new MenuId('ReplInputExecute'); }\n    static { this.IssueReporter = new MenuId('IssueReporter'); }\n    static { this.NotebookToolbar = new MenuId('NotebookToolbar'); }\n    static { this.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext'); }\n    static { this.NotebookCellTitle = new MenuId('NotebookCellTitle'); }\n    static { this.NotebookCellDelete = new MenuId('NotebookCellDelete'); }\n    static { this.NotebookCellInsert = new MenuId('NotebookCellInsert'); }\n    static { this.NotebookCellBetween = new MenuId('NotebookCellBetween'); }\n    static { this.NotebookCellListTop = new MenuId('NotebookCellTop'); }\n    static { this.NotebookCellExecute = new MenuId('NotebookCellExecute'); }\n    static { this.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo'); }\n    static { this.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary'); }\n    static { this.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle'); }\n    static { this.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle'); }\n    static { this.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle'); }\n    static { this.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar'); }\n    static { this.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter'); }\n    static { this.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu'); }\n    static { this.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure'); }\n    static { this.NotebookKernelSource = new MenuId('NotebookKernelSource'); }\n    static { this.BulkEditTitle = new MenuId('BulkEditTitle'); }\n    static { this.BulkEditContext = new MenuId('BulkEditContext'); }\n    static { this.TimelineItemContext = new MenuId('TimelineItemContext'); }\n    static { this.TimelineTitle = new MenuId('TimelineTitle'); }\n    static { this.TimelineTitleContext = new MenuId('TimelineTitleContext'); }\n    static { this.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu'); }\n    static { this.AccountsContext = new MenuId('AccountsContext'); }\n    static { this.SidebarTitle = new MenuId('SidebarTitle'); }\n    static { this.PanelTitle = new MenuId('PanelTitle'); }\n    static { this.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle'); }\n    static { this.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader'); }\n    static { this.TerminalInstanceContext = new MenuId('TerminalInstanceContext'); }\n    static { this.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext'); }\n    static { this.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext'); }\n    static { this.TerminalTabContext = new MenuId('TerminalTabContext'); }\n    static { this.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext'); }\n    static { this.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext'); }\n    static { this.WebviewContext = new MenuId('WebviewContext'); }\n    static { this.InlineCompletionsActions = new MenuId('InlineCompletionsActions'); }\n    static { this.InlineEditsActions = new MenuId('InlineEditsActions'); }\n    static { this.InlineEditActions = new MenuId('InlineEditActions'); }\n    static { this.NewFile = new MenuId('NewFile'); }\n    static { this.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar'); }\n    static { this.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar'); }\n    static { this.MergeBaseToolbar = new MenuId('MergeBaseToolbar'); }\n    static { this.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar'); }\n    static { this.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar'); }\n    static { this.InlineEditToolbar = new MenuId('InlineEditToolbar'); }\n    static { this.ChatContext = new MenuId('ChatContext'); }\n    static { this.ChatCodeBlock = new MenuId('ChatCodeblock'); }\n    static { this.ChatCompareBlock = new MenuId('ChatCompareBlock'); }\n    static { this.ChatMessageTitle = new MenuId('ChatMessageTitle'); }\n    static { this.ChatExecute = new MenuId('ChatExecute'); }\n    static { this.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary'); }\n    static { this.ChatInputSide = new MenuId('ChatInputSide'); }\n    static { this.AccessibleView = new MenuId('AccessibleView'); }\n    static { this.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar'); }\n    static { this.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar'); }\n    static { this.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar'); }\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static { this._all = new Map(); }\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return options?.renderShortTitle && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n        this.hideActions = hideActions;\n        this.menuKeybinding = menuKeybinding;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        let runArgs = [];\n        if (this._options?.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if (this._options?.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n    const action = new ctor();\n    const { f1, menu, keybinding, ...command } = action.desc;\n    if (CommandsRegistry.getCommand(command.id)) {\n        throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n    }\n    // command\n    disposables.push(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        metadata: command.metadata,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n        }\n    }\n    else if (menu) {\n        disposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n    }\n    if (f1) {\n        disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.push(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.push(KeybindingsRegistry.registerKeybindingRule({\n                ...item,\n                id: command.id,\n                when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n            }));\n        }\n    }\n    else if (keybinding) {\n        disposables.push(KeybindingsRegistry.registerKeybindingRule({\n            ...keybinding,\n            id: command.id,\n            when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n        }));\n    }\n    return {\n        dispose() {\n            dispose(disposables);\n        }\n    };\n}\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}