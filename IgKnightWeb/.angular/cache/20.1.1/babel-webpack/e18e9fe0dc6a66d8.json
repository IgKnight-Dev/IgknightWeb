{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar StickyScrollController_1;\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { StickyScrollWidget, StickyScrollWidgetState } from './stickyScrollWidget.js';\nimport { StickyLineCandidateProvider } from './stickyScrollProvider.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getDefinitionsAtPosition } from '../../gotoSymbol/browser/goToSymbol.js';\nimport { goToDefinitionWithLocation } from '../../inlayHints/browser/inlayHintsLocations.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StickyRange } from './stickyScrollElement.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { FoldingController } from '../../folding/browser/folding.js';\nimport { toggleCollapseState } from '../../folding/browser/foldingModel.js';\nlet StickyScrollController = /*#__PURE__*/(() => {\n  let StickyScrollController = class StickyScrollController extends Disposable {\n    static #_ = StickyScrollController_1 = this;\n    static #_2 = this.ID = 'store.contrib.stickyScrollController';\n    constructor(_editor, _contextMenuService, _languageFeaturesService, _instaService, _languageConfigurationService, _languageFeatureDebounceService, _contextKeyService) {\n      var _this;\n      super();\n      _this = this;\n      this._editor = _editor;\n      this._contextMenuService = _contextMenuService;\n      this._languageFeaturesService = _languageFeaturesService;\n      this._instaService = _instaService;\n      this._contextKeyService = _contextKeyService;\n      this._sessionStore = new DisposableStore();\n      this._maxStickyLines = Number.MAX_SAFE_INTEGER;\n      this._candidateDefinitionsLength = -1;\n      this._focusedStickyElementIndex = -1;\n      this._enabled = false;\n      this._focused = false;\n      this._positionRevealed = false;\n      this._onMouseDown = false;\n      this._endLineNumbers = [];\n      this._stickyScrollWidget = new StickyScrollWidget(this._editor);\n      this._stickyLineCandidateProvider = new StickyLineCandidateProvider(this._editor, _languageFeaturesService, _languageConfigurationService);\n      this._register(this._stickyScrollWidget);\n      this._register(this._stickyLineCandidateProvider);\n      this._widgetState = StickyScrollWidgetState.Empty;\n      this._onDidResize();\n      this._readConfiguration();\n      const stickyScrollDomNode = this._stickyScrollWidget.getDomNode();\n      this._register(this._editor.onDidChangeConfiguration(e => {\n        this._readConfigurationChange(e);\n      }));\n      this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.CONTEXT_MENU, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (event) {\n          _this._onContextMenu(dom.getWindow(stickyScrollDomNode), event);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n      this._stickyScrollFocusedContextKey = EditorContextKeys.stickyScrollFocused.bindTo(this._contextKeyService);\n      this._stickyScrollVisibleContextKey = EditorContextKeys.stickyScrollVisible.bindTo(this._contextKeyService);\n      const focusTracker = this._register(dom.trackFocus(stickyScrollDomNode));\n      this._register(focusTracker.onDidBlur(_ => {\n        // Suppose that the blurring is caused by scrolling, then keep the focus on the sticky scroll\n        // This is determined by the fact that the height of the widget has become zero and there has been no position revealing\n        if (this._positionRevealed === false && stickyScrollDomNode.clientHeight === 0) {\n          this._focusedStickyElementIndex = -1;\n          this.focus();\n        }\n        // In all other casees, dispose the focus on the sticky scroll\n        else {\n          this._disposeFocusStickyScrollStore();\n        }\n      }));\n      this._register(focusTracker.onDidFocus(_ => {\n        this.focus();\n      }));\n      this._registerMouseListeners();\n      // Suppose that mouse down on the sticky scroll, then do not focus on the sticky scroll because this will be followed by the revealing of a position\n      this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.MOUSE_DOWN, e => {\n        this._onMouseDown = true;\n      }));\n    }\n    static get(editor) {\n      return editor.getContribution(StickyScrollController_1.ID);\n    }\n    _disposeFocusStickyScrollStore() {\n      this._stickyScrollFocusedContextKey.set(false);\n      this._focusDisposableStore?.dispose();\n      this._focused = false;\n      this._positionRevealed = false;\n      this._onMouseDown = false;\n    }\n    focus() {\n      // If the mouse is down, do not focus on the sticky scroll\n      if (this._onMouseDown) {\n        this._onMouseDown = false;\n        this._editor.focus();\n        return;\n      }\n      const focusState = this._stickyScrollFocusedContextKey.get();\n      if (focusState === true) {\n        return;\n      }\n      this._focused = true;\n      this._focusDisposableStore = new DisposableStore();\n      this._stickyScrollFocusedContextKey.set(true);\n      this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumbers.length - 1;\n      this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    focusNext() {\n      if (this._focusedStickyElementIndex < this._stickyScrollWidget.lineNumberCount - 1) {\n        this._focusNav(true);\n      }\n    }\n    focusPrevious() {\n      if (this._focusedStickyElementIndex > 0) {\n        this._focusNav(false);\n      }\n    }\n    selectEditor() {\n      this._editor.focus();\n    }\n    // True is next, false is previous\n    _focusNav(direction) {\n      this._focusedStickyElementIndex = direction ? this._focusedStickyElementIndex + 1 : this._focusedStickyElementIndex - 1;\n      this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    goToFocused() {\n      const lineNumbers = this._stickyScrollWidget.lineNumbers;\n      this._disposeFocusStickyScrollStore();\n      this._revealPosition({\n        lineNumber: lineNumbers[this._focusedStickyElementIndex],\n        column: 1\n      });\n    }\n    _revealPosition(position) {\n      this._reveaInEditor(position, () => this._editor.revealPosition(position));\n    }\n    _revealLineInCenterIfOutsideViewport(position) {\n      this._reveaInEditor(position, () => this._editor.revealLineInCenterIfOutsideViewport(position.lineNumber, 0 /* ScrollType.Smooth */));\n    }\n    _reveaInEditor(position, revealFunction) {\n      if (this._focused) {\n        this._disposeFocusStickyScrollStore();\n      }\n      this._positionRevealed = true;\n      revealFunction();\n      this._editor.setSelection(Range.fromPositions(position));\n      this._editor.focus();\n    }\n    _registerMouseListeners() {\n      var _this2 = this;\n      const sessionStore = this._register(new DisposableStore());\n      const gesture = this._register(new ClickLinkGesture(this._editor, {\n        extractLineNumberFromMouseEvent: e => {\n          const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n          return position ? position.lineNumber : 0;\n        }\n      }));\n      const getMouseEventTarget = mouseEvent => {\n        if (!this._editor.hasModel()) {\n          return null;\n        }\n        if (mouseEvent.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || mouseEvent.target.detail !== this._stickyScrollWidget.getId()) {\n          // not hovering over our widget\n          return null;\n        }\n        const mouseTargetElement = mouseEvent.target.element;\n        if (!mouseTargetElement || mouseTargetElement.innerText !== mouseTargetElement.innerHTML) {\n          // not on a span element rendering text\n          return null;\n        }\n        const position = this._stickyScrollWidget.getEditorPositionFromNode(mouseTargetElement);\n        if (!position) {\n          // not hovering a sticky scroll line\n          return null;\n        }\n        return {\n          range: new Range(position.lineNumber, position.column, position.lineNumber, position.column + mouseTargetElement.innerText.length),\n          textElement: mouseTargetElement\n        };\n      };\n      const stickyScrollWidgetDomNode = this._stickyScrollWidget.getDomNode();\n      this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.CLICK, mouseEvent => {\n        if (mouseEvent.ctrlKey || mouseEvent.altKey || mouseEvent.metaKey) {\n          // modifier pressed\n          return;\n        }\n        if (!mouseEvent.leftButton) {\n          // not left click\n          return;\n        }\n        if (mouseEvent.shiftKey) {\n          // shift click\n          const lineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n          if (lineIndex === null) {\n            return;\n          }\n          const position = new Position(this._endLineNumbers[lineIndex], 1);\n          this._revealLineInCenterIfOutsideViewport(position);\n          return;\n        }\n        const isInFoldingIconDomNode = this._stickyScrollWidget.isInFoldingIconDomNode(mouseEvent.target);\n        if (isInFoldingIconDomNode) {\n          // clicked on folding icon\n          const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n          this._toggleFoldingRegionForLine(lineNumber);\n          return;\n        }\n        const isInStickyLine = this._stickyScrollWidget.isInStickyLine(mouseEvent.target);\n        if (!isInStickyLine) {\n          return;\n        }\n        // normal click\n        let position = this._stickyScrollWidget.getEditorPositionFromNode(mouseEvent.target);\n        if (!position) {\n          const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n          if (lineNumber === null) {\n            // not hovering a sticky scroll line\n            return;\n          }\n          position = new Position(lineNumber, 1);\n        }\n        this._revealPosition(position);\n      }));\n      this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_MOVE, mouseEvent => {\n        if (mouseEvent.shiftKey) {\n          const currentEndForLineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n          if (currentEndForLineIndex === null || this._showEndForLine !== null && this._showEndForLine === currentEndForLineIndex) {\n            return;\n          }\n          this._showEndForLine = currentEndForLineIndex;\n          this._renderStickyScroll();\n          return;\n        }\n        if (this._showEndForLine !== undefined) {\n          this._showEndForLine = undefined;\n          this._renderStickyScroll();\n        }\n      }));\n      this._register(dom.addDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_LEAVE, e => {\n        if (this._showEndForLine !== undefined) {\n          this._showEndForLine = undefined;\n          this._renderStickyScroll();\n        }\n      }));\n      this._register(gesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, _keyboardEvent]) => {\n        const mouseTarget = getMouseEventTarget(mouseEvent);\n        if (!mouseTarget || !mouseEvent.hasTriggerModifier || !this._editor.hasModel()) {\n          sessionStore.clear();\n          return;\n        }\n        const {\n          range,\n          textElement\n        } = mouseTarget;\n        if (!range.equalsRange(this._stickyRangeProjectedOnEditor)) {\n          this._stickyRangeProjectedOnEditor = range;\n          sessionStore.clear();\n        } else if (textElement.style.textDecoration === 'underline') {\n          return;\n        }\n        const cancellationToken = new CancellationTokenSource();\n        sessionStore.add(toDisposable(() => cancellationToken.dispose(true)));\n        let currentHTMLChild;\n        getDefinitionsAtPosition(this._languageFeaturesService.definitionProvider, this._editor.getModel(), new Position(range.startLineNumber, range.startColumn + 1), false, cancellationToken.token).then(candidateDefinitions => {\n          if (cancellationToken.token.isCancellationRequested) {\n            return;\n          }\n          if (candidateDefinitions.length !== 0) {\n            this._candidateDefinitionsLength = candidateDefinitions.length;\n            const childHTML = textElement;\n            if (currentHTMLChild !== childHTML) {\n              sessionStore.clear();\n              currentHTMLChild = childHTML;\n              currentHTMLChild.style.textDecoration = 'underline';\n              sessionStore.add(toDisposable(() => {\n                currentHTMLChild.style.textDecoration = 'none';\n              }));\n            } else if (!currentHTMLChild) {\n              currentHTMLChild = childHTML;\n              currentHTMLChild.style.textDecoration = 'underline';\n              sessionStore.add(toDisposable(() => {\n                currentHTMLChild.style.textDecoration = 'none';\n              }));\n            }\n          } else {\n            sessionStore.clear();\n          }\n        });\n      }));\n      this._register(gesture.onCancel(() => {\n        sessionStore.clear();\n      }));\n      this._register(gesture.onExecute(/*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (e) {\n          if (e.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || e.target.detail !== _this2._stickyScrollWidget.getId()) {\n            // not hovering over our widget\n            return;\n          }\n          const position = _this2._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n          if (!position) {\n            // not hovering a sticky scroll line\n            return;\n          }\n          if (!_this2._editor.hasModel() || !_this2._stickyRangeProjectedOnEditor) {\n            return;\n          }\n          if (_this2._candidateDefinitionsLength > 1) {\n            if (_this2._focused) {\n              _this2._disposeFocusStickyScrollStore();\n            }\n            _this2._revealPosition({\n              lineNumber: position.lineNumber,\n              column: 1\n            });\n          }\n          _this2._instaService.invokeFunction(goToDefinitionWithLocation, e, _this2._editor, {\n            uri: _this2._editor.getModel().uri,\n            range: _this2._stickyRangeProjectedOnEditor\n          });\n        });\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n    }\n    _onContextMenu(targetWindow, e) {\n      const event = new StandardMouseEvent(targetWindow, e);\n      this._contextMenuService.showContextMenu({\n        menuId: MenuId.StickyScrollContext,\n        getAnchor: () => event\n      });\n    }\n    _toggleFoldingRegionForLine(line) {\n      if (!this._foldingModel || line === null) {\n        return;\n      }\n      const stickyLine = this._stickyScrollWidget.getRenderedStickyLine(line);\n      const foldingIcon = stickyLine?.foldingIcon;\n      if (!foldingIcon) {\n        return;\n      }\n      toggleCollapseState(this._foldingModel, Number.MAX_VALUE, [line]);\n      foldingIcon.isCollapsed = !foldingIcon.isCollapsed;\n      const scrollTop = (foldingIcon.isCollapsed ? this._editor.getTopForLineNumber(foldingIcon.foldingEndLine) : this._editor.getTopForLineNumber(foldingIcon.foldingStartLine)) - this._editor.getOption(67 /* EditorOption.lineHeight */) * stickyLine.index + 1;\n      this._editor.setScrollTop(scrollTop);\n      this._renderStickyScroll(line);\n    }\n    _readConfiguration() {\n      const options = this._editor.getOption(116 /* EditorOption.stickyScroll */);\n      if (options.enabled === false) {\n        this._editor.removeOverlayWidget(this._stickyScrollWidget);\n        this._sessionStore.clear();\n        this._enabled = false;\n        return;\n      } else if (options.enabled && !this._enabled) {\n        // When sticky scroll was just enabled, add the listeners on the sticky scroll\n        this._editor.addOverlayWidget(this._stickyScrollWidget);\n        this._sessionStore.add(this._editor.onDidScrollChange(e => {\n          if (e.scrollTopChanged) {\n            this._showEndForLine = undefined;\n            this._renderStickyScroll();\n          }\n        }));\n        this._sessionStore.add(this._editor.onDidLayoutChange(() => this._onDidResize()));\n        this._sessionStore.add(this._editor.onDidChangeModelTokens(e => this._onTokensChange(e)));\n        this._sessionStore.add(this._stickyLineCandidateProvider.onDidChangeStickyScroll(() => {\n          this._showEndForLine = undefined;\n          this._renderStickyScroll();\n        }));\n        this._enabled = true;\n      }\n      const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n      if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n        this._sessionStore.add(this._editor.onDidChangeCursorPosition(() => {\n          this._showEndForLine = undefined;\n          this._renderStickyScroll(0);\n        }));\n      }\n    }\n    _readConfigurationChange(event) {\n      if (event.hasChanged(116 /* EditorOption.stickyScroll */) || event.hasChanged(73 /* EditorOption.minimap */) || event.hasChanged(67 /* EditorOption.lineHeight */) || event.hasChanged(111 /* EditorOption.showFoldingControls */) || event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n        this._readConfiguration();\n      }\n      if (event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n        this._renderStickyScroll(0);\n      }\n    }\n    _needsUpdate(event) {\n      const stickyLineNumbers = this._stickyScrollWidget.getCurrentLines();\n      for (const stickyLineNumber of stickyLineNumbers) {\n        for (const range of event.ranges) {\n          if (stickyLineNumber >= range.fromLineNumber && stickyLineNumber <= range.toLineNumber) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    _onTokensChange(event) {\n      if (this._needsUpdate(event)) {\n        // Rebuilding the whole widget from line 0\n        this._renderStickyScroll(0);\n      }\n    }\n    _onDidResize() {\n      const layoutInfo = this._editor.getLayoutInfo();\n      // Make sure sticky scroll doesn't take up more than 25% of the editor\n      const theoreticalLines = layoutInfo.height / this._editor.getOption(67 /* EditorOption.lineHeight */);\n      this._maxStickyLines = Math.round(theoreticalLines * .25);\n    }\n    _renderStickyScroll(rebuildFromLine) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const model = _this3._editor.getModel();\n        if (!model || model.isTooLargeForTokenization()) {\n          _this3._resetState();\n          return;\n        }\n        const nextRebuildFromLine = _this3._updateAndGetMinRebuildFromLine(rebuildFromLine);\n        const stickyWidgetVersion = _this3._stickyLineCandidateProvider.getVersionId();\n        const shouldUpdateState = stickyWidgetVersion === undefined || stickyWidgetVersion === model.getVersionId();\n        if (shouldUpdateState) {\n          if (!_this3._focused) {\n            yield _this3._updateState(nextRebuildFromLine);\n          } else {\n            // Suppose that previously the sticky scroll widget had height 0, then if there are visible lines, set the last line as focused\n            if (_this3._focusedStickyElementIndex === -1) {\n              yield _this3._updateState(nextRebuildFromLine);\n              _this3._focusedStickyElementIndex = _this3._stickyScrollWidget.lineNumberCount - 1;\n              if (_this3._focusedStickyElementIndex !== -1) {\n                _this3._stickyScrollWidget.focusLineWithIndex(_this3._focusedStickyElementIndex);\n              }\n            } else {\n              const focusedStickyElementLineNumber = _this3._stickyScrollWidget.lineNumbers[_this3._focusedStickyElementIndex];\n              yield _this3._updateState(nextRebuildFromLine);\n              // Suppose that after setting the state, there are no sticky lines, set the focused index to -1\n              if (_this3._stickyScrollWidget.lineNumberCount === 0) {\n                _this3._focusedStickyElementIndex = -1;\n              } else {\n                const previousFocusedLineNumberExists = _this3._stickyScrollWidget.lineNumbers.includes(focusedStickyElementLineNumber);\n                // If the line number is still there, do not change anything\n                // If the line number is not there, set the new focused line to be the last line\n                if (!previousFocusedLineNumberExists) {\n                  _this3._focusedStickyElementIndex = _this3._stickyScrollWidget.lineNumberCount - 1;\n                }\n                _this3._stickyScrollWidget.focusLineWithIndex(_this3._focusedStickyElementIndex);\n              }\n            }\n          }\n        }\n      })();\n    }\n    _updateAndGetMinRebuildFromLine(rebuildFromLine) {\n      if (rebuildFromLine !== undefined) {\n        const minRebuildFromLineOrInfinity = this._minRebuildFromLine !== undefined ? this._minRebuildFromLine : Infinity;\n        this._minRebuildFromLine = Math.min(rebuildFromLine, minRebuildFromLineOrInfinity);\n      }\n      return this._minRebuildFromLine;\n    }\n    _updateState(rebuildFromLine) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        _this4._minRebuildFromLine = undefined;\n        _this4._foldingModel = (yield FoldingController.get(_this4._editor)?.getFoldingModel()) ?? undefined;\n        _this4._widgetState = _this4.findScrollWidgetState();\n        const stickyWidgetHasLines = _this4._widgetState.startLineNumbers.length > 0;\n        _this4._stickyScrollVisibleContextKey.set(stickyWidgetHasLines);\n        _this4._stickyScrollWidget.setState(_this4._widgetState, _this4._foldingModel, rebuildFromLine);\n      })();\n    }\n    _resetState() {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        _this5._minRebuildFromLine = undefined;\n        _this5._foldingModel = undefined;\n        _this5._widgetState = StickyScrollWidgetState.Empty;\n        _this5._stickyScrollVisibleContextKey.set(false);\n        _this5._stickyScrollWidget.setState(undefined, undefined);\n      })();\n    }\n    findScrollWidgetState() {\n      const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n      const maxNumberStickyLines = Math.min(this._maxStickyLines, this._editor.getOption(116 /* EditorOption.stickyScroll */).maxLineCount);\n      const scrollTop = this._editor.getScrollTop();\n      let lastLineRelativePosition = 0;\n      const startLineNumbers = [];\n      const endLineNumbers = [];\n      const arrayVisibleRanges = this._editor.getVisibleRanges();\n      if (arrayVisibleRanges.length !== 0) {\n        const fullVisibleRange = new StickyRange(arrayVisibleRanges[0].startLineNumber, arrayVisibleRanges[arrayVisibleRanges.length - 1].endLineNumber);\n        const candidateRanges = this._stickyLineCandidateProvider.getCandidateStickyLinesIntersecting(fullVisibleRange);\n        for (const range of candidateRanges) {\n          const start = range.startLineNumber;\n          const end = range.endLineNumber;\n          const depth = range.nestingDepth;\n          if (end - start > 0) {\n            const topOfElementAtDepth = (depth - 1) * lineHeight;\n            const bottomOfElementAtDepth = depth * lineHeight;\n            const bottomOfBeginningLine = this._editor.getBottomForLineNumber(start) - scrollTop;\n            const topOfEndLine = this._editor.getTopForLineNumber(end) - scrollTop;\n            const bottomOfEndLine = this._editor.getBottomForLineNumber(end) - scrollTop;\n            if (topOfElementAtDepth > topOfEndLine && topOfElementAtDepth <= bottomOfEndLine) {\n              startLineNumbers.push(start);\n              endLineNumbers.push(end + 1);\n              lastLineRelativePosition = bottomOfEndLine - bottomOfElementAtDepth;\n              break;\n            } else if (bottomOfElementAtDepth > bottomOfBeginningLine && bottomOfElementAtDepth <= bottomOfEndLine) {\n              startLineNumbers.push(start);\n              endLineNumbers.push(end + 1);\n            }\n            if (startLineNumbers.length === maxNumberStickyLines) {\n              break;\n            }\n          }\n        }\n      }\n      this._endLineNumbers = endLineNumbers;\n      return new StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition, this._showEndForLine);\n    }\n    dispose() {\n      super.dispose();\n      this._sessionStore.dispose();\n    }\n  };\n  return StickyScrollController;\n})();\nStickyScrollController = StickyScrollController_1 = __decorate([__param(1, IContextMenuService), __param(2, ILanguageFeaturesService), __param(3, IInstantiationService), __param(4, ILanguageConfigurationService), __param(5, ILanguageFeatureDebounceService), __param(6, IContextKeyService)], StickyScrollController);\nexport { StickyScrollController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","StickyScrollController_1","Disposable","DisposableStore","toDisposable","ILanguageFeaturesService","StickyScrollWidget","StickyScrollWidgetState","StickyLineCandidateProvider","IInstantiationService","IContextMenuService","MenuId","IContextKeyService","EditorContextKeys","ClickLinkGesture","Range","getDefinitionsAtPosition","goToDefinitionWithLocation","Position","CancellationTokenSource","ILanguageConfigurationService","ILanguageFeatureDebounceService","dom","StickyRange","StandardMouseEvent","FoldingController","toggleCollapseState","StickyScrollController","_","_2","ID","constructor","_editor","_contextMenuService","_languageFeaturesService","_instaService","_languageConfigurationService","_languageFeatureDebounceService","_contextKeyService","_this","this","_sessionStore","_maxStickyLines","Number","MAX_SAFE_INTEGER","_candidateDefinitionsLength","_focusedStickyElementIndex","_enabled","_focused","_positionRevealed","_onMouseDown","_endLineNumbers","_stickyScrollWidget","_stickyLineCandidateProvider","_register","_widgetState","Empty","_onDidResize","_readConfiguration","stickyScrollDomNode","getDomNode","onDidChangeConfiguration","e","_readConfigurationChange","addDisposableListener","EventType","CONTEXT_MENU","_ref","_asyncToGenerator","event","_onContextMenu","getWindow","_x","apply","_stickyScrollFocusedContextKey","stickyScrollFocused","bindTo","_stickyScrollVisibleContextKey","stickyScrollVisible","focusTracker","trackFocus","onDidBlur","clientHeight","focus","_disposeFocusStickyScrollStore","onDidFocus","_registerMouseListeners","MOUSE_DOWN","get","editor","getContribution","set","_focusDisposableStore","dispose","focusState","lineNumbers","focusLineWithIndex","focusNext","lineNumberCount","_focusNav","focusPrevious","selectEditor","direction","goToFocused","_revealPosition","lineNumber","column","position","_reveaInEditor","revealPosition","_revealLineInCenterIfOutsideViewport","revealLineInCenterIfOutsideViewport","revealFunction","setSelection","fromPositions","_this2","sessionStore","gesture","extractLineNumberFromMouseEvent","getEditorPositionFromNode","element","getMouseEventTarget","mouseEvent","hasModel","type","detail","getId","mouseTargetElement","innerText","innerHTML","range","textElement","stickyScrollWidgetDomNode","addStandardDisposableListener","CLICK","ctrlKey","altKey","metaKey","leftButton","shiftKey","lineIndex","getLineIndexFromChildDomNode","isInFoldingIconDomNode","getLineNumberFromChildDomNode","_toggleFoldingRegionForLine","isInStickyLine","MOUSE_MOVE","currentEndForLineIndex","_showEndForLine","_renderStickyScroll","undefined","MOUSE_LEAVE","onMouseMoveOrRelevantKeyDown","_keyboardEvent","mouseTarget","hasTriggerModifier","clear","equalsRange","_stickyRangeProjectedOnEditor","style","textDecoration","cancellationToken","add","currentHTMLChild","definitionProvider","getModel","startLineNumber","startColumn","token","then","candidateDefinitions","isCancellationRequested","childHTML","onCancel","onExecute","_ref2","invokeFunction","uri","_x2","targetWindow","showContextMenu","menuId","StickyScrollContext","getAnchor","line","_foldingModel","stickyLine","getRenderedStickyLine","foldingIcon","MAX_VALUE","isCollapsed","scrollTop","getTopForLineNumber","foldingEndLine","foldingStartLine","getOption","index","setScrollTop","options","enabled","removeOverlayWidget","addOverlayWidget","onDidScrollChange","scrollTopChanged","onDidLayoutChange","onDidChangeModelTokens","_onTokensChange","onDidChangeStickyScroll","lineNumberOption","renderType","onDidChangeCursorPosition","hasChanged","_needsUpdate","stickyLineNumbers","getCurrentLines","stickyLineNumber","ranges","fromLineNumber","toLineNumber","layoutInfo","getLayoutInfo","theoreticalLines","height","Math","round","rebuildFromLine","_this3","model","isTooLargeForTokenization","_resetState","nextRebuildFromLine","_updateAndGetMinRebuildFromLine","stickyWidgetVersion","getVersionId","shouldUpdateState","_updateState","focusedStickyElementLineNumber","previousFocusedLineNumberExists","includes","minRebuildFromLineOrInfinity","_minRebuildFromLine","Infinity","min","_this4","getFoldingModel","findScrollWidgetState","stickyWidgetHasLines","startLineNumbers","setState","_this5","lineHeight","maxNumberStickyLines","maxLineCount","getScrollTop","lastLineRelativePosition","endLineNumbers","arrayVisibleRanges","getVisibleRanges","fullVisibleRange","endLineNumber","candidateRanges","getCandidateStickyLinesIntersecting","start","end","depth","nestingDepth","topOfElementAtDepth","bottomOfElementAtDepth","bottomOfBeginningLine","getBottomForLineNumber","topOfEndLine","bottomOfEndLine","push"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar StickyScrollController_1;\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { StickyScrollWidget, StickyScrollWidgetState } from './stickyScrollWidget.js';\nimport { StickyLineCandidateProvider } from './stickyScrollProvider.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getDefinitionsAtPosition } from '../../gotoSymbol/browser/goToSymbol.js';\nimport { goToDefinitionWithLocation } from '../../inlayHints/browser/inlayHintsLocations.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StickyRange } from './stickyScrollElement.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { FoldingController } from '../../folding/browser/folding.js';\nimport { toggleCollapseState } from '../../folding/browser/foldingModel.js';\nlet StickyScrollController = class StickyScrollController extends Disposable {\n    static { StickyScrollController_1 = this; }\n    static { this.ID = 'store.contrib.stickyScrollController'; }\n    constructor(_editor, _contextMenuService, _languageFeaturesService, _instaService, _languageConfigurationService, _languageFeatureDebounceService, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextMenuService = _contextMenuService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._instaService = _instaService;\n        this._contextKeyService = _contextKeyService;\n        this._sessionStore = new DisposableStore();\n        this._maxStickyLines = Number.MAX_SAFE_INTEGER;\n        this._candidateDefinitionsLength = -1;\n        this._focusedStickyElementIndex = -1;\n        this._enabled = false;\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n        this._endLineNumbers = [];\n        this._stickyScrollWidget = new StickyScrollWidget(this._editor);\n        this._stickyLineCandidateProvider = new StickyLineCandidateProvider(this._editor, _languageFeaturesService, _languageConfigurationService);\n        this._register(this._stickyScrollWidget);\n        this._register(this._stickyLineCandidateProvider);\n        this._widgetState = StickyScrollWidgetState.Empty;\n        this._onDidResize();\n        this._readConfiguration();\n        const stickyScrollDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            this._readConfigurationChange(e);\n        }));\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.CONTEXT_MENU, async (event) => {\n            this._onContextMenu(dom.getWindow(stickyScrollDomNode), event);\n        }));\n        this._stickyScrollFocusedContextKey = EditorContextKeys.stickyScrollFocused.bindTo(this._contextKeyService);\n        this._stickyScrollVisibleContextKey = EditorContextKeys.stickyScrollVisible.bindTo(this._contextKeyService);\n        const focusTracker = this._register(dom.trackFocus(stickyScrollDomNode));\n        this._register(focusTracker.onDidBlur(_ => {\n            // Suppose that the blurring is caused by scrolling, then keep the focus on the sticky scroll\n            // This is determined by the fact that the height of the widget has become zero and there has been no position revealing\n            if (this._positionRevealed === false && stickyScrollDomNode.clientHeight === 0) {\n                this._focusedStickyElementIndex = -1;\n                this.focus();\n            }\n            // In all other casees, dispose the focus on the sticky scroll\n            else {\n                this._disposeFocusStickyScrollStore();\n            }\n        }));\n        this._register(focusTracker.onDidFocus(_ => {\n            this.focus();\n        }));\n        this._registerMouseListeners();\n        // Suppose that mouse down on the sticky scroll, then do not focus on the sticky scroll because this will be followed by the revealing of a position\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.MOUSE_DOWN, (e) => {\n            this._onMouseDown = true;\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(StickyScrollController_1.ID);\n    }\n    _disposeFocusStickyScrollStore() {\n        this._stickyScrollFocusedContextKey.set(false);\n        this._focusDisposableStore?.dispose();\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n    }\n    focus() {\n        // If the mouse is down, do not focus on the sticky scroll\n        if (this._onMouseDown) {\n            this._onMouseDown = false;\n            this._editor.focus();\n            return;\n        }\n        const focusState = this._stickyScrollFocusedContextKey.get();\n        if (focusState === true) {\n            return;\n        }\n        this._focused = true;\n        this._focusDisposableStore = new DisposableStore();\n        this._stickyScrollFocusedContextKey.set(true);\n        this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumbers.length - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    focusNext() {\n        if (this._focusedStickyElementIndex < this._stickyScrollWidget.lineNumberCount - 1) {\n            this._focusNav(true);\n        }\n    }\n    focusPrevious() {\n        if (this._focusedStickyElementIndex > 0) {\n            this._focusNav(false);\n        }\n    }\n    selectEditor() {\n        this._editor.focus();\n    }\n    // True is next, false is previous\n    _focusNav(direction) {\n        this._focusedStickyElementIndex = direction ? this._focusedStickyElementIndex + 1 : this._focusedStickyElementIndex - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    goToFocused() {\n        const lineNumbers = this._stickyScrollWidget.lineNumbers;\n        this._disposeFocusStickyScrollStore();\n        this._revealPosition({ lineNumber: lineNumbers[this._focusedStickyElementIndex], column: 1 });\n    }\n    _revealPosition(position) {\n        this._reveaInEditor(position, () => this._editor.revealPosition(position));\n    }\n    _revealLineInCenterIfOutsideViewport(position) {\n        this._reveaInEditor(position, () => this._editor.revealLineInCenterIfOutsideViewport(position.lineNumber, 0 /* ScrollType.Smooth */));\n    }\n    _reveaInEditor(position, revealFunction) {\n        if (this._focused) {\n            this._disposeFocusStickyScrollStore();\n        }\n        this._positionRevealed = true;\n        revealFunction();\n        this._editor.setSelection(Range.fromPositions(position));\n        this._editor.focus();\n    }\n    _registerMouseListeners() {\n        const sessionStore = this._register(new DisposableStore());\n        const gesture = this._register(new ClickLinkGesture(this._editor, {\n            extractLineNumberFromMouseEvent: (e) => {\n                const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n                return position ? position.lineNumber : 0;\n            }\n        }));\n        const getMouseEventTarget = (mouseEvent) => {\n            if (!this._editor.hasModel()) {\n                return null;\n            }\n            if (mouseEvent.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || mouseEvent.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return null;\n            }\n            const mouseTargetElement = mouseEvent.target.element;\n            if (!mouseTargetElement || mouseTargetElement.innerText !== mouseTargetElement.innerHTML) {\n                // not on a span element rendering text\n                return null;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(mouseTargetElement);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return null;\n            }\n            return {\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column + mouseTargetElement.innerText.length),\n                textElement: mouseTargetElement\n            };\n        };\n        const stickyScrollWidgetDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.CLICK, (mouseEvent) => {\n            if (mouseEvent.ctrlKey || mouseEvent.altKey || mouseEvent.metaKey) {\n                // modifier pressed\n                return;\n            }\n            if (!mouseEvent.leftButton) {\n                // not left click\n                return;\n            }\n            if (mouseEvent.shiftKey) {\n                // shift click\n                const lineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (lineIndex === null) {\n                    return;\n                }\n                const position = new Position(this._endLineNumbers[lineIndex], 1);\n                this._revealLineInCenterIfOutsideViewport(position);\n                return;\n            }\n            const isInFoldingIconDomNode = this._stickyScrollWidget.isInFoldingIconDomNode(mouseEvent.target);\n            if (isInFoldingIconDomNode) {\n                // clicked on folding icon\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                this._toggleFoldingRegionForLine(lineNumber);\n                return;\n            }\n            const isInStickyLine = this._stickyScrollWidget.isInStickyLine(mouseEvent.target);\n            if (!isInStickyLine) {\n                return;\n            }\n            // normal click\n            let position = this._stickyScrollWidget.getEditorPositionFromNode(mouseEvent.target);\n            if (!position) {\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                if (lineNumber === null) {\n                    // not hovering a sticky scroll line\n                    return;\n                }\n                position = new Position(lineNumber, 1);\n            }\n            this._revealPosition(position);\n        }));\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_MOVE, (mouseEvent) => {\n            if (mouseEvent.shiftKey) {\n                const currentEndForLineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (currentEndForLineIndex === null || this._showEndForLine !== null && this._showEndForLine === currentEndForLineIndex) {\n                    return;\n                }\n                this._showEndForLine = currentEndForLineIndex;\n                this._renderStickyScroll();\n                return;\n            }\n            if (this._showEndForLine !== undefined) {\n                this._showEndForLine = undefined;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(dom.addDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_LEAVE, (e) => {\n            if (this._showEndForLine !== undefined) {\n                this._showEndForLine = undefined;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(gesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, _keyboardEvent]) => {\n            const mouseTarget = getMouseEventTarget(mouseEvent);\n            if (!mouseTarget || !mouseEvent.hasTriggerModifier || !this._editor.hasModel()) {\n                sessionStore.clear();\n                return;\n            }\n            const { range, textElement } = mouseTarget;\n            if (!range.equalsRange(this._stickyRangeProjectedOnEditor)) {\n                this._stickyRangeProjectedOnEditor = range;\n                sessionStore.clear();\n            }\n            else if (textElement.style.textDecoration === 'underline') {\n                return;\n            }\n            const cancellationToken = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cancellationToken.dispose(true)));\n            let currentHTMLChild;\n            getDefinitionsAtPosition(this._languageFeaturesService.definitionProvider, this._editor.getModel(), new Position(range.startLineNumber, range.startColumn + 1), false, cancellationToken.token).then((candidateDefinitions => {\n                if (cancellationToken.token.isCancellationRequested) {\n                    return;\n                }\n                if (candidateDefinitions.length !== 0) {\n                    this._candidateDefinitionsLength = candidateDefinitions.length;\n                    const childHTML = textElement;\n                    if (currentHTMLChild !== childHTML) {\n                        sessionStore.clear();\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                    else if (!currentHTMLChild) {\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                }\n                else {\n                    sessionStore.clear();\n                }\n            }));\n        }));\n        this._register(gesture.onCancel(() => {\n            sessionStore.clear();\n        }));\n        this._register(gesture.onExecute(async (e) => {\n            if (e.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || e.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return;\n            }\n            if (!this._editor.hasModel() || !this._stickyRangeProjectedOnEditor) {\n                return;\n            }\n            if (this._candidateDefinitionsLength > 1) {\n                if (this._focused) {\n                    this._disposeFocusStickyScrollStore();\n                }\n                this._revealPosition({ lineNumber: position.lineNumber, column: 1 });\n            }\n            this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, { uri: this._editor.getModel().uri, range: this._stickyRangeProjectedOnEditor });\n        }));\n    }\n    _onContextMenu(targetWindow, e) {\n        const event = new StandardMouseEvent(targetWindow, e);\n        this._contextMenuService.showContextMenu({\n            menuId: MenuId.StickyScrollContext,\n            getAnchor: () => event,\n        });\n    }\n    _toggleFoldingRegionForLine(line) {\n        if (!this._foldingModel || line === null) {\n            return;\n        }\n        const stickyLine = this._stickyScrollWidget.getRenderedStickyLine(line);\n        const foldingIcon = stickyLine?.foldingIcon;\n        if (!foldingIcon) {\n            return;\n        }\n        toggleCollapseState(this._foldingModel, Number.MAX_VALUE, [line]);\n        foldingIcon.isCollapsed = !foldingIcon.isCollapsed;\n        const scrollTop = (foldingIcon.isCollapsed ?\n            this._editor.getTopForLineNumber(foldingIcon.foldingEndLine)\n            : this._editor.getTopForLineNumber(foldingIcon.foldingStartLine))\n            - this._editor.getOption(67 /* EditorOption.lineHeight */) * stickyLine.index + 1;\n        this._editor.setScrollTop(scrollTop);\n        this._renderStickyScroll(line);\n    }\n    _readConfiguration() {\n        const options = this._editor.getOption(116 /* EditorOption.stickyScroll */);\n        if (options.enabled === false) {\n            this._editor.removeOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.clear();\n            this._enabled = false;\n            return;\n        }\n        else if (options.enabled && !this._enabled) {\n            // When sticky scroll was just enabled, add the listeners on the sticky scroll\n            this._editor.addOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.add(this._editor.onDidScrollChange((e) => {\n                if (e.scrollTopChanged) {\n                    this._showEndForLine = undefined;\n                    this._renderStickyScroll();\n                }\n            }));\n            this._sessionStore.add(this._editor.onDidLayoutChange(() => this._onDidResize()));\n            this._sessionStore.add(this._editor.onDidChangeModelTokens((e) => this._onTokensChange(e)));\n            this._sessionStore.add(this._stickyLineCandidateProvider.onDidChangeStickyScroll(() => {\n                this._showEndForLine = undefined;\n                this._renderStickyScroll();\n            }));\n            this._enabled = true;\n        }\n        const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n        if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            this._sessionStore.add(this._editor.onDidChangeCursorPosition(() => {\n                this._showEndForLine = undefined;\n                this._renderStickyScroll(0);\n            }));\n        }\n    }\n    _readConfigurationChange(event) {\n        if (event.hasChanged(116 /* EditorOption.stickyScroll */)\n            || event.hasChanged(73 /* EditorOption.minimap */)\n            || event.hasChanged(67 /* EditorOption.lineHeight */)\n            || event.hasChanged(111 /* EditorOption.showFoldingControls */)\n            || event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n            this._readConfiguration();\n        }\n        if (event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n            this._renderStickyScroll(0);\n        }\n    }\n    _needsUpdate(event) {\n        const stickyLineNumbers = this._stickyScrollWidget.getCurrentLines();\n        for (const stickyLineNumber of stickyLineNumbers) {\n            for (const range of event.ranges) {\n                if (stickyLineNumber >= range.fromLineNumber && stickyLineNumber <= range.toLineNumber) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _onTokensChange(event) {\n        if (this._needsUpdate(event)) {\n            // Rebuilding the whole widget from line 0\n            this._renderStickyScroll(0);\n        }\n    }\n    _onDidResize() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        // Make sure sticky scroll doesn't take up more than 25% of the editor\n        const theoreticalLines = layoutInfo.height / this._editor.getOption(67 /* EditorOption.lineHeight */);\n        this._maxStickyLines = Math.round(theoreticalLines * .25);\n    }\n    async _renderStickyScroll(rebuildFromLine) {\n        const model = this._editor.getModel();\n        if (!model || model.isTooLargeForTokenization()) {\n            this._resetState();\n            return;\n        }\n        const nextRebuildFromLine = this._updateAndGetMinRebuildFromLine(rebuildFromLine);\n        const stickyWidgetVersion = this._stickyLineCandidateProvider.getVersionId();\n        const shouldUpdateState = stickyWidgetVersion === undefined || stickyWidgetVersion === model.getVersionId();\n        if (shouldUpdateState) {\n            if (!this._focused) {\n                await this._updateState(nextRebuildFromLine);\n            }\n            else {\n                // Suppose that previously the sticky scroll widget had height 0, then if there are visible lines, set the last line as focused\n                if (this._focusedStickyElementIndex === -1) {\n                    await this._updateState(nextRebuildFromLine);\n                    this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                    if (this._focusedStickyElementIndex !== -1) {\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n                else {\n                    const focusedStickyElementLineNumber = this._stickyScrollWidget.lineNumbers[this._focusedStickyElementIndex];\n                    await this._updateState(nextRebuildFromLine);\n                    // Suppose that after setting the state, there are no sticky lines, set the focused index to -1\n                    if (this._stickyScrollWidget.lineNumberCount === 0) {\n                        this._focusedStickyElementIndex = -1;\n                    }\n                    else {\n                        const previousFocusedLineNumberExists = this._stickyScrollWidget.lineNumbers.includes(focusedStickyElementLineNumber);\n                        // If the line number is still there, do not change anything\n                        // If the line number is not there, set the new focused line to be the last line\n                        if (!previousFocusedLineNumberExists) {\n                            this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                        }\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n            }\n        }\n    }\n    _updateAndGetMinRebuildFromLine(rebuildFromLine) {\n        if (rebuildFromLine !== undefined) {\n            const minRebuildFromLineOrInfinity = this._minRebuildFromLine !== undefined ? this._minRebuildFromLine : Infinity;\n            this._minRebuildFromLine = Math.min(rebuildFromLine, minRebuildFromLineOrInfinity);\n        }\n        return this._minRebuildFromLine;\n    }\n    async _updateState(rebuildFromLine) {\n        this._minRebuildFromLine = undefined;\n        this._foldingModel = await FoldingController.get(this._editor)?.getFoldingModel() ?? undefined;\n        this._widgetState = this.findScrollWidgetState();\n        const stickyWidgetHasLines = this._widgetState.startLineNumbers.length > 0;\n        this._stickyScrollVisibleContextKey.set(stickyWidgetHasLines);\n        this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n    }\n    async _resetState() {\n        this._minRebuildFromLine = undefined;\n        this._foldingModel = undefined;\n        this._widgetState = StickyScrollWidgetState.Empty;\n        this._stickyScrollVisibleContextKey.set(false);\n        this._stickyScrollWidget.setState(undefined, undefined);\n    }\n    findScrollWidgetState() {\n        const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        const maxNumberStickyLines = Math.min(this._maxStickyLines, this._editor.getOption(116 /* EditorOption.stickyScroll */).maxLineCount);\n        const scrollTop = this._editor.getScrollTop();\n        let lastLineRelativePosition = 0;\n        const startLineNumbers = [];\n        const endLineNumbers = [];\n        const arrayVisibleRanges = this._editor.getVisibleRanges();\n        if (arrayVisibleRanges.length !== 0) {\n            const fullVisibleRange = new StickyRange(arrayVisibleRanges[0].startLineNumber, arrayVisibleRanges[arrayVisibleRanges.length - 1].endLineNumber);\n            const candidateRanges = this._stickyLineCandidateProvider.getCandidateStickyLinesIntersecting(fullVisibleRange);\n            for (const range of candidateRanges) {\n                const start = range.startLineNumber;\n                const end = range.endLineNumber;\n                const depth = range.nestingDepth;\n                if (end - start > 0) {\n                    const topOfElementAtDepth = (depth - 1) * lineHeight;\n                    const bottomOfElementAtDepth = depth * lineHeight;\n                    const bottomOfBeginningLine = this._editor.getBottomForLineNumber(start) - scrollTop;\n                    const topOfEndLine = this._editor.getTopForLineNumber(end) - scrollTop;\n                    const bottomOfEndLine = this._editor.getBottomForLineNumber(end) - scrollTop;\n                    if (topOfElementAtDepth > topOfEndLine && topOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                        lastLineRelativePosition = bottomOfEndLine - bottomOfElementAtDepth;\n                        break;\n                    }\n                    else if (bottomOfElementAtDepth > bottomOfBeginningLine && bottomOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                    }\n                    if (startLineNumbers.length === maxNumberStickyLines) {\n                        break;\n                    }\n                }\n            }\n        }\n        this._endLineNumbers = endLineNumbers;\n        return new StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition, this._showEndForLine);\n    }\n    dispose() {\n        super.dispose();\n        this._sessionStore.dispose();\n    }\n};\nStickyScrollController = StickyScrollController_1 = __decorate([\n    __param(1, IContextMenuService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IInstantiationService),\n    __param(4, ILanguageConfigurationService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IContextKeyService)\n], StickyScrollController);\nexport { StickyScrollController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}