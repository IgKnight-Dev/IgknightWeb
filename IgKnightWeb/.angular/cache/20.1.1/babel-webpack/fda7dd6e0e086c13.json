{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HierarchicalKind {\n  static #_ = this.sep = '.';\n  static #_2 = this.None = new HierarchicalKind('@@none@@'); // Special kind that matches nothing\n  static #_3 = this.Empty = new HierarchicalKind('');\n  constructor(value) {\n    this.value = value;\n  }\n  equals(other) {\n    return this.value === other.value;\n  }\n  contains(other) {\n    return this.equals(other) || this.value === '' || other.value.startsWith(this.value + HierarchicalKind.sep);\n  }\n  intersects(other) {\n    return this.contains(other) || other.contains(this);\n  }\n  append(...parts) {\n    return new HierarchicalKind((this.value ? [this.value, ...parts] : parts).join(HierarchicalKind.sep));\n  }\n}","map":{"version":3,"names":["HierarchicalKind","_","sep","_2","None","_3","Empty","constructor","value","equals","other","contains","startsWith","intersects","append","parts","join"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/base/common/hierarchicalKind.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HierarchicalKind {\n    static { this.sep = '.'; }\n    static { this.None = new HierarchicalKind('@@none@@'); } // Special kind that matches nothing\n    static { this.Empty = new HierarchicalKind(''); }\n    constructor(value) {\n        this.value = value;\n    }\n    equals(other) {\n        return this.value === other.value;\n    }\n    contains(other) {\n        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + HierarchicalKind.sep);\n    }\n    intersects(other) {\n        return this.contains(other) || other.contains(this);\n    }\n    append(...parts) {\n        return new HierarchicalKind((this.value ? [this.value, ...parts] : parts).join(HierarchicalKind.sep));\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,CAAC;EAAA,QAAAC,CAAA,GACjB,IAAI,CAACC,GAAG,GAAG,GAAG;EAAA,QAAAC,EAAA,GACd,IAAI,CAACC,IAAI,GAAG,IAAIJ,gBAAgB,CAAC,UAAU,CAAC,EAAI;EAAA,QAAAK,EAAA,GAChD,IAAI,CAACC,KAAK,GAAG,IAAIN,gBAAgB,CAAC,EAAE,CAAC;EAC9CO,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAC,MAAMA,CAACC,KAAK,EAAE;IACV,OAAO,IAAI,CAACF,KAAK,KAAKE,KAAK,CAACF,KAAK;EACrC;EACAG,QAAQA,CAACD,KAAK,EAAE;IACZ,OAAO,IAAI,CAACD,MAAM,CAACC,KAAK,CAAC,IAAI,IAAI,CAACF,KAAK,KAAK,EAAE,IAAIE,KAAK,CAACF,KAAK,CAACI,UAAU,CAAC,IAAI,CAACJ,KAAK,GAAGR,gBAAgB,CAACE,GAAG,CAAC;EAC/G;EACAW,UAAUA,CAACH,KAAK,EAAE;IACd,OAAO,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EACvD;EACAG,MAAMA,CAAC,GAAGC,KAAK,EAAE;IACb,OAAO,IAAIf,gBAAgB,CAAC,CAAC,IAAI,CAACQ,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,EAAE,GAAGO,KAAK,CAAC,GAAGA,KAAK,EAAEC,IAAI,CAAChB,gBAAgB,CAACE,GAAG,CAAC,CAAC;EACzG;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}