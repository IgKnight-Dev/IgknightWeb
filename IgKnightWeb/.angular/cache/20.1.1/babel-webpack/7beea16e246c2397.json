{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ReferencesController_1;\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { InputFocusedContext } from '../../../../../platform/contextkey/common/contextkeys.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = /*#__PURE__*/(() => {\n  let ReferencesController = class ReferencesController {\n    static #_ = ReferencesController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.referencesController';\n    static get(editor) {\n      return editor.getContribution(ReferencesController_1.ID);\n    }\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n      this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n      this._editor = _editor;\n      this._editorService = _editorService;\n      this._notificationService = _notificationService;\n      this._instantiationService = _instantiationService;\n      this._storageService = _storageService;\n      this._configurationService = _configurationService;\n      this._disposables = new DisposableStore();\n      this._requestIdPool = 0;\n      this._ignoreModelChangeEvent = false;\n      this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n    }\n    dispose() {\n      this._referenceSearchVisible.reset();\n      this._disposables.dispose();\n      this._widget?.dispose();\n      this._model?.dispose();\n      this._widget = undefined;\n      this._model = undefined;\n    }\n    toggleWidget(range, modelPromise, peekMode) {\n      // close current widget and return early is position didn't change\n      let widgetPosition;\n      if (this._widget) {\n        widgetPosition = this._widget.position;\n      }\n      this.closeWidget();\n      if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n        return;\n      }\n      this._peekMode = peekMode;\n      this._referenceSearchVisible.set(true);\n      // close the widget on model/mode changes\n      this._disposables.add(this._editor.onDidChangeModelLanguage(() => {\n        this.closeWidget();\n      }));\n      this._disposables.add(this._editor.onDidChangeModel(() => {\n        if (!this._ignoreModelChangeEvent) {\n          this.closeWidget();\n        }\n      }));\n      const storageKey = 'peekViewLayout';\n      const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* StorageScope.PROFILE */, '{}'));\n      this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n      this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n      this._widget.show(range);\n      this._disposables.add(this._widget.onDidClose(() => {\n        modelPromise.cancel();\n        if (this._widget) {\n          this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n          if (!this._widget.isClosing) {\n            // to prevent calling this too many times, check whether it was already closing.\n            this.closeWidget();\n          }\n          this._widget = undefined;\n        } else {\n          this.closeWidget();\n        }\n      }));\n      this._disposables.add(this._widget.onDidSelectReference(event => {\n        const {\n          element,\n          kind\n        } = event;\n        if (!element) {\n          return;\n        }\n        switch (kind) {\n          case 'open':\n            if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n              // when stable peek is configured we don't close\n              // the peek window on selecting the editor\n              this.openReference(element, false, false);\n            }\n            break;\n          case 'side':\n            this.openReference(element, true, false);\n            break;\n          case 'goto':\n            if (peekMode) {\n              this._gotoReference(element, true);\n            } else {\n              this.openReference(element, false, true);\n            }\n            break;\n        }\n      }));\n      const requestId = ++this._requestIdPool;\n      modelPromise.then(model => {\n        // still current request? widget still open?\n        if (requestId !== this._requestIdPool || !this._widget) {\n          model.dispose();\n          return undefined;\n        }\n        this._model?.dispose();\n        this._model = model;\n        // show widget\n        return this._widget.setModel(this._model).then(() => {\n          if (this._widget && this._model && this._editor.hasModel()) {\n            // might have been closed\n            // set title\n            if (!this._model.isEmpty) {\n              this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n            } else {\n              this._widget.setMetaTitle('');\n            }\n            // set 'best' selection\n            const uri = this._editor.getModel().uri;\n            const pos = new Position(range.startLineNumber, range.startColumn);\n            const selection = this._model.nearestReference(uri, pos);\n            if (selection) {\n              return this._widget.setSelection(selection).then(() => {\n                if (this._widget && this._editor.getOption(87 /* EditorOption.peekWidgetDefaultFocus */) === 'editor') {\n                  this._widget.focusOnPreviewEditor();\n                }\n              });\n            }\n          }\n          return undefined;\n        });\n      }, error => {\n        this._notificationService.error(error);\n      });\n    }\n    changeFocusBetweenPreviewAndReferences() {\n      if (!this._widget) {\n        // can be called while still resolving...\n        return;\n      }\n      if (this._widget.isPreviewEditorFocused()) {\n        this._widget.focusOnReferenceTree();\n      } else {\n        this._widget.focusOnPreviewEditor();\n      }\n    }\n    goToNextOrPreviousReference(fwd) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!_this._editor.hasModel() || !_this._model || !_this._widget) {\n          // can be called while still resolving...\n          return;\n        }\n        const currentPosition = _this._widget.position;\n        if (!currentPosition) {\n          return;\n        }\n        const source = _this._model.nearestReference(_this._editor.getModel().uri, currentPosition);\n        if (!source) {\n          return;\n        }\n        const target = _this._model.nextOrPreviousReference(source, fwd);\n        const editorFocus = _this._editor.hasTextFocus();\n        const previewEditorFocus = _this._widget.isPreviewEditorFocused();\n        yield _this._widget.setSelection(target);\n        yield _this._gotoReference(target, false);\n        if (editorFocus) {\n          _this._editor.focus();\n        } else if (_this._widget && previewEditorFocus) {\n          _this._widget.focusOnPreviewEditor();\n        }\n      })();\n    }\n    revealReference(reference) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (!_this2._editor.hasModel() || !_this2._model || !_this2._widget) {\n          // can be called while still resolving...\n          return;\n        }\n        yield _this2._widget.revealReference(reference);\n      })();\n    }\n    closeWidget(focusEditor = true) {\n      this._widget?.dispose();\n      this._model?.dispose();\n      this._referenceSearchVisible.reset();\n      this._disposables.clear();\n      this._widget = undefined;\n      this._model = undefined;\n      if (focusEditor) {\n        this._editor.focus();\n      }\n      this._requestIdPool += 1; // Cancel pending requests\n    }\n    _gotoReference(ref, pinned) {\n      this._widget?.hide();\n      this._ignoreModelChangeEvent = true;\n      const range = Range.lift(ref.range).collapseToStart();\n      return this._editorService.openCodeEditor({\n        resource: ref.uri,\n        options: {\n          selection: range,\n          selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */,\n          pinned\n        }\n      }, this._editor).then(openedEditor => {\n        this._ignoreModelChangeEvent = false;\n        if (!openedEditor || !this._widget) {\n          // something went wrong...\n          this.closeWidget();\n          return;\n        }\n        if (this._editor === openedEditor) {\n          //\n          this._widget.show(range);\n          this._widget.focusOnReferenceTree();\n        } else {\n          // we opened a different editor instance which means a different controller instance.\n          // therefore we stop with this controller and continue with the other\n          const other = ReferencesController_1.get(openedEditor);\n          const model = this._model.clone();\n          this.closeWidget();\n          openedEditor.focus();\n          other?.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), this._peekMode ?? false);\n        }\n      }, err => {\n        this._ignoreModelChangeEvent = false;\n        onUnexpectedError(err);\n      });\n    }\n    openReference(ref, sideBySide, pinned) {\n      // clear stage\n      if (!sideBySide) {\n        this.closeWidget();\n      }\n      const {\n        uri,\n        range\n      } = ref;\n      this._editorService.openCodeEditor({\n        resource: uri,\n        options: {\n          selection: range,\n          selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */,\n          pinned\n        }\n      }, this._editor, sideBySide);\n    }\n  };\n  return ReferencesController;\n})();\nReferencesController = ReferencesController_1 = __decorate([__param(2, IContextKeyService), __param(3, ICodeEditorService), __param(4, INotificationService), __param(5, IInstantiationService), __param(6, IStorageService), __param(7, IConfigurationService)], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n  const outerEditor = getOuterEditor(accessor);\n  if (!outerEditor) {\n    return;\n  }\n  const controller = ReferencesController.get(outerEditor);\n  if (controller) {\n    fn(controller);\n  }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'togglePeekWidgetFocus',\n  weight: 100 /* KeybindingWeight.EditorContrib */,\n  primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 60 /* KeyCode.F2 */),\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.changeFocusBetweenPreviewAndReferences();\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToNextReference',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n  primary: 62 /* KeyCode.F4 */,\n  secondary: [70 /* KeyCode.F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(true);\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToPreviousReference',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n  primary: 1024 /* KeyMod.Shift */ | 62 /* KeyCode.F4 */,\n  secondary: [1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(false);\n    });\n  }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 101,\n  primary: 9 /* KeyCode.Escape */,\n  secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n  when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n  primary: 9 /* KeyCode.Escape */,\n  secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'), ContextKeyExpr.or(EditorContextKeys.editorTextFocus, InputFocusedContext.negate()))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'revealReference',\n  weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n  primary: 3 /* KeyCode.Enter */,\n  mac: {\n    primary: 3 /* KeyCode.Enter */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */]\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n  handler(accessor) {\n    const listService = accessor.get(IListService);\n    const focus = listService.lastFocusedList?.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.revealReference(focus[0]));\n    }\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'openReferenceToSide',\n  weight: 100 /* KeybindingWeight.EditorContrib */,\n  primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n  mac: {\n    primary: 256 /* KeyMod.WinCtrl */ | 3 /* KeyCode.Enter */\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n  handler(accessor) {\n    const listService = accessor.get(IListService);\n    const focus = listService.lastFocusedList?.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.openReference(focus[0], true, true));\n    }\n  }\n});\nCommandsRegistry.registerCommand('openReference', accessor => {\n  const listService = accessor.get(IListService);\n  const focus = listService.lastFocusedList?.getFocus();\n  if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n    withController(accessor, controller => controller.openReference(focus[0], false, true));\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ReferencesController_1","createCancelablePromise","onUnexpectedError","KeyChord","DisposableStore","ICodeEditorService","Position","Range","getOuterEditor","PeekContext","nls","CommandsRegistry","IConfigurationService","ContextKeyExpr","IContextKeyService","RawContextKey","IInstantiationService","KeybindingsRegistry","IListService","WorkbenchListFocusContextKey","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementCanExpand","INotificationService","IStorageService","OneReference","LayoutData","ReferenceWidget","EditorContextKeys","InputFocusedContext","ctxReferenceSearchVisible","localize","ReferencesController","_","_2","ID","get","editor","getContribution","constructor","_defaultTreeKeyboardSupport","_editor","contextKeyService","_editorService","_notificationService","_instantiationService","_storageService","_configurationService","_disposables","_requestIdPool","_ignoreModelChangeEvent","_referenceSearchVisible","bindTo","dispose","reset","_widget","_model","undefined","toggleWidget","range","modelPromise","peekMode","widgetPosition","position","closeWidget","containsPosition","_peekMode","set","add","onDidChangeModelLanguage","onDidChangeModel","storageKey","data","fromJSON","createInstance","setTitle","show","onDidClose","cancel","store","JSON","stringify","layoutData","isClosing","onDidSelectReference","event","element","kind","source","getValue","openReference","_gotoReference","requestId","then","model","setModel","hasModel","isEmpty","setMetaTitle","title","references","uri","getModel","pos","startLineNumber","startColumn","selection","nearestReference","setSelection","getOption","focusOnPreviewEditor","error","changeFocusBetweenPreviewAndReferences","isPreviewEditorFocused","focusOnReferenceTree","goToNextOrPreviousReference","fwd","_this","_asyncToGenerator","currentPosition","nextOrPreviousReference","editorFocus","hasTextFocus","previewEditorFocus","focus","revealReference","reference","_this2","focusEditor","clear","ref","pinned","hide","lift","collapseToStart","openCodeEditor","resource","options","selectionSource","openedEditor","other","clone","Promise","resolve","err","sideBySide","withController","accessor","fn","outerEditor","controller","registerCommandAndKeybindingRule","id","weight","primary","when","or","inPeekEditor","handler","secondary","registerCommandAlias","registerCommand","registerKeybindingRule","and","not","editorTextFocus","negate","mac","listService","lastFocusedList","getFocus","Array","isArray"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ReferencesController_1;\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { InputFocusedContext } from '../../../../../platform/contextkey/common/contextkeys.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = class ReferencesController {\n    static { ReferencesController_1 = this; }\n    static { this.ID = 'editor.contrib.referencesController'; }\n    static get(editor) {\n        return editor.getContribution(ReferencesController_1.ID);\n    }\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this._editor = _editor;\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._instantiationService = _instantiationService;\n        this._storageService = _storageService;\n        this._configurationService = _configurationService;\n        this._disposables = new DisposableStore();\n        this._requestIdPool = 0;\n        this._ignoreModelChangeEvent = false;\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n    }\n    dispose() {\n        this._referenceSearchVisible.reset();\n        this._disposables.dispose();\n        this._widget?.dispose();\n        this._model?.dispose();\n        this._widget = undefined;\n        this._model = undefined;\n    }\n    toggleWidget(range, modelPromise, peekMode) {\n        // close current widget and return early is position didn't change\n        let widgetPosition;\n        if (this._widget) {\n            widgetPosition = this._widget.position;\n        }\n        this.closeWidget();\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n            return;\n        }\n        this._peekMode = peekMode;\n        this._referenceSearchVisible.set(true);\n        // close the widget on model/mode changes\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n        this._disposables.add(this._editor.onDidChangeModel(() => {\n            if (!this._ignoreModelChangeEvent) {\n                this.closeWidget();\n            }\n        }));\n        const storageKey = 'peekViewLayout';\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* StorageScope.PROFILE */, '{}'));\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n        this._widget.show(range);\n        this._disposables.add(this._widget.onDidClose(() => {\n            modelPromise.cancel();\n            if (this._widget) {\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n                if (!this._widget.isClosing) {\n                    // to prevent calling this too many times, check whether it was already closing.\n                    this.closeWidget();\n                }\n                this._widget = undefined;\n            }\n            else {\n                this.closeWidget();\n            }\n        }));\n        this._disposables.add(this._widget.onDidSelectReference(event => {\n            const { element, kind } = event;\n            if (!element) {\n                return;\n            }\n            switch (kind) {\n                case 'open':\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n                        // when stable peek is configured we don't close\n                        // the peek window on selecting the editor\n                        this.openReference(element, false, false);\n                    }\n                    break;\n                case 'side':\n                    this.openReference(element, true, false);\n                    break;\n                case 'goto':\n                    if (peekMode) {\n                        this._gotoReference(element, true);\n                    }\n                    else {\n                        this.openReference(element, false, true);\n                    }\n                    break;\n            }\n        }));\n        const requestId = ++this._requestIdPool;\n        modelPromise.then(model => {\n            // still current request? widget still open?\n            if (requestId !== this._requestIdPool || !this._widget) {\n                model.dispose();\n                return undefined;\n            }\n            this._model?.dispose();\n            this._model = model;\n            // show widget\n            return this._widget.setModel(this._model).then(() => {\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n                    // set title\n                    if (!this._model.isEmpty) {\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n                    }\n                    else {\n                        this._widget.setMetaTitle('');\n                    }\n                    // set 'best' selection\n                    const uri = this._editor.getModel().uri;\n                    const pos = new Position(range.startLineNumber, range.startColumn);\n                    const selection = this._model.nearestReference(uri, pos);\n                    if (selection) {\n                        return this._widget.setSelection(selection).then(() => {\n                            if (this._widget && this._editor.getOption(87 /* EditorOption.peekWidgetDefaultFocus */) === 'editor') {\n                                this._widget.focusOnPreviewEditor();\n                            }\n                        });\n                    }\n                }\n                return undefined;\n            });\n        }, error => {\n            this._notificationService.error(error);\n        });\n    }\n    changeFocusBetweenPreviewAndReferences() {\n        if (!this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        if (this._widget.isPreviewEditorFocused()) {\n            this._widget.focusOnReferenceTree();\n        }\n        else {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    async goToNextOrPreviousReference(fwd) {\n        if (!this._editor.hasModel() || !this._model || !this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        const currentPosition = this._widget.position;\n        if (!currentPosition) {\n            return;\n        }\n        const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n        if (!source) {\n            return;\n        }\n        const target = this._model.nextOrPreviousReference(source, fwd);\n        const editorFocus = this._editor.hasTextFocus();\n        const previewEditorFocus = this._widget.isPreviewEditorFocused();\n        await this._widget.setSelection(target);\n        await this._gotoReference(target, false);\n        if (editorFocus) {\n            this._editor.focus();\n        }\n        else if (this._widget && previewEditorFocus) {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    async revealReference(reference) {\n        if (!this._editor.hasModel() || !this._model || !this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        await this._widget.revealReference(reference);\n    }\n    closeWidget(focusEditor = true) {\n        this._widget?.dispose();\n        this._model?.dispose();\n        this._referenceSearchVisible.reset();\n        this._disposables.clear();\n        this._widget = undefined;\n        this._model = undefined;\n        if (focusEditor) {\n            this._editor.focus();\n        }\n        this._requestIdPool += 1; // Cancel pending requests\n    }\n    _gotoReference(ref, pinned) {\n        this._widget?.hide();\n        this._ignoreModelChangeEvent = true;\n        const range = Range.lift(ref.range).collapseToStart();\n        return this._editorService.openCodeEditor({\n            resource: ref.uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor).then(openedEditor => {\n            this._ignoreModelChangeEvent = false;\n            if (!openedEditor || !this._widget) {\n                // something went wrong...\n                this.closeWidget();\n                return;\n            }\n            if (this._editor === openedEditor) {\n                //\n                this._widget.show(range);\n                this._widget.focusOnReferenceTree();\n            }\n            else {\n                // we opened a different editor instance which means a different controller instance.\n                // therefore we stop with this controller and continue with the other\n                const other = ReferencesController_1.get(openedEditor);\n                const model = this._model.clone();\n                this.closeWidget();\n                openedEditor.focus();\n                other?.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), this._peekMode ?? false);\n            }\n        }, (err) => {\n            this._ignoreModelChangeEvent = false;\n            onUnexpectedError(err);\n        });\n    }\n    openReference(ref, sideBySide, pinned) {\n        // clear stage\n        if (!sideBySide) {\n            this.closeWidget();\n        }\n        const { uri, range } = ref;\n        this._editorService.openCodeEditor({\n            resource: uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor, sideBySide);\n    }\n};\nReferencesController = ReferencesController_1 = __decorate([\n    __param(2, IContextKeyService),\n    __param(3, ICodeEditorService),\n    __param(4, INotificationService),\n    __param(5, IInstantiationService),\n    __param(6, IStorageService),\n    __param(7, IConfigurationService)\n], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n    const outerEditor = getOuterEditor(accessor);\n    if (!outerEditor) {\n        return;\n    }\n    const controller = ReferencesController.get(outerEditor);\n    if (controller) {\n        fn(controller);\n    }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'togglePeekWidgetFocus',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 60 /* KeyCode.F2 */),\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.changeFocusBetweenPreviewAndReferences();\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 62 /* KeyCode.F4 */,\n    secondary: [70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 1024 /* KeyMod.Shift */ | 62 /* KeyCode.F4 */,\n    secondary: [1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 101,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'), ContextKeyExpr.or(EditorContextKeys.editorTextFocus, InputFocusedContext.negate()))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'revealReference',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    primary: 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 3 /* KeyCode.Enter */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */]\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        const listService = accessor.get(IListService);\n        const focus = listService.lastFocusedList?.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.revealReference(focus[0]));\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'openReferenceToSide',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 256 /* KeyMod.WinCtrl */ | 3 /* KeyCode.Enter */\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        const listService = accessor.get(IListService);\n        const focus = listService.lastFocusedList?.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\n        }\n    }\n});\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n    const listService = accessor.get(IListService);\n    const focus = listService.lastFocusedList?.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}