{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar RenameController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { CancellationError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { isMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { NewSymbolNameTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, RenameWidget } from './renameWidget.js';\nclass RenameSkeleton {\n  constructor(model, position, registry) {\n    this.model = model;\n    this.position = position;\n    this._providerRenameIdx = 0;\n    this._providers = registry.ordered(model);\n  }\n  hasProvider() {\n    return this._providers.length > 0;\n  }\n  resolveRenameLocation(token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const rejects = [];\n      for (_this._providerRenameIdx = 0; _this._providerRenameIdx < _this._providers.length; _this._providerRenameIdx++) {\n        const provider = _this._providers[_this._providerRenameIdx];\n        if (!provider.resolveRenameLocation) {\n          break;\n        }\n        const res = yield provider.resolveRenameLocation(_this.model, _this.position, token);\n        if (!res) {\n          continue;\n        }\n        if (res.rejectReason) {\n          rejects.push(res.rejectReason);\n          continue;\n        }\n        return res;\n      }\n      // we are here when no provider prepared a location which means we can\n      // just rely on the word under cursor and start with the first provider\n      _this._providerRenameIdx = 0;\n      const word = _this.model.getWordAtPosition(_this.position);\n      if (!word) {\n        return {\n          range: Range.fromPositions(_this.position),\n          text: '',\n          rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n        };\n      }\n      return {\n        range: new Range(_this.position.lineNumber, word.startColumn, _this.position.lineNumber, word.endColumn),\n        text: word.word,\n        rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n      };\n    })();\n  }\n  provideRenameEdits(newName, token) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2._provideRenameEdits(newName, _this2._providerRenameIdx, [], token);\n    })();\n  }\n  _provideRenameEdits(newName, i, rejects, token) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const provider = _this3._providers[i];\n      if (!provider) {\n        return {\n          edits: [],\n          rejectReason: rejects.join('\\n')\n        };\n      }\n      const result = yield provider.provideRenameEdits(_this3.model, _this3.position, newName, token);\n      if (!result) {\n        return _this3._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n      } else if (result.rejectReason) {\n        return _this3._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n      }\n      return result;\n    })();\n  }\n}\nexport function rename(_x, _x2, _x3, _x4) {\n  return _rename.apply(this, arguments);\n}\n// ---  register actions and commands\nfunction _rename() {\n  _rename = _asyncToGenerator(function* (registry, model, position, newName) {\n    const skeleton = new RenameSkeleton(model, position, registry);\n    const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc?.rejectReason) {\n      return {\n        edits: [],\n        rejectReason: loc.rejectReason\n      };\n    }\n    return skeleton.provideRenameEdits(newName, CancellationToken.None);\n  });\n  return _rename.apply(this, arguments);\n}\nlet RenameController = /*#__PURE__*/(() => {\n  let RenameController = class RenameController {\n    static #_ = RenameController_1 = this;\n    static #_2 = this.ID = 'editor.contrib.renameController';\n    static get(editor) {\n      return editor.getContribution(RenameController_1.ID);\n    }\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService, _languageFeaturesService, _telemetryService) {\n      this.editor = editor;\n      this._instaService = _instaService;\n      this._notificationService = _notificationService;\n      this._bulkEditService = _bulkEditService;\n      this._progressService = _progressService;\n      this._logService = _logService;\n      this._configService = _configService;\n      this._languageFeaturesService = _languageFeaturesService;\n      this._telemetryService = _telemetryService;\n      this._disposableStore = new DisposableStore();\n      this._cts = new CancellationTokenSource();\n      this._renameWidget = this._disposableStore.add(this._instaService.createInstance(RenameWidget, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n    }\n    dispose() {\n      this._disposableStore.dispose();\n      this._cts.dispose(true);\n    }\n    run() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const trace = _this4._logService.trace.bind(_this4._logService, '[rename]');\n        // set up cancellation token to prevent reentrant rename, this\n        // is the parent to the resolve- and rename-tokens\n        _this4._cts.dispose(true);\n        _this4._cts = new CancellationTokenSource();\n        if (!_this4.editor.hasModel()) {\n          trace('editor has no model');\n          return undefined;\n        }\n        const position = _this4.editor.getPosition();\n        const skeleton = new RenameSkeleton(_this4.editor.getModel(), position, _this4._languageFeaturesService.renameProvider);\n        if (!skeleton.hasProvider()) {\n          trace('skeleton has no provider');\n          return undefined;\n        }\n        // part 1 - resolve rename location\n        const cts1 = new EditorStateCancellationTokenSource(_this4.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, undefined, _this4._cts.token);\n        let loc;\n        try {\n          trace('resolving rename location');\n          const resolveLocationOperation = skeleton.resolveRenameLocation(cts1.token);\n          _this4._progressService.showWhile(resolveLocationOperation, 250);\n          loc = yield resolveLocationOperation;\n          trace('resolved rename location');\n        } catch (e) {\n          if (e instanceof CancellationError) {\n            trace('resolve rename location cancelled', JSON.stringify(e, null, '\\t'));\n          } else {\n            trace('resolve rename location failed', e instanceof Error ? e : JSON.stringify(e, null, '\\t'));\n            if (typeof e === 'string' || isMarkdownString(e)) {\n              MessageController.get(_this4.editor)?.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n            }\n          }\n          return undefined;\n        } finally {\n          cts1.dispose();\n        }\n        if (!loc) {\n          trace('returning early - no loc');\n          return undefined;\n        }\n        if (loc.rejectReason) {\n          trace(`returning early - rejected with reason: ${loc.rejectReason}`, loc.rejectReason);\n          MessageController.get(_this4.editor)?.showMessage(loc.rejectReason, position);\n          return undefined;\n        }\n        if (cts1.token.isCancellationRequested) {\n          trace('returning early - cts1 cancelled');\n          return undefined;\n        }\n        // part 2 - do rename at location\n        const cts2 = new EditorStateCancellationTokenSource(_this4.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, loc.range, _this4._cts.token);\n        const model = _this4.editor.getModel(); // @ulugbekna: assumes editor still has a model, otherwise, cts1 should've been cancelled\n        const newSymbolNamesProviders = _this4._languageFeaturesService.newSymbolNamesProvider.all(model);\n        const resolvedNewSymbolnamesProviders = yield Promise.all(newSymbolNamesProviders.map(/*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (p) {\n            return [p, (yield p.supportsAutomaticNewSymbolNamesTriggerKind) ?? false];\n          });\n          return function (_x5) {\n            return _ref.apply(this, arguments);\n          };\n        }()));\n        const requestRenameSuggestions = (triggerKind, cts) => {\n          let providers = resolvedNewSymbolnamesProviders.slice();\n          if (triggerKind === NewSymbolNameTriggerKind.Automatic) {\n            providers = providers.filter(([_, supportsAutomatic]) => supportsAutomatic);\n          }\n          return providers.map(([p]) => p.provideNewSymbolNames(model, loc.range, triggerKind, cts));\n        };\n        trace('creating rename input field and awaiting its result');\n        const supportPreview = _this4._bulkEditService.hasPreviewHandler() && _this4._configService.getValue(_this4.editor.getModel().uri, 'editor.rename.enablePreview');\n        const inputFieldResult = yield _this4._renameWidget.getInput(loc.range, loc.text, supportPreview, newSymbolNamesProviders.length > 0 ? requestRenameSuggestions : undefined, cts2);\n        trace('received response from rename input field');\n        if (newSymbolNamesProviders.length > 0) {\n          // @ulugbekna: we're interested only in telemetry for rename suggestions currently\n          _this4._reportTelemetry(newSymbolNamesProviders.length, model.getLanguageId(), inputFieldResult);\n        }\n        // no result, only hint to focus the editor or not\n        if (typeof inputFieldResult === 'boolean') {\n          trace(`returning early - rename input field response - ${inputFieldResult}`);\n          if (inputFieldResult) {\n            _this4.editor.focus();\n          }\n          cts2.dispose();\n          return undefined;\n        }\n        _this4.editor.focus();\n        trace('requesting rename edits');\n        const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, cts2.token), cts2.token).then(/*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (renameResult) {\n            if (!renameResult) {\n              trace('returning early - no rename edits result');\n              return;\n            }\n            if (!_this4.editor.hasModel()) {\n              trace('returning early - no model after rename edits are provided');\n              return;\n            }\n            if (renameResult.rejectReason) {\n              trace(`returning early - rejected with reason: ${renameResult.rejectReason}`);\n              _this4._notificationService.info(renameResult.rejectReason);\n              return;\n            }\n            // collapse selection to active end\n            _this4.editor.setSelection(Range.fromPositions(_this4.editor.getSelection().getPosition()));\n            trace('applying edits');\n            _this4._bulkEditService.apply(renameResult, {\n              editor: _this4.editor,\n              showPreview: inputFieldResult.wantsPreview,\n              label: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc?.text, inputFieldResult.newName),\n              code: 'undoredo.rename',\n              quotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc?.text, inputFieldResult.newName),\n              respectAutoSaveConfig: true\n            }).then(result => {\n              trace('edits applied');\n              if (result.ariaSummary) {\n                alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n              }\n            }).catch(err => {\n              trace(`error when applying edits ${JSON.stringify(err, null, '\\t')}`);\n              _this4._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n              _this4._logService.error(err);\n            });\n          });\n          return function (_x6) {\n            return _ref2.apply(this, arguments);\n          };\n        }(), err => {\n          trace('error when providing rename edits', JSON.stringify(err, null, '\\t'));\n          _this4._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n          _this4._logService.error(err);\n        }).finally(() => {\n          cts2.dispose();\n        });\n        trace('returning rename operation');\n        _this4._progressService.showWhile(renameOperation, 250);\n        return renameOperation;\n      })();\n    }\n    acceptRenameInput(wantsPreview) {\n      this._renameWidget.acceptInput(wantsPreview);\n    }\n    cancelRenameInput() {\n      this._renameWidget.cancelInput(true, 'cancelRenameInput command');\n    }\n    focusNextRenameSuggestion() {\n      this._renameWidget.focusNextRenameSuggestion();\n    }\n    focusPreviousRenameSuggestion() {\n      this._renameWidget.focusPreviousRenameSuggestion();\n    }\n    _reportTelemetry(nRenameSuggestionProviders, languageId, inputFieldResult) {\n      const value = typeof inputFieldResult === 'boolean' ? {\n        kind: 'cancelled',\n        languageId,\n        nRenameSuggestionProviders\n      } : {\n        kind: 'accepted',\n        languageId,\n        nRenameSuggestionProviders,\n        source: inputFieldResult.stats.source.k,\n        nRenameSuggestions: inputFieldResult.stats.nRenameSuggestions,\n        timeBeforeFirstInputFieldEdit: inputFieldResult.stats.timeBeforeFirstInputFieldEdit,\n        wantsPreview: inputFieldResult.wantsPreview,\n        nRenameSuggestionsInvocations: inputFieldResult.stats.nRenameSuggestionsInvocations,\n        hadAutomaticRenameSuggestionsInvocation: inputFieldResult.stats.hadAutomaticRenameSuggestionsInvocation\n      };\n      this._telemetryService.publicLog2('renameInvokedEvent', value);\n    }\n  };\n  return RenameController;\n})();\nRenameController = RenameController_1 = __decorate([__param(1, IInstantiationService), __param(2, INotificationService), __param(3, IBulkEditService), __param(4, IEditorProgressService), __param(5, ILogService), __param(6, ITextResourceConfigurationService), __param(7, ILanguageFeaturesService), __param(8, ITelemetryService)], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.rename',\n      label: nls.localize('rename.label', \"Rename Symbol\"),\n      alias: 'Rename Symbol',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 60 /* KeyCode.F2 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.1\n      }\n    });\n  }\n  runCommand(accessor, args) {\n    const editorService = accessor.get(ICodeEditorService);\n    const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n    if (URI.isUri(uri) && Position.isIPosition(pos)) {\n      return editorService.openCodeEditor({\n        resource: uri\n      }, editorService.getActiveCodeEditor()).then(editor => {\n        if (!editor) {\n          return;\n        }\n        editor.setPosition(pos);\n        editor.invokeWithinContext(accessor => {\n          this.reportTelemetry(accessor, editor);\n          return this.run(accessor, editor);\n        });\n      }, onUnexpectedError);\n    }\n    return super.runCommand(accessor, args);\n  }\n  run(accessor, editor) {\n    const logService = accessor.get(ILogService);\n    const controller = RenameController.get(editor);\n    if (controller) {\n      logService.trace('[RenameAction] got controller, running...');\n      return controller.run();\n    }\n    logService.trace('[RenameAction] returning early - controller missing');\n    return Promise.resolve();\n  }\n}\nregisterEditorContribution(RenameController.ID, RenameController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.acceptRenameInput(false),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInputWithPreview',\n  precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n  handler: x => x.acceptRenameInput(true),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 2048 /* KeyMod.CtrlCmd */ + 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new RenameCommand({\n  id: 'cancelRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.cancelRenameInput(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterAction2(class FocusNextRenameSuggestion extends Action2 {\n  constructor() {\n    super({\n      id: 'focusNextRenameSuggestion',\n      title: {\n        ...nls.localize2('focusNextRenameSuggestion', \"Focus Next Rename Suggestion\")\n      },\n      precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n      keybinding: [{\n        primary: 18 /* KeyCode.DownArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99\n      }]\n    });\n  }\n  run(accessor) {\n    const currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n    if (!currentEditor) {\n      return;\n    }\n    const controller = RenameController.get(currentEditor);\n    if (!controller) {\n      return;\n    }\n    controller.focusNextRenameSuggestion();\n  }\n});\nregisterAction2(class FocusPreviousRenameSuggestion extends Action2 {\n  constructor() {\n    super({\n      id: 'focusPreviousRenameSuggestion',\n      title: {\n        ...nls.localize2('focusPreviousRenameSuggestion', \"Focus Previous Rename Suggestion\")\n      },\n      precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n      keybinding: [{\n        primary: 16 /* KeyCode.UpArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99\n      }]\n    });\n  }\n  run(accessor) {\n    const currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n    if (!currentEditor) {\n      return;\n    }\n    const controller = RenameController.get(currentEditor);\n    if (!controller) {\n      return;\n    }\n    controller.focusPreviousRenameSuggestion();\n  }\n});\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n  const [newName] = args;\n  assertType(typeof newName === 'string');\n  const {\n    renameProvider\n  } = accessor.get(ILanguageFeaturesService);\n  return rename(renameProvider, model, position, newName);\n});\nregisterModelAndPositionCommand('_executePrepareRename', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (accessor, model, position) {\n    const {\n      renameProvider\n    } = accessor.get(ILanguageFeaturesService);\n    const skeleton = new RenameSkeleton(model, position, renameProvider);\n    const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc?.rejectReason) {\n      throw new Error(loc.rejectReason);\n    }\n    return loc;\n  });\n  return function (_x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n  id: 'editor',\n  properties: {\n    'editor.rename.enablePreview': {\n      scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n      description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n      default: true,\n      type: 'boolean'\n    }\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RenameController_1","alert","raceCancellation","CancellationToken","CancellationTokenSource","CancellationError","onUnexpectedError","isMarkdownString","DisposableStore","assertType","URI","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","registerModelAndPositionCommand","IBulkEditService","ICodeEditorService","Position","Range","EditorContextKeys","NewSymbolNameTriggerKind","ILanguageFeaturesService","ITextResourceConfigurationService","EditorStateCancellationTokenSource","MessageController","nls","Action2","registerAction2","Extensions","ContextKeyExpr","IInstantiationService","ILogService","INotificationService","IEditorProgressService","Registry","ITelemetryService","CONTEXT_RENAME_INPUT_VISIBLE","RenameWidget","RenameSkeleton","constructor","model","position","registry","_providerRenameIdx","_providers","ordered","hasProvider","resolveRenameLocation","token","_this","_asyncToGenerator","rejects","provider","res","rejectReason","push","word","getWordAtPosition","range","fromPositions","text","join","undefined","lineNumber","startColumn","endColumn","provideRenameEdits","newName","_this2","_provideRenameEdits","_this3","edits","result","concat","localize","rename","_x","_x2","_x3","_x4","_rename","apply","skeleton","loc","None","RenameController","_","_2","ID","get","editor","getContribution","_instaService","_notificationService","_bulkEditService","_progressService","_logService","_configService","_languageFeaturesService","_telemetryService","_disposableStore","_cts","_renameWidget","add","createInstance","dispose","run","_this4","trace","bind","hasModel","getPosition","getModel","renameProvider","cts1","resolveLocationOperation","showWhile","e","JSON","stringify","Error","showMessage","isCancellationRequested","cts2","newSymbolNamesProviders","newSymbolNamesProvider","all","resolvedNewSymbolnamesProviders","Promise","map","_ref","p","supportsAutomaticNewSymbolNamesTriggerKind","_x5","requestRenameSuggestions","triggerKind","cts","providers","slice","Automatic","filter","supportsAutomatic","provideNewSymbolNames","supportPreview","hasPreviewHandler","getValue","uri","inputFieldResult","getInput","_reportTelemetry","getLanguageId","focus","renameOperation","then","_ref2","renameResult","info","setSelection","getSelection","showPreview","wantsPreview","label","code","quotableLabel","respectAutoSaveConfig","ariaSummary","catch","err","error","_x6","finally","acceptRenameInput","acceptInput","cancelRenameInput","cancelInput","focusNextRenameSuggestion","focusPreviousRenameSuggestion","nRenameSuggestionProviders","languageId","value","kind","source","stats","k","nRenameSuggestions","timeBeforeFirstInputFieldEdit","nRenameSuggestionsInvocations","hadAutomaticRenameSuggestionsInvocation","publicLog2","RenameAction","id","alias","precondition","and","writable","hasRenameProvider","kbOpts","kbExpr","editorTextFocus","primary","weight","contextMenuOpts","group","order","runCommand","accessor","args","editorService","pos","Array","isArray","isUri","isIPosition","openCodeEditor","resource","getActiveCodeEditor","setPosition","invokeWithinContext","reportTelemetry","logService","controller","resolve","RenameCommand","bindToContribution","handler","x","not","has","secondary","FocusNextRenameSuggestion","title","localize2","keybinding","currentEditor","getFocusedCodeEditor","FocusPreviousRenameSuggestion","_ref3","_x7","_x8","_x9","as","Configuration","registerConfiguration","properties","scope","description","default","type"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/rename.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar RenameController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { CancellationError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { isMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { NewSymbolNameTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, RenameWidget } from './renameWidget.js';\nclass RenameSkeleton {\n    constructor(model, position, registry) {\n        this.model = model;\n        this.position = position;\n        this._providerRenameIdx = 0;\n        this._providers = registry.ordered(model);\n    }\n    hasProvider() {\n        return this._providers.length > 0;\n    }\n    async resolveRenameLocation(token) {\n        const rejects = [];\n        for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n            const provider = this._providers[this._providerRenameIdx];\n            if (!provider.resolveRenameLocation) {\n                break;\n            }\n            const res = await provider.resolveRenameLocation(this.model, this.position, token);\n            if (!res) {\n                continue;\n            }\n            if (res.rejectReason) {\n                rejects.push(res.rejectReason);\n                continue;\n            }\n            return res;\n        }\n        // we are here when no provider prepared a location which means we can\n        // just rely on the word under cursor and start with the first provider\n        this._providerRenameIdx = 0;\n        const word = this.model.getWordAtPosition(this.position);\n        if (!word) {\n            return {\n                range: Range.fromPositions(this.position),\n                text: '',\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n            };\n        }\n        return {\n            range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n            text: word.word,\n            rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n        };\n    }\n    async provideRenameEdits(newName, token) {\n        return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n    }\n    async _provideRenameEdits(newName, i, rejects, token) {\n        const provider = this._providers[i];\n        if (!provider) {\n            return {\n                edits: [],\n                rejectReason: rejects.join('\\n')\n            };\n        }\n        const result = await provider.provideRenameEdits(this.model, this.position, newName, token);\n        if (!result) {\n            return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n        }\n        else if (result.rejectReason) {\n            return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n        }\n        return result;\n    }\n}\nexport async function rename(registry, model, position, newName) {\n    const skeleton = new RenameSkeleton(model, position, registry);\n    const loc = await skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc?.rejectReason) {\n        return { edits: [], rejectReason: loc.rejectReason };\n    }\n    return skeleton.provideRenameEdits(newName, CancellationToken.None);\n}\n// ---  register actions and commands\nlet RenameController = class RenameController {\n    static { RenameController_1 = this; }\n    static { this.ID = 'editor.contrib.renameController'; }\n    static get(editor) {\n        return editor.getContribution(RenameController_1.ID);\n    }\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService, _languageFeaturesService, _telemetryService) {\n        this.editor = editor;\n        this._instaService = _instaService;\n        this._notificationService = _notificationService;\n        this._bulkEditService = _bulkEditService;\n        this._progressService = _progressService;\n        this._logService = _logService;\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._telemetryService = _telemetryService;\n        this._disposableStore = new DisposableStore();\n        this._cts = new CancellationTokenSource();\n        this._renameWidget = this._disposableStore.add(this._instaService.createInstance(RenameWidget, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n    }\n    dispose() {\n        this._disposableStore.dispose();\n        this._cts.dispose(true);\n    }\n    async run() {\n        const trace = this._logService.trace.bind(this._logService, '[rename]');\n        // set up cancellation token to prevent reentrant rename, this\n        // is the parent to the resolve- and rename-tokens\n        this._cts.dispose(true);\n        this._cts = new CancellationTokenSource();\n        if (!this.editor.hasModel()) {\n            trace('editor has no model');\n            return undefined;\n        }\n        const position = this.editor.getPosition();\n        const skeleton = new RenameSkeleton(this.editor.getModel(), position, this._languageFeaturesService.renameProvider);\n        if (!skeleton.hasProvider()) {\n            trace('skeleton has no provider');\n            return undefined;\n        }\n        // part 1 - resolve rename location\n        const cts1 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, undefined, this._cts.token);\n        let loc;\n        try {\n            trace('resolving rename location');\n            const resolveLocationOperation = skeleton.resolveRenameLocation(cts1.token);\n            this._progressService.showWhile(resolveLocationOperation, 250);\n            loc = await resolveLocationOperation;\n            trace('resolved rename location');\n        }\n        catch (e) {\n            if (e instanceof CancellationError) {\n                trace('resolve rename location cancelled', JSON.stringify(e, null, '\\t'));\n            }\n            else {\n                trace('resolve rename location failed', e instanceof Error ? e : JSON.stringify(e, null, '\\t'));\n                if (typeof e === 'string' || isMarkdownString(e)) {\n                    MessageController.get(this.editor)?.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n                }\n            }\n            return undefined;\n        }\n        finally {\n            cts1.dispose();\n        }\n        if (!loc) {\n            trace('returning early - no loc');\n            return undefined;\n        }\n        if (loc.rejectReason) {\n            trace(`returning early - rejected with reason: ${loc.rejectReason}`, loc.rejectReason);\n            MessageController.get(this.editor)?.showMessage(loc.rejectReason, position);\n            return undefined;\n        }\n        if (cts1.token.isCancellationRequested) {\n            trace('returning early - cts1 cancelled');\n            return undefined;\n        }\n        // part 2 - do rename at location\n        const cts2 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, loc.range, this._cts.token);\n        const model = this.editor.getModel(); // @ulugbekna: assumes editor still has a model, otherwise, cts1 should've been cancelled\n        const newSymbolNamesProviders = this._languageFeaturesService.newSymbolNamesProvider.all(model);\n        const resolvedNewSymbolnamesProviders = await Promise.all(newSymbolNamesProviders.map(async (p) => [p, await p.supportsAutomaticNewSymbolNamesTriggerKind ?? false]));\n        const requestRenameSuggestions = (triggerKind, cts) => {\n            let providers = resolvedNewSymbolnamesProviders.slice();\n            if (triggerKind === NewSymbolNameTriggerKind.Automatic) {\n                providers = providers.filter(([_, supportsAutomatic]) => supportsAutomatic);\n            }\n            return providers.map(([p,]) => p.provideNewSymbolNames(model, loc.range, triggerKind, cts));\n        };\n        trace('creating rename input field and awaiting its result');\n        const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\n        const inputFieldResult = await this._renameWidget.getInput(loc.range, loc.text, supportPreview, newSymbolNamesProviders.length > 0 ? requestRenameSuggestions : undefined, cts2);\n        trace('received response from rename input field');\n        if (newSymbolNamesProviders.length > 0) { // @ulugbekna: we're interested only in telemetry for rename suggestions currently\n            this._reportTelemetry(newSymbolNamesProviders.length, model.getLanguageId(), inputFieldResult);\n        }\n        // no result, only hint to focus the editor or not\n        if (typeof inputFieldResult === 'boolean') {\n            trace(`returning early - rename input field response - ${inputFieldResult}`);\n            if (inputFieldResult) {\n                this.editor.focus();\n            }\n            cts2.dispose();\n            return undefined;\n        }\n        this.editor.focus();\n        trace('requesting rename edits');\n        const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, cts2.token), cts2.token).then(async (renameResult) => {\n            if (!renameResult) {\n                trace('returning early - no rename edits result');\n                return;\n            }\n            if (!this.editor.hasModel()) {\n                trace('returning early - no model after rename edits are provided');\n                return;\n            }\n            if (renameResult.rejectReason) {\n                trace(`returning early - rejected with reason: ${renameResult.rejectReason}`);\n                this._notificationService.info(renameResult.rejectReason);\n                return;\n            }\n            // collapse selection to active end\n            this.editor.setSelection(Range.fromPositions(this.editor.getSelection().getPosition()));\n            trace('applying edits');\n            this._bulkEditService.apply(renameResult, {\n                editor: this.editor,\n                showPreview: inputFieldResult.wantsPreview,\n                label: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc?.text, inputFieldResult.newName),\n                code: 'undoredo.rename',\n                quotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc?.text, inputFieldResult.newName),\n                respectAutoSaveConfig: true\n            }).then(result => {\n                trace('edits applied');\n                if (result.ariaSummary) {\n                    alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n                }\n            }).catch(err => {\n                trace(`error when applying edits ${JSON.stringify(err, null, '\\t')}`);\n                this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n                this._logService.error(err);\n            });\n        }, err => {\n            trace('error when providing rename edits', JSON.stringify(err, null, '\\t'));\n            this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n            this._logService.error(err);\n        }).finally(() => {\n            cts2.dispose();\n        });\n        trace('returning rename operation');\n        this._progressService.showWhile(renameOperation, 250);\n        return renameOperation;\n    }\n    acceptRenameInput(wantsPreview) {\n        this._renameWidget.acceptInput(wantsPreview);\n    }\n    cancelRenameInput() {\n        this._renameWidget.cancelInput(true, 'cancelRenameInput command');\n    }\n    focusNextRenameSuggestion() {\n        this._renameWidget.focusNextRenameSuggestion();\n    }\n    focusPreviousRenameSuggestion() {\n        this._renameWidget.focusPreviousRenameSuggestion();\n    }\n    _reportTelemetry(nRenameSuggestionProviders, languageId, inputFieldResult) {\n        const value = typeof inputFieldResult === 'boolean'\n            ? {\n                kind: 'cancelled',\n                languageId,\n                nRenameSuggestionProviders,\n            }\n            : {\n                kind: 'accepted',\n                languageId,\n                nRenameSuggestionProviders,\n                source: inputFieldResult.stats.source.k,\n                nRenameSuggestions: inputFieldResult.stats.nRenameSuggestions,\n                timeBeforeFirstInputFieldEdit: inputFieldResult.stats.timeBeforeFirstInputFieldEdit,\n                wantsPreview: inputFieldResult.wantsPreview,\n                nRenameSuggestionsInvocations: inputFieldResult.stats.nRenameSuggestionsInvocations,\n                hadAutomaticRenameSuggestionsInvocation: inputFieldResult.stats.hadAutomaticRenameSuggestionsInvocation,\n            };\n        this._telemetryService.publicLog2('renameInvokedEvent', value);\n    }\n};\nRenameController = RenameController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, INotificationService),\n    __param(3, IBulkEditService),\n    __param(4, IEditorProgressService),\n    __param(5, ILogService),\n    __param(6, ITextResourceConfigurationService),\n    __param(7, ILanguageFeaturesService),\n    __param(8, ITelemetryService)\n], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.rename',\n            label: nls.localize('rename.label', \"Rename Symbol\"),\n            alias: 'Rename Symbol',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.1\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(accessor, editor) {\n        const logService = accessor.get(ILogService);\n        const controller = RenameController.get(editor);\n        if (controller) {\n            logService.trace('[RenameAction] got controller, running...');\n            return controller.run();\n        }\n        logService.trace('[RenameAction] returning early - controller missing');\n        return Promise.resolve();\n    }\n}\nregisterEditorContribution(RenameController.ID, RenameController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.acceptRenameInput(false),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInputWithPreview',\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n    handler: x => x.acceptRenameInput(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 2048 /* KeyMod.CtrlCmd */ + 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'cancelRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.cancelRenameInput(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: EditorContextKeys.focus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterAction2(class FocusNextRenameSuggestion extends Action2 {\n    constructor() {\n        super({\n            id: 'focusNextRenameSuggestion',\n            title: {\n                ...nls.localize2('focusNextRenameSuggestion', \"Focus Next Rename Suggestion\"),\n            },\n            precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n            keybinding: [\n                {\n                    primary: 18 /* KeyCode.DownArrow */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n                }\n            ]\n        });\n    }\n    run(accessor) {\n        const currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!currentEditor) {\n            return;\n        }\n        const controller = RenameController.get(currentEditor);\n        if (!controller) {\n            return;\n        }\n        controller.focusNextRenameSuggestion();\n    }\n});\nregisterAction2(class FocusPreviousRenameSuggestion extends Action2 {\n    constructor() {\n        super({\n            id: 'focusPreviousRenameSuggestion',\n            title: {\n                ...nls.localize2('focusPreviousRenameSuggestion', \"Focus Previous Rename Suggestion\"),\n            },\n            precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n            keybinding: [\n                {\n                    primary: 16 /* KeyCode.UpArrow */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n                }\n            ]\n        });\n    }\n    run(accessor) {\n        const currentEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!currentEditor) {\n            return;\n        }\n        const controller = RenameController.get(currentEditor);\n        if (!controller) {\n            return;\n        }\n        controller.focusPreviousRenameSuggestion();\n    }\n});\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n    const [newName] = args;\n    assertType(typeof newName === 'string');\n    const { renameProvider } = accessor.get(ILanguageFeaturesService);\n    return rename(renameProvider, model, position, newName);\n});\nregisterModelAndPositionCommand('_executePrepareRename', async function (accessor, model, position) {\n    const { renameProvider } = accessor.get(ILanguageFeaturesService);\n    const skeleton = new RenameSkeleton(model, position, renameProvider);\n    const loc = await skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc?.rejectReason) {\n        throw new Error(loc.rejectReason);\n    }\n    return loc;\n});\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n    id: 'editor',\n    properties: {\n        'editor.rename.enablePreview': {\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n            default: true,\n            type: 'boolean'\n        }\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}