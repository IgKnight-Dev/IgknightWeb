{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from '../../../environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/apiservice\";\nexport let AssignmentApiService = /*#__PURE__*/(() => {\n  class AssignmentApiService {\n    http;\n    constructor(http) {\n      this.http = http;\n    }\n    baseUrl = environment.contentApiUrl;\n    // ✅ POST: Create new assignment\n    createAssignment(data) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return yield _this.http.post(_this.baseUrl, 'assignment/add', data);\n      })();\n    }\n    // ✅ PUT: Update existing assignment\n    updateAssignment(id, data) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this2.http.put(_this2.baseUrl, `assignment/${id}/update`, data);\n      })();\n    }\n    // ✅ PUT: Publish assignment\n    publishAssignment(id, data) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this3.http.put(_this3.baseUrl, `assignment/${id}/publish`, data);\n      })();\n    }\n    // ✅ PUT: UnPublish assignment\n    unPublishAssignment(id, data) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this4.http.put(_this4.baseUrl, `assignment/${id}/unpublish`, data);\n      })();\n    }\n    // ✅ DELETE: Delete assignment\n    deleteAssignment(id) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this5.http.delete(_this5.baseUrl, `assignment/${id}/delete`);\n      })();\n    }\n    // ✅ GET: Get assignment by ID\n    getAssignmentById(id) {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this6.http.get(_this6.baseUrl, `assignment/${id}`);\n      })();\n    }\n    // ✅ GET: Get all assignments\n    getAllAssignments() {\n      var _this7 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this7.http.get(_this7.baseUrl, `assignment/all`);\n      })();\n    }\n    // ✅ GET: Get all assignments by tech\n    getAssignmentsOverView() {\n      var _this8 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this8.http.get(_this8.baseUrl, `assignment/overview`);\n      })();\n    }\n    static ɵfac = function AssignmentApiService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AssignmentApiService)(i0.ɵɵinject(i1.ApiService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AssignmentApiService,\n      factory: AssignmentApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AssignmentApiService;\n})();","map":{"version":3,"names":["environment","AssignmentApiService","http","constructor","baseUrl","contentApiUrl","createAssignment","data","_this","_asyncToGenerator","post","updateAssignment","id","_this2","put","publishAssignment","_this3","unPublishAssignment","_this4","deleteAssignment","_this5","delete","getAssignmentById","_this6","get","getAllAssignments","_this7","getAssignmentsOverView","_this8","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\content\\services\\assignment-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AssignmentDto, AssignmentsOverviewDataDto, CreateAssignmentDto, UpdateAssignmentDto } from '../../models/assignment.model';\r\nimport { ApiService } from '../../core/services/apiservice';\r\nimport { environment } from '../../../environment';\r\nimport { Technologies } from '../../models/Enums';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AssignmentApiService {\r\n  constructor(private http: ApiService) {}\r\n  private baseUrl = environment.contentApiUrl;\r\n\r\n\r\n  // ✅ POST: Create new assignment\r\n  async createAssignment(data: CreateAssignmentDto): Promise<string> {\r\n    return await this.http.post(this.baseUrl, 'assignment/add', data);\r\n  }\r\n\r\n  // ✅ PUT: Update existing assignment\r\n  async updateAssignment(id: string, data: UpdateAssignmentDto): Promise<void> {\r\n    return await this.http.put(this.baseUrl, `assignment/${id}/update`, data);\r\n  }\r\n\r\n  // ✅ PUT: Publish assignment\r\n  async publishAssignment(id: string, data: UpdateAssignmentDto): Promise<void> {\r\n    return await this.http.put(this.baseUrl, `assignment/${id}/publish`, data);\r\n  }\r\n\r\n  // ✅ PUT: UnPublish assignment\r\n  async unPublishAssignment(id: string, data: UpdateAssignmentDto): Promise<void> {\r\n    return await this.http.put(this.baseUrl, `assignment/${id}/unpublish`, data);\r\n  }\r\n\r\n\r\n  // ✅ DELETE: Delete assignment\r\n  async deleteAssignment(id: string): Promise<void> {\r\n    return await this.http.delete(this.baseUrl, `assignment/${id}/delete`);\r\n  }\r\n\r\n  // ✅ GET: Get assignment by ID\r\n  async getAssignmentById(id: string): Promise<AssignmentDto> {\r\n    return await this.http.get(this.baseUrl, `assignment/${id}`);\r\n  }\r\n\r\n  // ✅ GET: Get all assignments\r\n  async getAllAssignments(): Promise<AssignmentDto[]> {\r\n    return await this.http.get(this.baseUrl, `assignment/all`);\r\n  }\r\n\r\n  // ✅ GET: Get all assignments by tech\r\n  async getAssignmentsOverView(): Promise<AssignmentsOverviewDataDto[]> {\r\n    return await this.http.get(this.baseUrl, `assignment/overview`);\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;AAIlD,WAAaC,oBAAoB;EAA3B,MAAOA,oBAAoB;IACXC,IAAA;IAApBC,YAAoBD,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAC/BE,OAAO,GAAGJ,WAAW,CAACK,aAAa;IAG3C;IACMC,gBAAgBA,CAACC,IAAyB;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QAC9C,aAAaD,KAAI,CAACN,IAAI,CAACQ,IAAI,CAACF,KAAI,CAACJ,OAAO,EAAE,gBAAgB,EAAEG,IAAI,CAAC;MAAC;IACpE;IAEA;IACMI,gBAAgBA,CAACC,EAAU,EAAEL,IAAyB;MAAA,IAAAM,MAAA;MAAA,OAAAJ,iBAAA;QAC1D,aAAaI,MAAI,CAACX,IAAI,CAACY,GAAG,CAACD,MAAI,CAACT,OAAO,EAAE,cAAcQ,EAAE,SAAS,EAAEL,IAAI,CAAC;MAAC;IAC5E;IAEA;IACMQ,iBAAiBA,CAACH,EAAU,EAAEL,IAAyB;MAAA,IAAAS,MAAA;MAAA,OAAAP,iBAAA;QAC3D,aAAaO,MAAI,CAACd,IAAI,CAACY,GAAG,CAACE,MAAI,CAACZ,OAAO,EAAE,cAAcQ,EAAE,UAAU,EAAEL,IAAI,CAAC;MAAC;IAC7E;IAEA;IACMU,mBAAmBA,CAACL,EAAU,EAAEL,IAAyB;MAAA,IAAAW,MAAA;MAAA,OAAAT,iBAAA;QAC7D,aAAaS,MAAI,CAAChB,IAAI,CAACY,GAAG,CAACI,MAAI,CAACd,OAAO,EAAE,cAAcQ,EAAE,YAAY,EAAEL,IAAI,CAAC;MAAC;IAC/E;IAGA;IACMY,gBAAgBA,CAACP,EAAU;MAAA,IAAAQ,MAAA;MAAA,OAAAX,iBAAA;QAC/B,aAAaW,MAAI,CAAClB,IAAI,CAACmB,MAAM,CAACD,MAAI,CAAChB,OAAO,EAAE,cAAcQ,EAAE,SAAS,CAAC;MAAC;IACzE;IAEA;IACMU,iBAAiBA,CAACV,EAAU;MAAA,IAAAW,MAAA;MAAA,OAAAd,iBAAA;QAChC,aAAac,MAAI,CAACrB,IAAI,CAACsB,GAAG,CAACD,MAAI,CAACnB,OAAO,EAAE,cAAcQ,EAAE,EAAE,CAAC;MAAC;IAC/D;IAEA;IACMa,iBAAiBA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAjB,iBAAA;QACrB,aAAaiB,MAAI,CAACxB,IAAI,CAACsB,GAAG,CAACE,MAAI,CAACtB,OAAO,EAAE,gBAAgB,CAAC;MAAC;IAC7D;IAEA;IACMuB,sBAAsBA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAnB,iBAAA;QAC1B,aAAamB,MAAI,CAAC1B,IAAI,CAACsB,GAAG,CAACI,MAAI,CAACxB,OAAO,EAAE,qBAAqB,CAAC;MAAC;IAClE;;uCA5CWH,oBAAoB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAApB/B,oBAAoB;MAAAgC,OAAA,EAApBhC,oBAAoB,CAAAiC,IAAA;MAAAC,UAAA,EADP;IAAM;;SACnBlC,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}