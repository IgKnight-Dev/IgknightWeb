{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nclass SimplePasteAndDropProvider {\n  provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const edit = yield _this.getEdit(dataTransfer, token);\n      if (!edit) {\n        return undefined;\n      }\n      return {\n        edits: [{\n          insertText: edit.insertText,\n          title: edit.title,\n          kind: edit.kind,\n          handledMimeType: edit.handledMimeType,\n          yieldTo: edit.yieldTo\n        }],\n        dispose() {}\n      };\n    })();\n  }\n  provideDocumentDropEdits(_model, _position, dataTransfer, token) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const edit = yield _this2.getEdit(dataTransfer, token);\n      if (!edit) {\n        return;\n      }\n      return {\n        edits: [{\n          insertText: edit.insertText,\n          title: edit.title,\n          kind: edit.kind,\n          handledMimeType: edit.handledMimeType,\n          yieldTo: edit.yieldTo\n        }],\n        dispose() {}\n      };\n    })();\n  }\n}\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.kind = DefaultTextPasteOrDropEditProvider.kind;\n    this.dropMimeTypes = [Mimes.text];\n    this.pasteMimeTypes = [Mimes.text];\n  }\n  static #_ = this.id = 'text';\n  static #_2 = this.kind = new HierarchicalKind('text.plain');\n  getEdit(dataTransfer, _token) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const textEntry = dataTransfer.get(Mimes.text);\n      if (!textEntry) {\n        return;\n      }\n      // Suppress if there's also a uriList entry.\n      // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n      if (dataTransfer.has(Mimes.uriList)) {\n        return;\n      }\n      const insertText = yield textEntry.asString();\n      return {\n        handledMimeType: Mimes.text,\n        title: localize('text.label', \"Insert Plain Text\"),\n        insertText,\n        kind: _this3.kind\n      };\n    })();\n  }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.kind = new HierarchicalKind('uri.absolute');\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  getEdit(dataTransfer, token) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const entries = yield extractUriList(dataTransfer);\n      if (!entries.length || token.isCancellationRequested) {\n        return;\n      }\n      let uriCount = 0;\n      const insertText = entries.map(({\n        uri,\n        originalText\n      }) => {\n        if (uri.scheme === Schemas.file) {\n          return uri.fsPath;\n        } else {\n          uriCount++;\n          return originalText;\n        }\n      }).join(' ');\n      let label;\n      if (uriCount > 0) {\n        // Dropping at least one generic uri (such as https) so use most generic label\n        label = entries.length > 1 ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\") : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n      } else {\n        // All the paths are file paths\n        label = entries.length > 1 ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\") : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n      }\n      return {\n        handledMimeType: Mimes.uriList,\n        insertText,\n        title: label,\n        kind: _this4.kind\n      };\n    })();\n  }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n  constructor(_workspaceContextService) {\n    super();\n    this._workspaceContextService = _workspaceContextService;\n    this.kind = new HierarchicalKind('uri.relative');\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  getEdit(dataTransfer, token) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const entries = yield extractUriList(dataTransfer);\n      if (!entries.length || token.isCancellationRequested) {\n        return;\n      }\n      const relativeUris = coalesce(entries.map(({\n        uri\n      }) => {\n        const root = _this5._workspaceContextService.getWorkspaceFolder(uri);\n        return root ? relativePath(root.uri, uri) : undefined;\n      }));\n      if (!relativeUris.length) {\n        return;\n      }\n      return {\n        handledMimeType: Mimes.uriList,\n        insertText: relativeUris.join(' '),\n        title: entries.length > 1 ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\") : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n        kind: _this5.kind\n      };\n    })();\n  }\n};\nRelativePathProvider = __decorate([__param(0, IWorkspaceContextService)], RelativePathProvider);\nclass PasteHtmlProvider {\n  constructor() {\n    this.kind = new HierarchicalKind('html');\n    this.pasteMimeTypes = ['text/html'];\n    this._yieldTo = [{\n      mimeType: Mimes.text\n    }];\n  }\n  provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !context.only?.contains(_this6.kind)) {\n        return;\n      }\n      const entry = dataTransfer.get('text/html');\n      const htmlText = yield entry?.asString();\n      if (!htmlText || token.isCancellationRequested) {\n        return;\n      }\n      return {\n        dispose() {},\n        edits: [{\n          insertText: htmlText,\n          yieldTo: _this6._yieldTo,\n          title: localize('pasteHtmlLabel', 'Insert HTML'),\n          kind: _this6.kind\n        }]\n      };\n    })();\n  }\n}\nfunction extractUriList(_x) {\n  return _extractUriList.apply(this, arguments);\n}\nfunction _extractUriList() {\n  _extractUriList = _asyncToGenerator(function* (dataTransfer) {\n    const urlListEntry = dataTransfer.get(Mimes.uriList);\n    if (!urlListEntry) {\n      return [];\n    }\n    const strUriList = yield urlListEntry.asString();\n    const entries = [];\n    for (const entry of UriList.parse(strUriList)) {\n      try {\n        entries.push({\n          uri: URI.parse(entry),\n          originalText: entry\n        });\n      } catch {\n        // noop\n      }\n    }\n    return entries;\n  });\n  return _extractUriList.apply(this, arguments);\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n  }\n};\nDefaultDropProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n  }\n};\nDefaultPasteProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","coalesce","UriList","HierarchicalKind","Disposable","Mimes","Schemas","relativePath","URI","DocumentPasteTriggerKind","ILanguageFeaturesService","localize","IWorkspaceContextService","SimplePasteAndDropProvider","provideDocumentPasteEdits","_model","_ranges","dataTransfer","context","token","_this","_asyncToGenerator","edit","getEdit","undefined","edits","insertText","title","kind","handledMimeType","yieldTo","dispose","provideDocumentDropEdits","_position","_this2","DefaultTextPasteOrDropEditProvider","constructor","dropMimeTypes","text","pasteMimeTypes","_","id","_2","_token","_this3","textEntry","get","has","uriList","asString","PathProvider","_this4","entries","extractUriList","isCancellationRequested","uriCount","map","uri","originalText","scheme","file","fsPath","join","label","RelativePathProvider","_workspaceContextService","_this5","relativeUris","root","getWorkspaceFolder","PasteHtmlProvider","_yieldTo","mimeType","_this6","triggerKind","PasteAs","only","contains","entry","htmlText","_x","_extractUriList","apply","urlListEntry","strUriList","parse","push","DefaultDropProvidersFeature","languageFeaturesService","workspaceContextService","_register","documentDropEditProvider","register","DefaultPasteProvidersFeature","documentPasteEditProvider"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nclass SimplePasteAndDropProvider {\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        if (!edit) {\n            return undefined;\n        }\n        return {\n            edits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n            dispose() { },\n        };\n    }\n    async provideDocumentDropEdits(_model, _position, dataTransfer, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        if (!edit) {\n            return;\n        }\n        return {\n            edits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n            dispose() { },\n        };\n    }\n}\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = DefaultTextPasteOrDropEditProvider.kind;\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    static { this.id = 'text'; }\n    static { this.kind = new HierarchicalKind('text.plain'); }\n    async getEdit(dataTransfer, _token) {\n        const textEntry = dataTransfer.get(Mimes.text);\n        if (!textEntry) {\n            return;\n        }\n        // Suppress if there's also a uriList entry.\n        // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n        if (dataTransfer.has(Mimes.uriList)) {\n            return;\n        }\n        const insertText = await textEntry.asString();\n        return {\n            handledMimeType: Mimes.text,\n            title: localize('text.label', \"Insert Plain Text\"),\n            insertText,\n            kind: this.kind,\n        };\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = new HierarchicalKind('uri.absolute');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        let uriCount = 0;\n        const insertText = entries\n            .map(({ uri, originalText }) => {\n            if (uri.scheme === Schemas.file) {\n                return uri.fsPath;\n            }\n            else {\n                uriCount++;\n                return originalText;\n            }\n        })\n            .join(' ');\n        let label;\n        if (uriCount > 0) {\n            // Dropping at least one generic uri (such as https) so use most generic label\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n        }\n        else {\n            // All the paths are file paths\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText,\n            title: label,\n            kind: this.kind,\n        };\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.kind = new HierarchicalKind('uri.relative');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        const relativeUris = coalesce(entries.map(({ uri }) => {\n            const root = this._workspaceContextService.getWorkspaceFolder(uri);\n            return root ? relativePath(root.uri, uri) : undefined;\n        }));\n        if (!relativeUris.length) {\n            return;\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText: relativeUris.join(' '),\n            title: entries.length > 1\n                ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n            kind: this.kind,\n        };\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nclass PasteHtmlProvider {\n    constructor() {\n        this.kind = new HierarchicalKind('html');\n        this.pasteMimeTypes = ['text/html'];\n        this._yieldTo = [{ mimeType: Mimes.text }];\n    }\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        if (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !context.only?.contains(this.kind)) {\n            return;\n        }\n        const entry = dataTransfer.get('text/html');\n        const htmlText = await entry?.asString();\n        if (!htmlText || token.isCancellationRequested) {\n            return;\n        }\n        return {\n            dispose() { },\n            edits: [{\n                    insertText: htmlText,\n                    yieldTo: this._yieldTo,\n                    title: localize('pasteHtmlLabel', 'Insert HTML'),\n                    kind: this.kind,\n                }],\n        };\n    }\n}\nasync function extractUriList(dataTransfer) {\n    const urlListEntry = dataTransfer.get(Mimes.uriList);\n    if (!urlListEntry) {\n        return [];\n    }\n    const strUriList = await urlListEntry.asString();\n    const entries = [];\n    for (const entry of UriList.parse(strUriList)) {\n        try {\n            entries.push({ uri: URI.parse(entry), originalText: entry });\n        }\n        catch {\n            // noop\n        }\n    }\n    return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}