{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatchForeground, editorFindMatchHighlightBorder, editorFindMatchHighlightForeground, editorFindRangeHighlightBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */;\nexport class FindWidgetViewZone {\n  constructor(afterLineNumber) {\n    this.afterLineNumber = afterLineNumber;\n    this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n    this.suppressMouseDown = false;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'dock-find-viewzone';\n  }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionStart > 0) {\n    event.stopPropagation();\n    return;\n  }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n    event.stopPropagation();\n    return;\n  }\n}\nexport let FindWidget = /*#__PURE__*/(() => {\n  class FindWidget extends Widget {\n    static #_ = this.ID = 'editor.contrib.findWidget';\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService, _hoverService) {\n      var _this;\n      super();\n      _this = this;\n      this._hoverService = _hoverService;\n      this._cachedHeight = null;\n      this._revealTimeouts = [];\n      this._codeEditor = codeEditor;\n      this._controller = controller;\n      this._state = state;\n      this._contextViewProvider = contextViewProvider;\n      this._keybindingService = keybindingService;\n      this._contextKeyService = contextKeyService;\n      this._storageService = storageService;\n      this._notificationService = notificationService;\n      this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n      this._isVisible = false;\n      this._isReplaceVisible = false;\n      this._ignoreChangeEvent = false;\n      this._updateHistoryDelayer = new Delayer(500);\n      this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n      this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n      this._buildDomNode();\n      this._updateButtons();\n      this._tryUpdateWidgetWidth();\n      this._findInput.inputBox.layout();\n      this._register(this._codeEditor.onDidChangeConfiguration(e => {\n        if (e.hasChanged(92 /* EditorOption.readOnly */)) {\n          if (this._codeEditor.getOption(92 /* EditorOption.readOnly */)) {\n            // Hide replace part if editor becomes read only\n            this._state.change({\n              isReplaceRevealed: false\n            }, false);\n          }\n          this._updateButtons();\n        }\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n          this._tryUpdateWidgetWidth();\n        }\n        if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n          this.updateAccessibilitySupport();\n        }\n        if (e.hasChanged(41 /* EditorOption.find */)) {\n          const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n          this._state.change({\n            loop: supportLoop\n          }, false);\n          const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n          if (addExtraSpaceOnTop && !this._viewZone) {\n            this._viewZone = new FindWidgetViewZone(0);\n            this._showViewZone();\n          }\n          if (!addExtraSpaceOnTop && this._viewZone) {\n            this._removeViewZone();\n          }\n        }\n      }));\n      this.updateAccessibilitySupport();\n      this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n        if (this._isVisible) {\n          this._updateToggleSelectionFindButton();\n        }\n      }));\n      this._register(this._codeEditor.onDidFocusEditorWidget(/*#__PURE__*/_asyncToGenerator(function* () {\n        if (_this._isVisible) {\n          const globalBufferTerm = yield _this._controller.getGlobalBufferTerm();\n          if (globalBufferTerm && globalBufferTerm !== _this._state.searchString) {\n            _this._state.change({\n              searchString: globalBufferTerm\n            }, false);\n            _this._findInput.select();\n          }\n        }\n      })));\n      this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n      this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n      this._register(this._findFocusTracker.onDidFocus(() => {\n        this._findInputFocused.set(true);\n        this._updateSearchScope();\n      }));\n      this._register(this._findFocusTracker.onDidBlur(() => {\n        this._findInputFocused.set(false);\n      }));\n      this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n      this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n      this._register(this._replaceFocusTracker.onDidFocus(() => {\n        this._replaceInputFocused.set(true);\n        this._updateSearchScope();\n      }));\n      this._register(this._replaceFocusTracker.onDidBlur(() => {\n        this._replaceInputFocused.set(false);\n      }));\n      this._codeEditor.addOverlayWidget(this);\n      if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n        this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n      }\n      this._register(this._codeEditor.onDidChangeModel(() => {\n        if (!this._isVisible) {\n          return;\n        }\n        this._viewZoneId = undefined;\n      }));\n      this._register(this._codeEditor.onDidScrollChange(e => {\n        if (e.scrollTopChanged) {\n          this._layoutViewZone();\n          return;\n        }\n        // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n        setTimeout(() => {\n          this._layoutViewZone();\n        }, 0);\n      }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n      return FindWidget.ID;\n    }\n    getDomNode() {\n      return this._domNode;\n    }\n    getPosition() {\n      if (this._isVisible) {\n        return {\n          preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n      }\n      return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n      if (e.searchString) {\n        try {\n          this._ignoreChangeEvent = true;\n          this._findInput.setValue(this._state.searchString);\n        } finally {\n          this._ignoreChangeEvent = false;\n        }\n        this._updateButtons();\n      }\n      if (e.replaceString) {\n        this._replaceInput.inputBox.value = this._state.replaceString;\n      }\n      if (e.isRevealed) {\n        if (this._state.isRevealed) {\n          this._reveal();\n        } else {\n          this._hide(true);\n        }\n      }\n      if (e.isReplaceRevealed) {\n        if (this._state.isReplaceRevealed) {\n          if (!this._codeEditor.getOption(92 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n            this._isReplaceVisible = true;\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            this._updateButtons();\n            this._replaceInput.inputBox.layout();\n          }\n        } else {\n          if (this._isReplaceVisible) {\n            this._isReplaceVisible = false;\n            this._updateButtons();\n          }\n        }\n      }\n      if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n        if (this._tryUpdateHeight()) {\n          this._showViewZone();\n        }\n      }\n      if (e.isRegex) {\n        this._findInput.setRegex(this._state.isRegex);\n      }\n      if (e.wholeWord) {\n        this._findInput.setWholeWords(this._state.wholeWord);\n      }\n      if (e.matchCase) {\n        this._findInput.setCaseSensitive(this._state.matchCase);\n      }\n      if (e.preserveCase) {\n        this._replaceInput.setPreserveCase(this._state.preserveCase);\n      }\n      if (e.searchScope) {\n        if (this._state.searchScope) {\n          this._toggleSelectionFind.checked = true;\n        } else {\n          this._toggleSelectionFind.checked = false;\n        }\n        this._updateToggleSelectionFindButton();\n      }\n      if (e.searchString || e.matchesCount || e.matchesPosition) {\n        const showRedOutline = this._state.searchString.length > 0 && this._state.matchesCount === 0;\n        this._domNode.classList.toggle('no-results', showRedOutline);\n        this._updateMatchesCount();\n        this._updateButtons();\n      }\n      if (e.searchString || e.currentMatch) {\n        this._layoutViewZone();\n      }\n      if (e.updateHistory) {\n        this._delayedUpdateHistory();\n      }\n      if (e.loop) {\n        this._updateButtons();\n      }\n    }\n    _delayedUpdateHistory() {\n      this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n      if (this._state.searchString) {\n        this._findInput.inputBox.addToHistory();\n      }\n      if (this._state.replaceString) {\n        this._replaceInput.inputBox.addToHistory();\n      }\n    }\n    _updateMatchesCount() {\n      this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n      if (this._state.matchesCount >= MATCHES_LIMIT) {\n        this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n      } else {\n        this._matchesCount.title = '';\n      }\n      // remove previous content\n      this._matchesCount.firstChild?.remove();\n      let label;\n      if (this._state.matchesCount > 0) {\n        let matchesCount = String(this._state.matchesCount);\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n          matchesCount += '+';\n        }\n        let matchesPosition = String(this._state.matchesPosition);\n        if (matchesPosition === '0') {\n          matchesPosition = '?';\n        }\n        label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n      } else {\n        label = NLS_NO_RESULTS;\n      }\n      this._matchesCount.appendChild(document.createTextNode(label));\n      alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n      MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n      if (label === NLS_NO_RESULTS) {\n        return searchString === '' ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label) : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n      }\n      if (currentMatch) {\n        const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n        const model = this._codeEditor.getModel();\n        if (model && currentMatch.startLineNumber <= model.getLineCount() && currentMatch.startLineNumber >= 1) {\n          const lineContent = model.getLineContent(currentMatch.startLineNumber);\n          return `${lineContent}, ${ariaLabel}`;\n        }\n        return ariaLabel;\n      }\n      return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n      const selection = this._codeEditor.getSelection();\n      const isSelection = selection ? selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn : false;\n      const isChecked = this._toggleSelectionFind.checked;\n      if (this._isVisible && (isChecked || isSelection)) {\n        this._toggleSelectionFind.enable();\n      } else {\n        this._toggleSelectionFind.disable();\n      }\n    }\n    _updateButtons() {\n      this._findInput.setEnabled(this._isVisible);\n      this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n      this._updateToggleSelectionFindButton();\n      this._closeBtn.setEnabled(this._isVisible);\n      const findInputIsNonEmpty = this._state.searchString.length > 0;\n      const matchesCount = this._state.matchesCount ? true : false;\n      this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n      this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n      this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n      this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n      this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n      this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n      const canReplace = !this._codeEditor.getOption(92 /* EditorOption.readOnly */);\n      this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n      this._revealTimeouts.forEach(e => {\n        clearTimeout(e);\n      });\n      this._revealTimeouts = [];\n      if (!this._isVisible) {\n        this._isVisible = true;\n        const selection = this._codeEditor.getSelection();\n        switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n          case 'always':\n            this._toggleSelectionFind.checked = true;\n            break;\n          case 'never':\n            this._toggleSelectionFind.checked = false;\n            break;\n          case 'multiline':\n            {\n              const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n              this._toggleSelectionFind.checked = isSelectionMultipleLine;\n              break;\n            }\n          default:\n            break;\n        }\n        this._tryUpdateWidgetWidth();\n        this._updateButtons();\n        this._revealTimeouts.push(setTimeout(() => {\n          this._domNode.classList.add('visible');\n          this._domNode.setAttribute('aria-hidden', 'false');\n        }, 0));\n        // validate query again as it's being dismissed when we hide the find widget.\n        this._revealTimeouts.push(setTimeout(() => {\n          this._findInput.validate();\n        }, 200));\n        this._codeEditor.layoutOverlayWidget(this);\n        let adjustEditorScrollTop = true;\n        if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n          const domNode = this._codeEditor.getDomNode();\n          if (domNode) {\n            const editorCoords = dom.getDomNodePagePosition(domNode);\n            const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n            const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n            const startTop = startCoords ? startCoords.top : 0;\n            if (this._viewZone && startTop < this._viewZone.heightInPx) {\n              if (selection.endLineNumber > selection.startLineNumber) {\n                adjustEditorScrollTop = false;\n              }\n              const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n              if (startLeft > leftOfFindWidget) {\n                adjustEditorScrollTop = false;\n              }\n              const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n              const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n              if (endLeft > leftOfFindWidget) {\n                adjustEditorScrollTop = false;\n              }\n            }\n          }\n        }\n        this._showViewZone(adjustEditorScrollTop);\n      }\n    }\n    _hide(focusTheEditor) {\n      this._revealTimeouts.forEach(e => {\n        clearTimeout(e);\n      });\n      this._revealTimeouts = [];\n      if (this._isVisible) {\n        this._isVisible = false;\n        this._updateButtons();\n        this._domNode.classList.remove('visible');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._findInput.clearMessage();\n        if (focusTheEditor) {\n          this._codeEditor.focus();\n        }\n        this._codeEditor.layoutOverlayWidget(this);\n        this._removeViewZone();\n      }\n    }\n    _layoutViewZone(targetScrollTop) {\n      const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n      if (!addExtraSpaceOnTop) {\n        this._removeViewZone();\n        return;\n      }\n      if (!this._isVisible) {\n        return;\n      }\n      const viewZone = this._viewZone;\n      if (this._viewZoneId !== undefined || !viewZone) {\n        return;\n      }\n      this._codeEditor.changeViewZones(accessor => {\n        viewZone.heightInPx = this._getHeight();\n        this._viewZoneId = accessor.addZone(viewZone);\n        // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n        this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n      });\n    }\n    _showViewZone(adjustScroll = true) {\n      if (!this._isVisible) {\n        return;\n      }\n      const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n      if (!addExtraSpaceOnTop) {\n        return;\n      }\n      if (this._viewZone === undefined) {\n        this._viewZone = new FindWidgetViewZone(0);\n      }\n      const viewZone = this._viewZone;\n      this._codeEditor.changeViewZones(accessor => {\n        if (this._viewZoneId !== undefined) {\n          // the view zone already exists, we need to update the height\n          const newHeight = this._getHeight();\n          if (newHeight === viewZone.heightInPx) {\n            return;\n          }\n          const scrollAdjustment = newHeight - viewZone.heightInPx;\n          viewZone.heightInPx = newHeight;\n          accessor.layoutZone(this._viewZoneId);\n          if (adjustScroll) {\n            this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n          }\n          return;\n        } else {\n          let scrollAdjustment = this._getHeight();\n          // if the editor has top padding, factor that into the zone height\n          scrollAdjustment -= this._codeEditor.getOption(84 /* EditorOption.padding */).top;\n          if (scrollAdjustment <= 0) {\n            return;\n          }\n          viewZone.heightInPx = scrollAdjustment;\n          this._viewZoneId = accessor.addZone(viewZone);\n          if (adjustScroll) {\n            this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n          }\n        }\n      });\n    }\n    _removeViewZone() {\n      this._codeEditor.changeViewZones(accessor => {\n        if (this._viewZoneId !== undefined) {\n          accessor.removeZone(this._viewZoneId);\n          this._viewZoneId = undefined;\n          if (this._viewZone) {\n            this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n            this._viewZone = undefined;\n          }\n        }\n      });\n    }\n    _tryUpdateWidgetWidth() {\n      if (!this._isVisible) {\n        return;\n      }\n      if (!this._domNode.isConnected) {\n        // the widget is not in the DOM\n        return;\n      }\n      const layoutInfo = this._codeEditor.getLayoutInfo();\n      const editorContentWidth = layoutInfo.contentWidth;\n      if (editorContentWidth <= 0) {\n        // for example, diff view original editor\n        this._domNode.classList.add('hiddenEditor');\n        return;\n      } else if (this._domNode.classList.contains('hiddenEditor')) {\n        this._domNode.classList.remove('hiddenEditor');\n      }\n      const editorWidth = layoutInfo.width;\n      const minimapWidth = layoutInfo.minimap.minimapWidth;\n      let collapsedFindWidget = false;\n      let reducedFindWidget = false;\n      let narrowFindWidget = false;\n      if (this._resized) {\n        const widgetWidth = dom.getTotalWidth(this._domNode);\n        if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n          // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n          this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n          return;\n        }\n      }\n      if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n        reducedFindWidget = true;\n      }\n      if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n        narrowFindWidget = true;\n      }\n      if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n        collapsedFindWidget = true;\n      }\n      this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n      this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n      this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n      if (!narrowFindWidget && !collapsedFindWidget) {\n        // the minimal left offset of findwidget is 15px.\n        this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n      }\n      this._findInput.layout({\n        collapsedFindWidget,\n        narrowFindWidget,\n        reducedFindWidget\n      });\n      if (this._resized) {\n        const findInputWidth = this._findInput.inputBox.element.clientWidth;\n        if (findInputWidth > 0) {\n          this._replaceInput.width = findInputWidth;\n        }\n      } else if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n    }\n    _getHeight() {\n      let totalheight = 0;\n      // find input margin top\n      totalheight += 4;\n      // find input height\n      totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n      if (this._isReplaceVisible) {\n        // replace input margin\n        totalheight += 4;\n        totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n      }\n      // margin bottom\n      totalheight += 4;\n      return totalheight;\n    }\n    _tryUpdateHeight() {\n      const totalHeight = this._getHeight();\n      if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n        return false;\n      }\n      this._cachedHeight = totalHeight;\n      this._domNode.style.height = `${totalHeight}px`;\n      return true;\n    }\n    // ----- Public\n    focusFindInput() {\n      this._findInput.select();\n      // Edge browser requires focus() in addition to select()\n      this._findInput.focus();\n    }\n    focusReplaceInput() {\n      this._replaceInput.select();\n      // Edge browser requires focus() in addition to select()\n      this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n      this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n      if (!this._codeEditor.hasModel()) {\n        return;\n      }\n      if (this._toggleSelectionFind.checked) {\n        const selections = this._codeEditor.getSelections();\n        selections.map(selection => {\n          if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n          }\n          const currentMatch = this._state.currentMatch;\n          if (selection.startLineNumber !== selection.endLineNumber) {\n            if (!Range.equalsRange(selection, currentMatch)) {\n              return selection;\n            }\n          }\n          return null;\n        }).filter(element => !!element);\n        if (selections.length) {\n          this._state.change({\n            searchScope: selections\n          }, true);\n        }\n      }\n    }\n    _onFindInputMouseDown(e) {\n      // on linux, middle key does pasting.\n      if (e.middleButton) {\n        e.stopPropagation();\n      }\n    }\n    _onFindInputKeyDown(e) {\n      if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n        if (this._keybindingService.dispatchEvent(e, e.target)) {\n          e.preventDefault();\n          return;\n        } else {\n          this._findInput.inputBox.insertAtCursor('\\n');\n          e.preventDefault();\n          return;\n        }\n      }\n      if (e.equals(2 /* KeyCode.Tab */)) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focus();\n        } else {\n          this._findInput.focusOnCaseSensitive();\n        }\n        e.preventDefault();\n        return;\n      }\n      if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n        this._codeEditor.focus();\n        e.preventDefault();\n        return;\n      }\n      if (e.equals(16 /* KeyCode.UpArrow */)) {\n        return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n      }\n      if (e.equals(18 /* KeyCode.DownArrow */)) {\n        return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n      }\n    }\n    _onReplaceInputKeyDown(e) {\n      if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n        if (this._keybindingService.dispatchEvent(e, e.target)) {\n          e.preventDefault();\n          return;\n        } else {\n          if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n            // this is the first time when users press Ctrl + Enter to replace all\n            this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n            this._ctrlEnterReplaceAllWarningPrompted = true;\n            this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n          }\n          this._replaceInput.inputBox.insertAtCursor('\\n');\n          e.preventDefault();\n          return;\n        }\n      }\n      if (e.equals(2 /* KeyCode.Tab */)) {\n        this._findInput.focusOnCaseSensitive();\n        e.preventDefault();\n        return;\n      }\n      if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n        this._findInput.focus();\n        e.preventDefault();\n        return;\n      }\n      if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n        this._codeEditor.focus();\n        e.preventDefault();\n        return;\n      }\n      if (e.equals(16 /* KeyCode.UpArrow */)) {\n        return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n      }\n      if (e.equals(18 /* KeyCode.DownArrow */)) {\n        return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n      }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n      return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n      const kb = this._keybindingService.lookupKeybinding(actionId);\n      if (!kb) {\n        return '';\n      }\n      return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n      const flexibleHeight = true;\n      const flexibleWidth = true;\n      // Find input\n      this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n        width: FIND_INPUT_AREA_WIDTH,\n        label: NLS_FIND_INPUT_LABEL,\n        placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n        appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n        appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n        appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n        validation: value => {\n          if (value.length === 0 || !this._findInput.getRegex()) {\n            return null;\n          }\n          try {\n            // use `g` and `u` which are also used by the TextModel search\n            new RegExp(value, 'gu');\n            return null;\n          } catch (e) {\n            return {\n              content: e.message\n            };\n          }\n        },\n        flexibleHeight,\n        flexibleWidth,\n        flexibleMaxHeight: 118,\n        showCommonFindToggles: true,\n        showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n        inputBoxStyles: defaultInputBoxStyles,\n        toggleStyles: defaultToggleStyles\n      }, this._contextKeyService));\n      this._findInput.setRegex(!!this._state.isRegex);\n      this._findInput.setCaseSensitive(!!this._state.matchCase);\n      this._findInput.setWholeWords(!!this._state.wholeWord);\n      this._register(this._findInput.onKeyDown(e => this._onFindInputKeyDown(e)));\n      this._register(this._findInput.inputBox.onDidChange(() => {\n        if (this._ignoreChangeEvent) {\n          return;\n        }\n        this._state.change({\n          searchString: this._findInput.getValue()\n        }, true);\n      }));\n      this._register(this._findInput.onDidOptionChange(() => {\n        this._state.change({\n          isRegex: this._findInput.getRegex(),\n          wholeWord: this._findInput.getWholeWords(),\n          matchCase: this._findInput.getCaseSensitive()\n        }, true);\n      }));\n      this._register(this._findInput.onCaseSensitiveKeyDown(e => {\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n          if (this._isReplaceVisible) {\n            this._replaceInput.focus();\n            e.preventDefault();\n          }\n        }\n      }));\n      this._register(this._findInput.onRegexKeyDown(e => {\n        if (e.equals(2 /* KeyCode.Tab */)) {\n          if (this._isReplaceVisible) {\n            this._replaceInput.focusOnPreserve();\n            e.preventDefault();\n          }\n        }\n      }));\n      this._register(this._findInput.inputBox.onDidHeightChange(e => {\n        if (this._tryUpdateHeight()) {\n          this._showViewZone();\n        }\n      }));\n      if (platform.isLinux) {\n        this._register(this._findInput.onMouseDown(e => this._onFindInputMouseDown(e)));\n      }\n      this._matchesCount = document.createElement('div');\n      this._matchesCount.className = 'matchesCount';\n      this._updateMatchesCount();\n      // Create a scoped hover delegate for all find related buttons\n      const hoverDelegate = this._register(createInstantHoverDelegate());\n      // Previous button\n      this._prevBtn = this._register(new SimpleButton({\n        label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n        icon: findPreviousMatchIcon,\n        hoverDelegate,\n        onTrigger: () => {\n          assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n        }\n      }, this._hoverService));\n      // Next button\n      this._nextBtn = this._register(new SimpleButton({\n        label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n        icon: findNextMatchIcon,\n        hoverDelegate,\n        onTrigger: () => {\n          assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n        }\n      }, this._hoverService));\n      const findPart = document.createElement('div');\n      findPart.className = 'find-part';\n      findPart.appendChild(this._findInput.domNode);\n      const actionsContainer = document.createElement('div');\n      actionsContainer.className = 'find-actions';\n      findPart.appendChild(actionsContainer);\n      actionsContainer.appendChild(this._matchesCount);\n      actionsContainer.appendChild(this._prevBtn.domNode);\n      actionsContainer.appendChild(this._nextBtn.domNode);\n      // Toggle selection button\n      this._toggleSelectionFind = this._register(new Toggle({\n        icon: findSelectionIcon,\n        title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n        isChecked: false,\n        hoverDelegate: hoverDelegate,\n        inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n        inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground)\n      }));\n      this._register(this._toggleSelectionFind.onChange(() => {\n        if (this._toggleSelectionFind.checked) {\n          if (this._codeEditor.hasModel()) {\n            let selections = this._codeEditor.getSelections();\n            selections = selections.map(selection => {\n              if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n              }\n              if (!selection.isEmpty()) {\n                return selection;\n              }\n              return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n              this._state.change({\n                searchScope: selections\n              }, true);\n            }\n          }\n        } else {\n          this._state.change({\n            searchScope: null\n          }, true);\n        }\n      }));\n      actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n      // Close button\n      this._closeBtn = this._register(new SimpleButton({\n        label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n        icon: widgetClose,\n        hoverDelegate,\n        onTrigger: () => {\n          this._state.change({\n            isRevealed: false,\n            searchScope: null\n          }, false);\n        },\n        onKeyDown: e => {\n          if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n              if (this._replaceBtn.isEnabled()) {\n                this._replaceBtn.focus();\n              } else {\n                this._codeEditor.focus();\n              }\n              e.preventDefault();\n            }\n          }\n        }\n      }, this._hoverService));\n      // Replace input\n      this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n        label: NLS_REPLACE_INPUT_LABEL,\n        placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n        appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n        history: [],\n        flexibleHeight,\n        flexibleWidth,\n        flexibleMaxHeight: 118,\n        showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n        inputBoxStyles: defaultInputBoxStyles,\n        toggleStyles: defaultToggleStyles\n      }, this._contextKeyService, true));\n      this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n      this._register(this._replaceInput.onKeyDown(e => this._onReplaceInputKeyDown(e)));\n      this._register(this._replaceInput.inputBox.onDidChange(() => {\n        this._state.change({\n          replaceString: this._replaceInput.inputBox.value\n        }, false);\n      }));\n      this._register(this._replaceInput.inputBox.onDidHeightChange(e => {\n        if (this._isReplaceVisible && this._tryUpdateHeight()) {\n          this._showViewZone();\n        }\n      }));\n      this._register(this._replaceInput.onDidOptionChange(() => {\n        this._state.change({\n          preserveCase: this._replaceInput.getPreserveCase()\n        }, true);\n      }));\n      this._register(this._replaceInput.onPreserveCaseKeyDown(e => {\n        if (e.equals(2 /* KeyCode.Tab */)) {\n          if (this._prevBtn.isEnabled()) {\n            this._prevBtn.focus();\n          } else if (this._nextBtn.isEnabled()) {\n            this._nextBtn.focus();\n          } else if (this._toggleSelectionFind.enabled) {\n            this._toggleSelectionFind.focus();\n          } else if (this._closeBtn.isEnabled()) {\n            this._closeBtn.focus();\n          }\n          e.preventDefault();\n        }\n      }));\n      // Create scoped hover delegate for replace actions\n      const replaceHoverDelegate = this._register(createInstantHoverDelegate());\n      // Replace one button\n      this._replaceBtn = this._register(new SimpleButton({\n        label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n        icon: findReplaceIcon,\n        hoverDelegate: replaceHoverDelegate,\n        onTrigger: () => {\n          this._controller.replace();\n        },\n        onKeyDown: e => {\n          if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._closeBtn.focus();\n            e.preventDefault();\n          }\n        }\n      }, this._hoverService));\n      // Replace all button\n      this._replaceAllBtn = this._register(new SimpleButton({\n        label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n        icon: findReplaceAllIcon,\n        hoverDelegate: replaceHoverDelegate,\n        onTrigger: () => {\n          this._controller.replaceAll();\n        }\n      }, this._hoverService));\n      const replacePart = document.createElement('div');\n      replacePart.className = 'replace-part';\n      replacePart.appendChild(this._replaceInput.domNode);\n      const replaceActionsContainer = document.createElement('div');\n      replaceActionsContainer.className = 'replace-actions';\n      replacePart.appendChild(replaceActionsContainer);\n      replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n      replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n      // Toggle replace button\n      this._toggleReplaceBtn = this._register(new SimpleButton({\n        label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n        className: 'codicon toggle left',\n        onTrigger: () => {\n          this._state.change({\n            isReplaceRevealed: !this._isReplaceVisible\n          }, false);\n          if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            this._replaceInput.inputBox.layout();\n          }\n          this._showViewZone();\n        }\n      }, this._hoverService));\n      this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n      // Widget\n      this._domNode = document.createElement('div');\n      this._domNode.className = 'editor-widget find-widget';\n      this._domNode.setAttribute('aria-hidden', 'true');\n      this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n      this._domNode.role = 'dialog';\n      // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n      this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n      this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n      this._domNode.appendChild(findPart);\n      this._domNode.appendChild(this._closeBtn.domNode);\n      this._domNode.appendChild(replacePart);\n      this._resizeSash = this._register(new Sash(this._domNode, this, {\n        orientation: 0 /* Orientation.VERTICAL */,\n        size: 2\n      }));\n      this._resized = false;\n      let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n      this._register(this._resizeSash.onDidStart(() => {\n        originalWidth = dom.getTotalWidth(this._domNode);\n      }));\n      this._register(this._resizeSash.onDidChange(evt => {\n        this._resized = true;\n        const width = originalWidth + evt.startX - evt.currentX;\n        if (width < FIND_WIDGET_INITIAL_WIDTH) {\n          // narrow down the find widget should be handled by CSS.\n          return;\n        }\n        const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n        if (width > maxWidth) {\n          return;\n        }\n        this._domNode.style.width = `${width}px`;\n        if (this._isReplaceVisible) {\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n        this._findInput.inputBox.layout();\n        this._tryUpdateHeight();\n      }));\n      this._register(this._resizeSash.onDidReset(() => {\n        // users double click on the sash\n        const currentWidth = dom.getTotalWidth(this._domNode);\n        if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n          // The editor is narrow and the width of the find widget is controlled fully by CSS.\n          return;\n        }\n        let width = FIND_WIDGET_INITIAL_WIDTH;\n        if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n          // 1. never resized before, double click should maximizes it\n          // 2. users resized it already but its width is the same as default\n          const layoutInfo = this._codeEditor.getLayoutInfo();\n          width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n          this._resized = true;\n        } else {\n          /**\n           * no op, the find widget should be shrinked to its default size.\n           */\n        }\n        this._domNode.style.width = `${width}px`;\n        if (this._isReplaceVisible) {\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n        this._findInput.inputBox.layout();\n      }));\n    }\n    updateAccessibilitySupport() {\n      const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n      this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n  }\n  return FindWidget;\n})();\nexport class SimpleButton extends Widget {\n  constructor(opts, hoverService) {\n    super();\n    this._opts = opts;\n    let className = 'button';\n    if (this._opts.className) {\n      className = className + ' ' + this._opts.className;\n    }\n    if (this._opts.icon) {\n      className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n    }\n    this._domNode = document.createElement('div');\n    this._domNode.tabIndex = 0;\n    this._domNode.className = className;\n    this._domNode.setAttribute('role', 'button');\n    this._domNode.setAttribute('aria-label', this._opts.label);\n    this._register(hoverService.setupManagedHover(opts.hoverDelegate ?? getDefaultHoverDelegate('element'), this._domNode, this._opts.label));\n    this.onclick(this._domNode, e => {\n      this._opts.onTrigger();\n      e.preventDefault();\n    });\n    this.onkeydown(this._domNode, e => {\n      if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n        this._opts.onTrigger();\n        e.preventDefault();\n        return;\n      }\n      this._opts.onKeyDown?.(e);\n    });\n  }\n  get domNode() {\n    return this._domNode;\n  }\n  isEnabled() {\n    return this._domNode.tabIndex >= 0;\n  }\n  focus() {\n    this._domNode.focus();\n  }\n  setEnabled(enabled) {\n    this._domNode.classList.toggle('disabled', !enabled);\n    this._domNode.setAttribute('aria-disabled', String(!enabled));\n    this._domNode.tabIndex = enabled ? 0 : -1;\n  }\n  setExpanded(expanded) {\n    this._domNode.setAttribute('aria-expanded', String(!!expanded));\n    if (expanded) {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n    } else {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n    }\n  }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n  const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n  if (findMatchHighlightBorder) {\n    collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n  }\n  const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n  if (findRangeHighlightBorder) {\n    collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n  }\n  const hcBorder = theme.getColor(contrastBorder);\n  if (hcBorder) {\n    collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n  }\n  const findMatchForeground = theme.getColor(editorFindMatchForeground);\n  if (findMatchForeground) {\n    collector.addRule(`.monaco-editor .findMatchInline { color: ${findMatchForeground}; }`);\n  }\n  const findMatchHighlightForeground = theme.getColor(editorFindMatchHighlightForeground);\n  if (findMatchHighlightForeground) {\n    collector.addRule(`.monaco-editor .currentFindMatchInline { color: ${findMatchHighlightForeground}; }`);\n  }\n});","map":{"version":3,"names":["dom","alert","alertFn","Toggle","Sash","Widget","Delayer","Codicon","onUnexpectedError","toDisposable","platform","strings","Range","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","FIND_IDS","MATCHES_LIMIT","nls","ContextScopedFindInput","ContextScopedReplaceInput","showHistoryKeybindingHint","asCssVariable","contrastBorder","editorFindMatchForeground","editorFindMatchHighlightBorder","editorFindMatchHighlightForeground","editorFindRangeHighlightBorder","inputActiveOptionBackground","inputActiveOptionBorder","inputActiveOptionForeground","registerIcon","widgetClose","registerThemingParticipant","ThemeIcon","isHighContrast","assertIsDefined","defaultInputBoxStyles","defaultToggleStyles","createInstantHoverDelegate","getDefaultHoverDelegate","findCollapsedIcon","chevronRight","localize","findExpandedIcon","chevronDown","findSelectionIcon","selection","findReplaceIcon","replace","findReplaceAllIcon","replaceAll","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_DIALOG_LABEL","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","PART_WIDTH","FIND_INPUT_AREA_WIDTH","MAX_MATCHES_COUNT_WIDTH","FIND_INPUT_AREA_HEIGHT","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","isMacintosh","FindWidgetViewZone","constructor","afterLineNumber","heightInPx","suppressMouseDown","domNode","document","createElement","className","stopPropagationForMultiLineUpwards","event","value","textarea","isMultiline","match","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","length","FindWidget","_","ID","codeEditor","controller","state","contextViewProvider","keybindingService","contextKeyService","themeService","storageService","notificationService","_hoverService","_this","this","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_state","_contextViewProvider","_keybindingService","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isVisible","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","_register","cancel","onFindReplaceStateChange","e","_onStateChanged","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","getOption","change","isReplaceRevealed","updateAccessibilitySupport","supportLoop","loop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","_asyncToGenerator","globalBufferTerm","getGlobalBufferTerm","searchString","select","_findInputFocused","bindTo","_findFocusTracker","trackFocus","inputElement","onDidFocus","set","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","addOverlayWidget","onDidChangeModel","_viewZoneId","undefined","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","getId","getDomNode","_domNode","getPosition","preference","setValue","replaceString","isRevealed","_reveal","_hide","width","getTotalWidth","_tryUpdateHeight","isRegex","setRegex","wholeWord","setWholeWords","matchCase","setCaseSensitive","preserveCase","setPreserveCase","searchScope","_toggleSelectionFind","checked","matchesCount","matchesPosition","showRedOutline","classList","toggle","_updateMatchesCount","currentMatch","updateHistory","_delayedUpdateHistory","trigger","_updateHistory","bind","then","addToHistory","_matchesCount","style","minWidth","title","firstChild","remove","label","String","format","appendChild","createTextNode","_getAriaLabel","Math","max","clientWidth","ariaLabel","startLineNumber","startColumn","model","getModel","getLineCount","lineContent","getLineContent","getSelection","isSelection","endLineNumber","endColumn","isChecked","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","canNavigateBack","_nextBtn","canNavigateForward","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","forEach","clearTimeout","autoFindInSelection","isSelectionMultipleLine","push","add","setAttribute","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","getStartPosition","startLeft","left","startTop","top","leftOfFindWidget","getTopLeftOffset","endCoords","getEndPosition","endLeft","focusTheEditor","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","accessor","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","isConnected","layoutInfo","getLayoutInfo","editorContentWidth","contentWidth","contains","editorWidth","minimapWidth","minimap","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","widgetWidth","maxWidth","findInputWidth","element","totalheight","height","totalHeight","focusFindInput","focusReplaceInput","highlightFindOptions","hasModel","selections","getSelections","map","setEndPosition","getLineMaxColumn","equalsRange","filter","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","equals","dispatchEvent","target","preventDefault","insertAtCursor","focusOnCaseSensitive","getValue","querySelector","_onReplaceInputKeyDown","isWindows","isNative","info","store","getVerticalSashLeft","_sash","_keybindingLabelFor","actionId","kb","lookupKeybinding","getLabel","flexibleHeight","flexibleWidth","placeholder","appendCaseSensitiveLabel","ToggleCaseSensitiveCommand","appendWholeWordsLabel","ToggleWholeWordCommand","appendRegexLabel","ToggleRegexCommand","validation","getRegex","RegExp","content","message","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","inputBoxStyles","toggleStyles","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","isLinux","onMouseDown","hoverDelegate","SimpleButton","PreviousMatchFindAction","icon","onTrigger","getAction","run","NextMatchFindAction","findPart","actionsContainer","ToggleSearchScopeCommand","onChange","isEmpty","CloseFindWidgetCommand","isEnabled","appendPreserveCaseLabel","TogglePreserveCaseCommand","history","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceHoverDelegate","ReplaceOneAction","ReplaceAllAction","replacePart","replaceActionsContainer","role","_resizeSash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","hoverService","_opts","asClassName","tabIndex","setupManagedHover","onclick","onkeydown","expanded","asClassNameArray","theme","collector","findMatchHighlightBorder","getColor","addRule","type","findRangeHighlightBorder","hcBorder","findMatchForeground","findMatchHighlightForeground"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatchForeground, editorFindMatchHighlightBorder, editorFindMatchHighlightForeground, editorFindRangeHighlightBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    static { this.ID = 'editor.contrib.findWidget'; }\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService, _hoverService) {\n        super();\n        this._hoverService = _hoverService;\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(92 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(92 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(41 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(async () => {\n            if (this._isVisible) {\n                const globalBufferTerm = await this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        }));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(92 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        this._matchesCount.firstChild?.remove();\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(92 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(84 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!this._domNode.isConnected) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Create a scoped hover delegate for all find related buttons\n        const hoverDelegate = this._register(createInstantHoverDelegate());\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            hoverDelegate: hoverDelegate,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections = selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter((element) => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            hoverDelegate,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }, this._hoverService));\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Create scoped hover delegate for replace actions\n        const replaceHoverDelegate = this._register(createInstantHoverDelegate());\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }, this._hoverService));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }, this._hoverService));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }, this._hoverService));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n        this._domNode.role = 'dialog';\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(this._closeBtn.domNode);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = this._register(new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 }));\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nexport class SimpleButton extends Widget {\n    constructor(opts, hoverService) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this._register(hoverService.setupManagedHover(opts.hoverDelegate ?? getDefaultHoverDelegate('element'), this._domNode, this._opts.label));\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            this._opts.onKeyDown?.(e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const findMatchForeground = theme.getColor(editorFindMatchForeground);\n    if (findMatchForeground) {\n        collector.addRule(`.monaco-editor .findMatchInline { color: ${findMatchForeground}; }`);\n    }\n    const findMatchHighlightForeground = theme.getColor(editorFindMatchHighlightForeground);\n    if (findMatchHighlightForeground) {\n        collector.addRule(`.monaco-editor .currentFindMatchInline { color: ${findMatchHighlightForeground}; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}