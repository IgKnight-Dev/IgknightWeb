{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from '../../../environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/apiservice\";\nexport let GuestAssignmentApiService = /*#__PURE__*/(() => {\n  class GuestAssignmentApiService {\n    http;\n    constructor(http) {\n      this.http = http;\n    }\n    baseUrl = environment.contentApiUrl;\n    /**\n     * Get questions for an assignment without authentication\n     */\n    getAssignmentQuestions(assignmentId) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return yield _this.http.get(_this.baseUrl, `public/assignments/${assignmentId}/questions`);\n      })();\n    }\n    /**\n     * Get assignment without authentication\n     */\n    getAssignmentById(assignmentId) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this2.http.get(_this2.baseUrl, `public/assignments/${assignmentId}`);\n      })();\n    }\n    /**\n     * Get all assignments without authentication\n     */\n    getAllAssignments() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this3.http.get(_this3.baseUrl, `public/assignments/`);\n      })();\n    }\n    /**\n     * Submit answers for unauthenticated user\n     */\n    submitGuestAttempt(assignmentId, answers) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this4.http.post(_this4.baseUrl, `public/assignments/${assignmentId}/guest/submit`, answers);\n      })();\n    }\n    static ɵfac = function GuestAssignmentApiService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GuestAssignmentApiService)(i0.ɵɵinject(i1.ApiService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GuestAssignmentApiService,\n      factory: GuestAssignmentApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return GuestAssignmentApiService;\n})();","map":{"version":3,"names":["environment","GuestAssignmentApiService","http","constructor","baseUrl","contentApiUrl","getAssignmentQuestions","assignmentId","_this","_asyncToGenerator","get","getAssignmentById","_this2","getAllAssignments","_this3","submitGuestAttempt","answers","_this4","post","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\abhis\\OneDrive\\Desktop\\IgKnightWeb\\IgKnightWeb\\src\\app\\content\\services\\guest-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../core/services/apiservice';\r\nimport { AssignmentQuestionDto } from '../../models/assignment-question.model';\r\nimport { environment } from '../../../environment';\r\nimport { AssignmentAnswerDto, AssignmentAttemptResultDto } from '../../models/assignment-attempt-result.dto';\r\nimport { AssignmentDto, AssignmentsOverviewDataDto } from '../../models/assignment.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GuestAssignmentApiService {\r\n  constructor(private http: ApiService) {}\r\n  private baseUrl = environment.contentApiUrl;\r\n\r\n  /**\r\n   * Get questions for an assignment without authentication\r\n   */\r\n  async getAssignmentQuestions(assignmentId: string): Promise<AssignmentQuestionDto[]> {\r\n    return await this.http.get(this.baseUrl, `public/assignments/${assignmentId}/questions`);\r\n  }\r\n\r\n  /**\r\n   * Get assignment without authentication\r\n   */\r\n  async getAssignmentById(assignmentId: string): Promise<AssignmentDto> {\r\n    return await this.http.get(this.baseUrl, `public/assignments/${assignmentId}`);\r\n  }\r\n\r\n  /**\r\n   * Get all assignments without authentication\r\n   */\r\n  async getAllAssignments(): Promise<AssignmentsOverviewDataDto[]> {\r\n    return await this.http.get(this.baseUrl, `public/assignments/`);\r\n  }\r\n\r\n  /**\r\n   * Submit answers for unauthenticated user\r\n   */\r\n  async submitGuestAttempt(assignmentId: string,answers: AssignmentAnswerDto[]): Promise<AssignmentAttemptResultDto> {\r\n    return await this.http.post(\r\n      this.baseUrl,\r\n      `public/assignments/${assignmentId}/guest/submit`,\r\n      answers\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;AAKlD,WAAaC,yBAAyB;EAAhC,MAAOA,yBAAyB;IAChBC,IAAA;IAApBC,YAAoBD,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAC/BE,OAAO,GAAGJ,WAAW,CAACK,aAAa;IAE3C;;;IAGMC,sBAAsBA,CAACC,YAAoB;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QAC/C,aAAaD,KAAI,CAACN,IAAI,CAACQ,GAAG,CAACF,KAAI,CAACJ,OAAO,EAAE,sBAAsBG,YAAY,YAAY,CAAC;MAAC;IAC3F;IAEA;;;IAGMI,iBAAiBA,CAACJ,YAAoB;MAAA,IAAAK,MAAA;MAAA,OAAAH,iBAAA;QAC1C,aAAaG,MAAI,CAACV,IAAI,CAACQ,GAAG,CAACE,MAAI,CAACR,OAAO,EAAE,sBAAsBG,YAAY,EAAE,CAAC;MAAC;IACjF;IAEA;;;IAGMM,iBAAiBA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAL,iBAAA;QACrB,aAAaK,MAAI,CAACZ,IAAI,CAACQ,GAAG,CAACI,MAAI,CAACV,OAAO,EAAE,qBAAqB,CAAC;MAAC;IAClE;IAEA;;;IAGMW,kBAAkBA,CAACR,YAAoB,EAACS,OAA8B;MAAA,IAAAC,MAAA;MAAA,OAAAR,iBAAA;QAC1E,aAAaQ,MAAI,CAACf,IAAI,CAACgB,IAAI,CACzBD,MAAI,CAACb,OAAO,EACZ,sBAAsBG,YAAY,eAAe,EACjDS,OAAO,CACR;MAAC;IACJ;;uCAlCWf,yBAAyB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAzBrB,yBAAyB;MAAAsB,OAAA,EAAzBtB,yBAAyB,CAAAuB,IAAA;MAAAC,UAAA,EADZ;IAAM;;SACnBxB,yBAAyB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}