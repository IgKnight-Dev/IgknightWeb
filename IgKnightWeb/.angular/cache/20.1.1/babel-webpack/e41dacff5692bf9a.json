{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n  submenu: MenuId.EditorContextPeek,\n  title: nls.localize('peek.submenu', \"Peek\"),\n  group: 'navigation',\n  order: 100\n});\nexport class SymbolNavigationAnchor {\n  static is(thing) {\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n    if (thing instanceof SymbolNavigationAnchor) {\n      return true;\n    }\n    if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n      return true;\n    }\n    return false;\n  }\n  constructor(model, position) {\n    this.model = model;\n    this.position = position;\n  }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n  static #_ = this._allSymbolNavigationCommands = new Map();\n  static #_2 = this._activeAlternativeCommands = new Set();\n  static all() {\n    return SymbolNavigationAction._allSymbolNavigationCommands.values();\n  }\n  static _patchConfig(opts) {\n    const result = {\n      ...opts,\n      f1: true\n    };\n    // patch context menu when clause\n    if (result.menu) {\n      for (const item of Iterable.wrap(result.menu)) {\n        if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n          item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        }\n      }\n    }\n    return result;\n  }\n  constructor(configuration, opts) {\n    super(SymbolNavigationAction._patchConfig(opts));\n    this.configuration = configuration;\n    SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n  }\n  runEditorCommand(accessor, editor, arg, range) {\n    var _this = this;\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(ICodeEditorService);\n    const progressService = accessor.get(IEditorProgressService);\n    const symbolNavService = accessor.get(ISymbolNavigationService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const instaService = accessor.get(IInstantiationService);\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n    const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n    const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(/*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (references) {\n        if (!references || cts.token.isCancellationRequested) {\n          return;\n        }\n        alert(references.ariaMessage);\n        let altAction;\n        if (references.referenceAt(model.uri, position)) {\n          const altActionId = _this._getAlternativeCommand(editor);\n          if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n            altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n          }\n        }\n        const referenceCount = references.references.length;\n        if (referenceCount === 0) {\n          // no result -> show message\n          if (!_this.configuration.muteMessage) {\n            const info = model.getWordAtPosition(position);\n            MessageController.get(editor)?.showMessage(_this._getNoResultFoundMessage(info), position);\n          }\n        } else if (referenceCount === 1 && altAction) {\n          // already at the only result, run alternative\n          SymbolNavigationAction._activeAlternativeCommands.add(_this.desc.id);\n          instaService.invokeFunction(accessor => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n            SymbolNavigationAction._activeAlternativeCommands.delete(_this.desc.id);\n          }));\n        } else {\n          // normal results handling\n          return _this._onResult(editorService, symbolNavService, editor, references, range);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), err => {\n      // report an error\n      notificationService.error(err);\n    }).finally(() => {\n      cts.dispose();\n    });\n    progressService.showWhile(promise, 250);\n    return promise;\n  }\n  _onResult(editorService, symbolNavService, editor, model, range) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const gotoLocation = _this2._getGoToPreference(editor);\n      if (!(editor instanceof EmbeddedCodeEditorWidget) && (_this2.configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) {\n        _this2._openInPeek(editor, model, range);\n      } else {\n        const next = model.firstReference();\n        const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n        const targetEditor = yield _this2._openReference(editor, editorService, next, _this2.configuration.openToSide, !peek);\n        if (peek && targetEditor) {\n          _this2._openInPeek(targetEditor, model, range);\n        } else {\n          model.dispose();\n        }\n        // keep remaining locations around when using\n        // 'goto'-mode\n        if (gotoLocation === 'goto') {\n          symbolNavService.put(next);\n        }\n      }\n    })();\n  }\n  _openReference(editor, editorService, reference, sideBySide, highlight) {\n    return _asyncToGenerator(function* () {\n      // range is the target-selection-range when we have one\n      // and the fallback is the 'full' range\n      let range = undefined;\n      if (isLocationLink(reference)) {\n        range = reference.targetSelectionRange;\n      }\n      if (!range) {\n        range = reference.range;\n      }\n      if (!range) {\n        return undefined;\n      }\n      const targetEditor = yield editorService.openCodeEditor({\n        resource: reference.uri,\n        options: {\n          selection: Range.collapseToStart(range),\n          selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n          selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n        }\n      }, editor, sideBySide);\n      if (!targetEditor) {\n        return undefined;\n      }\n      if (highlight) {\n        const modelNow = targetEditor.getModel();\n        const decorations = targetEditor.createDecorationsCollection([{\n          range,\n          options: {\n            description: 'symbol-navigate-action-highlight',\n            className: 'symbolHighlight'\n          }\n        }]);\n        setTimeout(() => {\n          if (targetEditor.getModel() === modelNow) {\n            decorations.clear();\n          }\n        }, 350);\n      }\n      return targetEditor;\n    })();\n  }\n  _openInPeek(target, model, range) {\n    const controller = ReferencesController.get(target);\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n    } else {\n      model.dispose();\n    }\n  }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n    })();\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n  }\n}\nregisterAction2(class GoToDefinitionAction extends DefinitionAction {\n  static #_ = this.id = 'editor.action.revealDefinition';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDefinitionAction.id,\n      title: {\n        ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Definition\")\n      },\n      precondition: EditorContextKeys.hasDefinitionProvider,\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }],\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.1\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 2\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n  }\n});\nregisterAction2(class OpenDefinitionToSideAction extends DefinitionAction {\n  static #_ = this.id = 'editor.action.revealDefinitionAside';\n  constructor() {\n    super({\n      openToSide: true,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: OpenDefinitionToSideAction.id,\n      title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n  }\n});\nregisterAction2(class PeekDefinitionAction extends DefinitionAction {\n  static #_ = this.id = 'editor.action.peekDefinition';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekDefinitionAction.id,\n      title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n        linux: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 2\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n  }\n});\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n    })();\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n  }\n}\nregisterAction2(class GoToDeclarationAction extends DeclarationAction {\n  static #_ = this.id = 'editor.action.revealDeclaration';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDeclarationAction.id,\n      title: {\n        ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDeclaration',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Declaration\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.3\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n});\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.peekDeclaration',\n      title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 3\n      }\n    });\n  }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n    })();\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n  }\n}\nregisterAction2(class GoToTypeDefinitionAction extends TypeDefinitionAction {\n  static #_ = this.ID = 'editor.action.goToTypeDefinition';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToTypeDefinitionAction.ID,\n      title: {\n        ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoTypeDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Type Definition\")\n      },\n      precondition: EditorContextKeys.hasTypeDefinitionProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.4\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n});\nregisterAction2(class PeekTypeDefinitionAction extends TypeDefinitionAction {\n  static #_ = this.ID = 'editor.action.peekTypeDefinition';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekTypeDefinitionAction.ID,\n      title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 4\n      }\n    });\n  }\n});\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n    })();\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n  }\n}\nregisterAction2(class GoToImplementationAction extends ImplementationAction {\n  static #_ = this.ID = 'editor.action.goToImplementation';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToImplementationAction.ID,\n      title: {\n        ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoImplementation',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Implementations\")\n      },\n      precondition: EditorContextKeys.hasImplementationProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 4\n      }]\n    });\n  }\n});\nregisterAction2(class PeekImplementationAction extends ImplementationAction {\n  static #_ = this.ID = 'editor.action.peekImplementation';\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekImplementationAction.ID,\n      title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 5\n      }\n    });\n  }\n});\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n  _getNoResultFoundMessage(info) {\n    return info ? nls.localize('references.no', \"No references found for '{0}'\", info.word) : nls.localize('references.noGeneric', \"No references found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: 'editor.action.goToReferences',\n      title: {\n        ...nls.localize2('goToReferences.label', \"Go to References\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoReference',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&References\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 5\n      }]\n    });\n  }\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n    })();\n  }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.referenceSearch.trigger',\n      title: nls.localize2('references.action.label', \"Peek References\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 6\n      }\n    });\n  }\n  _getLocationModel(languageFeaturesService, model, position, token) {\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(yield getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n    })();\n  }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n  constructor(config, _references, _gotoMultipleBehaviour) {\n    super(config, {\n      id: 'editor.action.goToLocation',\n      title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n      precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated())\n    });\n    this._references = _references;\n    this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n  }\n  _getLocationModel(languageFeaturesService, _model, _position, _token) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return new ReferencesModel(_this3._references, nls.localize('generic.title', 'Locations'));\n    })();\n  }\n  _getNoResultFoundMessage(info) {\n    return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n  }\n  _getGoToPreference(editor) {\n    return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n  _getAlternativeCommand() {\n    return '';\n  }\n}\nCommandsRegistry.registerCommand({\n  id: 'editor.action.goToLocations',\n  metadata: {\n    description: 'Go to locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }, {\n      name: 'noResultsMessage',\n      description: 'Human readable message that shows when locations is empty.'\n    }]\n  },\n  handler: function () {\n    var _ref2 = _asyncToGenerator(function* (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) {\n      assertType(URI.isUri(resource));\n      assertType(corePosition.Position.isIPosition(position));\n      assertType(Array.isArray(references));\n      assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n      assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n      const editorService = accessor.get(ICodeEditorService);\n      const editor = yield editorService.openCodeEditor({\n        resource\n      }, editorService.getFocusedCodeEditor());\n      if (isCodeEditor(editor)) {\n        editor.setPosition(position);\n        editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n        return editor.invokeWithinContext(accessor => {\n          const command = new class extends GenericGoToLocationAction {\n            _getNoResultFoundMessage(info) {\n              return noResultsMessage || super._getNoResultFoundMessage(info);\n            }\n          }({\n            muteMessage: !Boolean(noResultsMessage),\n            openInPeek: Boolean(openInPeek),\n            openToSide: false\n          }, references, multiple);\n          accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n        });\n      }\n    });\n    return function handler(_x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }()\n});\nCommandsRegistry.registerCommand({\n  id: 'editor.action.peekLocations',\n  metadata: {\n    description: 'Peek locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }]\n  },\n  handler: function () {\n    var _ref3 = _asyncToGenerator(function* (accessor, resource, position, references, multiple) {\n      accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    });\n    return function handler(_x9, _x0, _x1, _x10, _x11) {\n      return _ref3.apply(this, arguments);\n    };\n  }()\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n  id: 'editor.action.findReferences',\n  handler: (accessor, resource, position) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const codeEditorService = accessor.get(ICodeEditorService);\n    return codeEditorService.openCodeEditor({\n      resource\n    }, codeEditorService.getFocusedCodeEditor()).then(control => {\n      if (!isCodeEditor(control) || !control.hasModel()) {\n        return undefined;\n      }\n      const controller = ReferencesController.get(control);\n      if (!controller) {\n        return undefined;\n      }\n      const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      return Promise.resolve(controller.toggleWidget(range, references, false));\n    });\n  }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion","map":{"version":3,"names":["alert","createCancelablePromise","raceCancellation","KeyChord","assertType","URI","EditorStateCancellationTokenSource","isCodeEditor","EditorAction2","ICodeEditorService","EmbeddedCodeEditorWidget","corePosition","Range","EditorContextKeys","isLocationLink","ReferencesController","ReferencesModel","ISymbolNavigationService","MessageController","PeekContext","nls","MenuId","MenuRegistry","registerAction2","CommandsRegistry","ICommandService","ContextKeyExpr","IInstantiationService","INotificationService","IEditorProgressService","getDeclarationsAtPosition","getDefinitionsAtPosition","getImplementationsAtPosition","getReferencesAtPosition","getTypeDefinitionsAtPosition","ILanguageFeaturesService","Iterable","IsWebContext","appendMenuItem","EditorContext","submenu","EditorContextPeek","title","localize","group","order","SymbolNavigationAnchor","is","thing","Position","isIPosition","position","model","constructor","SymbolNavigationAction","_","_allSymbolNavigationCommands","Map","_2","_activeAlternativeCommands","Set","all","values","_patchConfig","opts","result","f1","menu","item","wrap","id","when","and","precondition","configuration","set","runEditorCommand","accessor","editor","arg","range","_this","hasModel","Promise","resolve","undefined","notificationService","get","editorService","progressService","symbolNavService","languageFeaturesService","instaService","getModel","getPosition","anchor","cts","promise","_getLocationModel","token","then","_ref","_asyncToGenerator","references","isCancellationRequested","ariaMessage","altAction","referenceAt","uri","altActionId","_getAlternativeCommand","has","referenceCount","length","muteMessage","info","getWordAtPosition","showMessage","_getNoResultFoundMessage","add","desc","invokeFunction","finally","delete","_onResult","_x","apply","arguments","err","error","dispose","showWhile","_this2","gotoLocation","_getGoToPreference","openInPeek","_openInPeek","next","firstReference","peek","targetEditor","_openReference","openToSide","put","reference","sideBySide","highlight","targetSelectionRange","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","selectionSource","modelNow","decorations","createDecorationsCollection","description","className","setTimeout","clear","target","controller","toggleWidget","getSelection","DefinitionAction","definitionProvider","word","getOption","alternativeDefinitionCommand","multipleDefinitions","GoToDefinitionAction","localize2","mnemonicTitle","key","comment","hasDefinitionProvider","keybinding","editorTextFocus","primary","weight","MenubarGoMenu","registerCommandAlias","OpenDefinitionToSideAction","isInEmbeddedEditor","toNegated","PeekDefinitionAction","notInPeekEditor","linux","DeclarationAction","declarationProvider","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","hasDeclarationProvider","PeekDeclarationAction","TypeDefinitionAction","typeDefinitionProvider","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","ID","hasTypeDefinitionProvider","PeekTypeDefinitionAction","ImplementationAction","implementationProvider","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","hasImplementationProvider","PeekImplementationAction","ReferencesAction","alternativeReferenceCommand","multipleReferences","GoToReferencesAction","hasReferenceProvider","referenceProvider","PeekReferencesAction","GenericGoToLocationAction","config","_references","_gotoMultipleBehaviour","_model","_position","_token","_this3","registerCommand","metadata","args","name","constraint","Array","handler","_ref2","multiple","noResultsMessage","isUri","isArray","getFocusedCodeEditor","setPosition","revealPositionInCenterIfOutsideViewport","invokeWithinContext","command","Boolean","run","bind","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_ref3","executeCommand","_x9","_x0","_x1","_x10","_x11","codeEditorService","control","lift","lineNumber","column"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    submenu: MenuId.EditorContextPeek,\n    title: nls.localize('peek.submenu', \"Peek\"),\n    group: 'navigation',\n    order: 100\n});\nexport class SymbolNavigationAnchor {\n    static is(thing) {\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        if (thing instanceof SymbolNavigationAnchor) {\n            return true;\n        }\n        if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n            return true;\n        }\n        return false;\n    }\n    constructor(model, position) {\n        this.model = model;\n        this.position = position;\n    }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n    static { this._allSymbolNavigationCommands = new Map(); }\n    static { this._activeAlternativeCommands = new Set(); }\n    static all() {\n        return SymbolNavigationAction._allSymbolNavigationCommands.values();\n    }\n    static _patchConfig(opts) {\n        const result = { ...opts, f1: true };\n        // patch context menu when clause\n        if (result.menu) {\n            for (const item of Iterable.wrap(result.menu)) {\n                if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n                    item.when = ContextKeyExpr.and(opts.precondition, item.when);\n                }\n            }\n        }\n        return result;\n    }\n    constructor(configuration, opts) {\n        super(SymbolNavigationAction._patchConfig(opts));\n        this.configuration = configuration;\n        SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n    }\n    runEditorCommand(accessor, editor, arg, range) {\n        if (!editor.hasModel()) {\n            return Promise.resolve(undefined);\n        }\n        const notificationService = accessor.get(INotificationService);\n        const editorService = accessor.get(ICodeEditorService);\n        const progressService = accessor.get(IEditorProgressService);\n        const symbolNavService = accessor.get(ISymbolNavigationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async (references) => {\n            if (!references || cts.token.isCancellationRequested) {\n                return;\n            }\n            alert(references.ariaMessage);\n            let altAction;\n            if (references.referenceAt(model.uri, position)) {\n                const altActionId = this._getAlternativeCommand(editor);\n                if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n                    altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n                }\n            }\n            const referenceCount = references.references.length;\n            if (referenceCount === 0) {\n                // no result -> show message\n                if (!this.configuration.muteMessage) {\n                    const info = model.getWordAtPosition(position);\n                    MessageController.get(editor)?.showMessage(this._getNoResultFoundMessage(info), position);\n                }\n            }\n            else if (referenceCount === 1 && altAction) {\n                // already at the only result, run alternative\n                SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n                instaService.invokeFunction((accessor) => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n                    SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n                }));\n            }\n            else {\n                // normal results handling\n                return this._onResult(editorService, symbolNavService, editor, references, range);\n            }\n        }, (err) => {\n            // report an error\n            notificationService.error(err);\n        }).finally(() => {\n            cts.dispose();\n        });\n        progressService.showWhile(promise, 250);\n        return promise;\n    }\n    async _onResult(editorService, symbolNavService, editor, model, range) {\n        const gotoLocation = this._getGoToPreference(editor);\n        if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\n            this._openInPeek(editor, model, range);\n        }\n        else {\n            const next = model.firstReference();\n            const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n            const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n            if (peek && targetEditor) {\n                this._openInPeek(targetEditor, model, range);\n            }\n            else {\n                model.dispose();\n            }\n            // keep remaining locations around when using\n            // 'goto'-mode\n            if (gotoLocation === 'goto') {\n                symbolNavService.put(next);\n            }\n        }\n    }\n    async _openReference(editor, editorService, reference, sideBySide, highlight) {\n        // range is the target-selection-range when we have one\n        // and the fallback is the 'full' range\n        let range = undefined;\n        if (isLocationLink(reference)) {\n            range = reference.targetSelectionRange;\n        }\n        if (!range) {\n            range = reference.range;\n        }\n        if (!range) {\n            return undefined;\n        }\n        const targetEditor = await editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n                selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n            }\n        }, editor, sideBySide);\n        if (!targetEditor) {\n            return undefined;\n        }\n        if (highlight) {\n            const modelNow = targetEditor.getModel();\n            const decorations = targetEditor.createDecorationsCollection([{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\n            setTimeout(() => {\n                if (targetEditor.getModel() === modelNow) {\n                    decorations.clear();\n                }\n            }, 350);\n        }\n        return targetEditor;\n    }\n    _openInPeek(target, model, range) {\n        const controller = ReferencesController.get(target);\n        if (controller && target.hasModel()) {\n            controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n        }\n        else {\n            model.dispose();\n        }\n    }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\n            : nls.localize('generic.noResults', \"No definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n    }\n}\nregisterAction2(class GoToDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDefinitionAction.id,\n            title: {\n                ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\"),\n            },\n            precondition: EditorContextKeys.hasDefinitionProvider,\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }],\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.1\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 2,\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n    }\n});\nregisterAction2(class OpenDefinitionToSideAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinitionAside'; }\n    constructor() {\n        super({\n            openToSide: true,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: OpenDefinitionToSideAction.id,\n            title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n    }\n});\nregisterAction2(class PeekDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.peekDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekDefinitionAction.id,\n            title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 2\n            }\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n    }\n});\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n    }\n}\nregisterAction2(class GoToDeclarationAction extends DeclarationAction {\n    static { this.id = 'editor.action.revealDeclaration'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDeclarationAction.id,\n            title: {\n                ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.3\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }],\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n});\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.peekDeclaration',\n            title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 3\n            }\n        });\n    }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n    }\n}\nregisterAction2(class GoToTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.goToTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToTypeDefinitionAction.ID,\n            title: {\n                ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\"),\n            },\n            precondition: EditorContextKeys.hasTypeDefinitionProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.4\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.peekTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekTypeDefinitionAction.ID,\n            title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 4\n            }\n        });\n    }\n});\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n    }\n}\nregisterAction2(class GoToImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.goToImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToImplementationAction.ID,\n            title: {\n                ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\"),\n            },\n            precondition: EditorContextKeys.hasImplementationProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 4,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.peekImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekImplementationAction.ID,\n            title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 5\n            }\n        });\n    }\n});\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n    _getNoResultFoundMessage(info) {\n        return info\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\n            : nls.localize('references.noGeneric', \"No references found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: 'editor.action.goToReferences',\n            title: {\n                ...nls.localize2('goToReferences.label', \"Go to References\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 5,\n                }]\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n    }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.referenceSearch.trigger',\n            title: nls.localize2('references.action.label', \"Peek References\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 6\n            }\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n    }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n    constructor(config, _references, _gotoMultipleBehaviour) {\n        super(config, {\n            id: 'editor.action.goToLocation',\n            title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n        });\n        this._references = _references;\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n    }\n    async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n        return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n    }\n    _getGoToPreference(editor) {\n        return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n    _getAlternativeCommand() { return ''; }\n}\nCommandsRegistry.registerCommand({\n    id: 'editor.action.goToLocations',\n    metadata: {\n        description: 'Go to locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        assertType(Array.isArray(references));\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n        const editorService = accessor.get(ICodeEditorService);\n        const editor = await editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\n        if (isCodeEditor(editor)) {\n            editor.setPosition(position);\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n            return editor.invokeWithinContext(accessor => {\n                const command = new class extends GenericGoToLocationAction {\n                    _getNoResultFoundMessage(info) {\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\n                    }\n                }({\n                    muteMessage: !Boolean(noResultsMessage),\n                    openInPeek: Boolean(openInPeek),\n                    openToSide: false\n                }, references, multiple);\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n            });\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: 'editor.action.peekLocations',\n    metadata: {\n        description: 'Peek locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple) => {\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: (accessor, resource, position) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n            if (!isCodeEditor(control) || !control.hasModel()) {\n                return undefined;\n            }\n            const controller = ReferencesController.get(control);\n            if (!controller) {\n                return undefined;\n            }\n            const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            return Promise.resolve(controller.toggleWidget(range, references, false));\n        });\n    }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}