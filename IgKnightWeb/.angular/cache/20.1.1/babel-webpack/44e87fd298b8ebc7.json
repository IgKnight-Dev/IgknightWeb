{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nlet PostEditWidget = /*#__PURE__*/(() => {\n  let PostEditWidget = class PostEditWidget extends Disposable {\n    static #_ = PostEditWidget_1 = this;\n    static #_2 = this.baseId = 'editor.widget.postEditWidget';\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n      super();\n      this.typeId = typeId;\n      this.editor = editor;\n      this.showCommand = showCommand;\n      this.range = range;\n      this.edits = edits;\n      this.onSelectNewEdit = onSelectNewEdit;\n      this._contextMenuService = _contextMenuService;\n      this._keybindingService = _keybindingService;\n      this.allowEditorOverflow = true;\n      this.suppressMouseDown = true;\n      this.create();\n      this.visibleContext = visibleContext.bindTo(contextKeyService);\n      this.visibleContext.set(true);\n      this._register(toDisposable(() => this.visibleContext.reset()));\n      this.editor.addContentWidget(this);\n      this.editor.layoutContentWidget(this);\n      this._register(toDisposable(() => this.editor.removeContentWidget(this)));\n      this._register(this.editor.onDidChangeCursorPosition(e => {\n        if (!range.containsPosition(e.position)) {\n          this.dispose();\n        }\n      }));\n      this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n        this._updateButtonTitle();\n      }));\n    }\n    _updateButtonTitle() {\n      const binding = this._keybindingService.lookupKeybinding(this.showCommand.id)?.getLabel();\n      this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n      this.domNode = dom.$('.post-edit-widget');\n      this.button = this._register(new Button(this.domNode, {\n        supportIcons: true\n      }));\n      this.button.label = '$(insert)';\n      this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n      return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n      return this.domNode;\n    }\n    getPosition() {\n      return {\n        position: this.range.getEndPosition(),\n        preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n      };\n    }\n    showSelector() {\n      this._contextMenuService.showContextMenu({\n        getAnchor: () => {\n          const pos = dom.getDomNodePagePosition(this.button.element);\n          return {\n            x: pos.left + pos.width,\n            y: pos.top + pos.height\n          };\n        },\n        getActions: () => {\n          return this.edits.allEdits.map((edit, i) => toAction({\n            id: '',\n            label: edit.title,\n            checked: i === this.edits.activeEditIndex,\n            run: () => {\n              if (i !== this.edits.activeEditIndex) {\n                return this.onSelectNewEdit(i);\n              }\n            }\n          }));\n        }\n      });\n    }\n  };\n  return PostEditWidget;\n})();\nPostEditWidget = PostEditWidget_1 = __decorate([__param(7, IContextMenuService), __param(8, IContextKeyService), __param(9, IKeybindingService)], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n  constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService, _notificationService) {\n    super();\n    this._id = _id;\n    this._editor = _editor;\n    this._visibleContext = _visibleContext;\n    this._showCommand = _showCommand;\n    this._instantiationService = _instantiationService;\n    this._bulkEditService = _bulkEditService;\n    this._notificationService = _notificationService;\n    this._currentWidget = this._register(new MutableDisposable());\n    this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n  }\n  applyEditAndShowIfNeeded(ranges, edits, canShowWidget, resolve, token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const model = _this._editor.getModel();\n      if (!model || !ranges.length) {\n        return;\n      }\n      const edit = edits.allEdits.at(edits.activeEditIndex);\n      if (!edit) {\n        return;\n      }\n      const onDidSelectEdit = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (newEditIndex) {\n          const model = _this._editor.getModel();\n          if (!model) {\n            return;\n          }\n          yield model.undo();\n          _this.applyEditAndShowIfNeeded(ranges, {\n            activeEditIndex: newEditIndex,\n            allEdits: edits.allEdits\n          }, canShowWidget, resolve, token);\n        });\n        return function onDidSelectEdit(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      const handleError = (e, message) => {\n        if (isCancellationError(e)) {\n          return;\n        }\n        _this._notificationService.error(message);\n        if (canShowWidget) {\n          _this.show(ranges[0], edits, onDidSelectEdit);\n        }\n      };\n      let resolvedEdit;\n      try {\n        resolvedEdit = yield resolve(edit, token);\n      } catch (e) {\n        return handleError(e, localize('resolveError', \"Error resolving edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n      }\n      if (token.isCancellationRequested) {\n        return;\n      }\n      const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, resolvedEdit);\n      // Use a decoration to track edits around the trigger range\n      const primaryRange = ranges[0];\n      const editTrackingDecoration = model.deltaDecorations([], [{\n        range: primaryRange,\n        options: {\n          description: 'paste-line-suffix',\n          stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */\n        }\n      }]);\n      _this._editor.focus();\n      let editResult;\n      let editRange;\n      try {\n        editResult = yield _this._bulkEditService.apply(combinedWorkspaceEdit, {\n          editor: _this._editor,\n          token\n        });\n        editRange = model.getDecorationRange(editTrackingDecoration[0]);\n      } catch (e) {\n        return handleError(e, localize('applyError', \"Error applying edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n      } finally {\n        model.deltaDecorations(editTrackingDecoration, []);\n      }\n      if (token.isCancellationRequested) {\n        return;\n      }\n      if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n        _this.show(editRange ?? primaryRange, edits, onDidSelectEdit);\n      }\n    })();\n  }\n  show(range, edits, onDidSelectEdit) {\n    this.clear();\n    if (this._editor.hasModel()) {\n      this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n    }\n  }\n  clear() {\n    this._currentWidget.clear();\n  }\n  tryShowSelector() {\n    this._currentWidget.value?.showSelector();\n  }\n};\nPostEditWidgetManager = __decorate([__param(4, IInstantiationService), __param(5, IBulkEditService), __param(6, INotificationService)], PostEditWidgetManager);\nexport { PostEditWidgetManager };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","PostEditWidget_1","dom","Button","toAction","toErrorMessage","isCancellationError","Event","Disposable","MutableDisposable","toDisposable","IBulkEditService","createCombinedWorkspaceEdit","localize","IContextKeyService","IContextMenuService","IInstantiationService","IKeybindingService","INotificationService","PostEditWidget","_","_2","baseId","constructor","typeId","editor","visibleContext","showCommand","range","edits","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","create","bindTo","set","_register","reset","addContentWidget","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","e","containsPosition","position","dispose","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","binding","lookupKeybinding","id","getLabel","button","element","title","label","domNode","$","supportIcons","addDisposableListener","EventType","CLICK","showSelector","getId","getDomNode","getPosition","getEndPosition","preference","showContextMenu","getAnchor","pos","getDomNodePagePosition","x","left","width","y","top","height","getActions","allEdits","map","edit","checked","activeEditIndex","run","PostEditWidgetManager","_id","_editor","_visibleContext","_showCommand","_instantiationService","_bulkEditService","_notificationService","_currentWidget","any","onDidChangeModel","onDidChangeModelContent","clear","applyEditAndShowIfNeeded","ranges","canShowWidget","resolve","token","_this","_asyncToGenerator","model","getModel","at","onDidSelectEdit","_ref","newEditIndex","undo","_x","apply","handleError","message","error","show","resolvedEdit","isCancellationRequested","combinedWorkspaceEdit","uri","primaryRange","editTrackingDecoration","deltaDecorations","options","description","stickiness","focus","editResult","editRange","getDecorationRange","isApplied","hasModel","value","createInstance","tryShowSelector"],"sources":["C:/Users/abhis/OneDrive/Desktop/IgKnightWeb/IgKnightWeb/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nlet PostEditWidget = class PostEditWidget extends Disposable {\n    static { PostEditWidget_1 = this; }\n    static { this.baseId = 'editor.widget.postEditWidget'; }\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        const binding = this._keybindingService.lookupKeybinding(this.showCommand.id)?.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.title,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget = PostEditWidget_1 = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService, _notificationService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._notificationService = _notificationService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    async applyEditAndShowIfNeeded(ranges, edits, canShowWidget, resolve, token) {\n        const model = this._editor.getModel();\n        if (!model || !ranges.length) {\n            return;\n        }\n        const edit = edits.allEdits.at(edits.activeEditIndex);\n        if (!edit) {\n            return;\n        }\n        const onDidSelectEdit = async (newEditIndex) => {\n            const model = this._editor.getModel();\n            if (!model) {\n                return;\n            }\n            await model.undo();\n            this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, resolve, token);\n        };\n        const handleError = (e, message) => {\n            if (isCancellationError(e)) {\n                return;\n            }\n            this._notificationService.error(message);\n            if (canShowWidget) {\n                this.show(ranges[0], edits, onDidSelectEdit);\n            }\n        };\n        let resolvedEdit;\n        try {\n            resolvedEdit = await resolve(edit, token);\n        }\n        catch (e) {\n            return handleError(e, localize('resolveError', \"Error resolving edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n        }\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, resolvedEdit);\n        // Use a decoration to track edits around the trigger range\n        const primaryRange = ranges[0];\n        const editTrackingDecoration = model.deltaDecorations([], [{\n                range: primaryRange,\n                options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n            }]);\n        this._editor.focus();\n        let editResult;\n        let editRange;\n        try {\n            editResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n            editRange = model.getDecorationRange(editTrackingDecoration[0]);\n        }\n        catch (e) {\n            return handleError(e, localize('applyError', \"Error applying edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n        }\n        finally {\n            model.deltaDecorations(editTrackingDecoration, []);\n        }\n        if (token.isCancellationRequested) {\n            return;\n        }\n        if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n            this.show(editRange ?? primaryRange, edits, onDidSelectEdit);\n        }\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance((PostEditWidget), this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        this._currentWidget.value?.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService),\n    __param(6, INotificationService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}